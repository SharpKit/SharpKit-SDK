//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace SharpKit.TinyMCE.dom
{
    /// <summary>
    /// This event gets executed when contents is extracted from the selection.
    /// </summary>
    [JsType(JsMode.Prototype, Name="tinymce.dom.Selection", Export=false)]
    public  partial class Selection
    {
        /// <summary>
        /// Collapse the selection to start or end of range.
        /// </summary>
        /// <param name="to_start">Optional boolean state if to collapse to end or not. Defaults to start.</param>
        public object collapse(bool to_start){return null;}
        /// <summary>
        /// Returns a bookmark location for the current selection. This bookmark object
        /// can then be used to restore the selection after some content modification to the document.
        /// </summary>
        /// <param name="type">Optional state if the bookmark should be simple or not. Default is complex.</param>
        /// <param name="normalized">Optional state that enables you to get a position that it would be after normalization.</param>
        public object getBookmark(object type, bool normalized){return null;}
        /// <summary>
        /// Returns the selected contents using the DOM serializer passed in to this class.
        /// </summary>
        /// <param name="s">Optional settings class with for example output format text or html.</param>
        public string getContent(object s){return null;}
        /// <summary>
        /// Returns the end element of a selection range. If the end is in a text
        /// node the parent element will be returned.
        /// </summary>
        public SharpKit.TinyMCE.dom.Element getEnd(){return null;}
        /// <summary>
        /// Returns the currently selected element or the common ancestor element for both start and end of the selection.
        /// </summary>
        public SharpKit.TinyMCE.dom.Element getNode(){return null;}
        /// <summary>
        /// Returns the browsers internal range object.
        /// </summary>
        /// <param name="w3c">Forces a compatible W3C range on IE.</param>
        public object getRng(bool w3c){return null;}
        /// <summary>
        /// Returns the browsers internal selection object.
        /// </summary>
        public SharpKit.TinyMCE.dom.Selection getSel(){return null;}
        /// <summary>
        /// Returns the start element of a selection range. If the start is in a text
        /// node the parent element will be returned.
        /// </summary>
        public SharpKit.TinyMCE.dom.Element getStart(){return null;}
        /// <summary>
        /// Returns true/false if the selection range is collapsed or not. Collapsed means if it's a caret or a larger selection.
        /// </summary>
        public bool isCollapsed(){return false;}
        /// <summary>
        /// Restores the selection to the specified bookmark.
        /// </summary>
        /// <param name="bookmark">Bookmark to restore selection from.</param>
        public bool moveToBookmark(object bookmark){return false;}
        /// <summary>
        /// Selects the specified element. This will place the start and end of the selection range around the element.
        /// </summary>
        /// <param name="node">HMTL DOM element to select.</param>
        /// <param name="content">Optional bool state if the contents should be selected or not on non IE browser.</param>
        public SharpKit.TinyMCE.dom.Element select(SharpKit.TinyMCE.dom.Element node, bool content){return null;}
        /// <summary>
        /// Constructs a new selection instance.
        /// </summary>
        /// <param name="dom">DOMUtils object reference.</param>
        /// <param name="win">Window to bind the selection object to.</param>
        /// <param name="serializer">DOM serialization class to use for getContent.</param>
        public Selection(SharpKit.TinyMCE.dom.DOMUtils dom, object win, SharpKit.TinyMCE.dom.Serializer serializer){}
        /// <summary>
        /// Executes callback of the current selection matches the specified selector or not and passes the state and args to the callback.
        /// </summary>
        /// <param name="selector">CSS selector to check for.</param>
        /// <param name="callback">Callback with state and args when the selector is matches or not.</param>
        public object selectorChanged(string selector, object callback){return null;}
        /// <summary>
        /// Sets the current selection to the specified content. If any contents is selected it will be replaced
        /// with the contents passed in to this function. If there is no selection the contents will be inserted
        /// where the caret is placed in the editor/page.
        /// </summary>
        /// <param name="content">HTML contents to set could also be other formats depending on settings.</param>
        /// <param name="args">Optional settings object with for example data format.</param>
        public object setContent(string content, object args){return null;}
        /// <summary>
        /// Sets the current selection to the specified DOM element.
        /// </summary>
        /// <param name="n">Element to set as the contents of the selection.</param>
        public SharpKit.TinyMCE.dom.Element setNode(SharpKit.TinyMCE.dom.Element n){return null;}
        /// <summary>
        /// Changes the selection to the specified DOM range.
        /// </summary>
        /// <param name="r">Range to select.</param>
        public object setRng(object r){return null;}
    }
}
