//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace SharpKit.TinyMCE
{
    /// <summary>
    /// This class enables you to add custom editor commands and it contains overrides for native browser commands to address va...
    /// </summary>
    [JsType(JsMode.Prototype, Name="tinymce.EditorCommands", Export=false)]
    public  partial class EditorCommands
    {
        /// <summary>
        /// Adds commands to the command collection.
        /// </summary>
        /// <param name="command_list">Name/value collection with commands to add, the names can also be comma separated.</param>
        /// <param name="type">Optional type to add, defaults to exec. Can be value or state as well.</param>
        public object addCommands(object command_list, string type){return null;}
        /// <summary>
        /// Executes the specified command.
        /// </summary>
        /// <param name="command">Command to execute.</param>
        /// <param name="ui">Optional user interface state.</param>
        /// <param name="value">Optional value for command.</param>
        public bool execCommand(string command, bool ui, object value){return false;}
        /// <summary>
        /// Queries the current state for a command for example if the current selection is "bold".
        /// </summary>
        /// <param name="command">Command to check the state of.</param>
        public bool queryCommandState(string command){return false;}
        /// <summary>
        /// Queries the command value for example the current fontsize.
        /// </summary>
        /// <param name="command">Command to check the value of.</param>
        public object queryCommandValue(string command){return null;}
    }
}
