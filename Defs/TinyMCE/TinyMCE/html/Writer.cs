//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace SharpKit.TinyMCE.html
{
    /// <summary>
    /// This class is used to write HTML tags out it can be used with the Serializer or the SaxParser.
    /// </summary>
    [JsType(JsMode.Prototype, Name="tinymce.html.Writer", Export=false)]
    public  partial class Writer
    {
        /// <summary>
        /// Writes a cdata node such as <![CDATA[data]]>.
        /// </summary>
        /// <param name="text">String to write out inside the cdata.</param>
        public object cdata(string text){return null;}
        /// <summary>
        /// Writes a doctype node such as <!DOCTYPE data>.
        /// </summary>
        /// <param name="text">String to write out inside the doctype.</param>
        public object doctype(string text){return null;}
        /// <summary>
        /// Writes the a end element such as </p>.
        /// </summary>
        /// <param name="name">Name of the element.</param>
        public object end(string name){return null;}
        /// <summary>
        /// Returns the contents that got serialized.
        /// </summary>
        public string getContent(){return null;}
        /// <summary>
        /// Writes a PI node such as <?xml attr="value" ?>.
        /// </summary>
        /// <param name="name">Name of the pi.</param>
        /// <param name="text">String to write out inside the pi.</param>
        public object pi(string name, string text){return null;}
        /// <summary>
        /// Resets the internal buffer if one wants to reuse the writer.
        /// </summary>
        public object reset(){return null;}
        /// <summary>
        /// Writes the a start element such as <p id="a">.
        /// </summary>
        /// <param name="name">Name of the element.</param>
        /// <param name="attrs">Optional attribute array or undefined if it hasn't any.</param>
        /// <param name="empty">Optional empty state if the tag should end like <br />.</param>
        public object start(string name, Array attrs, bool empty){return null;}
        /// <summary>
        /// Writes a text node.
        /// </summary>
        /// <param name="text">String to write out.</param>
        /// <param name="raw">Optional raw state if true the contents wont get encoded.</param>
        public object text(string text, bool raw){return null;}
        /// <summary>
        /// Constructs a new Writer instance.
        /// </summary>
        /// <param name="settings">Name/value settings object.</param>
        public Writer(object settings){}
    }
}
