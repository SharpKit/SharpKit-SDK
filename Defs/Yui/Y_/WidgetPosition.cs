//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Widget extension, which can be used to add positioning support to the base Widget class,
    /// through the <a href="Base.html#method_build">Base.build</a> method.
    /// </summary>
    public partial class WidgetPosition
    {
        /// <summary>
        /// Default attribute change listener for the xy attribute, responsible
        /// for updating the UI, in response to attribute changes.
        /// </summary>
        protected void _afterXYChange(EventFacade e){}
        /// <summary>
        /// Binds event listeners responsible for updating the UI state in response to
        /// Widget position related state changes.
        /// <p>
        /// This method in invoked after bindUI is invoked for the Widget class
        /// using YUI's aop infrastructure.
        /// </p>
        /// </summary>
        protected void _bindUIPosition(){}
        [JsMethod(JsonInitializers=true)]
        public WidgetPosition(){}
        /// <summary>
        /// Default getter for the X attribute. The value is retrieved from
        /// the XY attribute, which is the sole store for the XY state.
        /// </summary>
        protected Y_.DataType_.Number _getX(){return null;}
        /// <summary>
        /// Default getter for the Y attribute. The value is retrieved from
        /// the XY attribute, which is the sole store for the XY state.
        /// </summary>
        protected Y_.DataType_.Number _getY(){return null;}
        /// <summary>
        /// Creates/Initializes the DOM to support xy page positioning.
        /// <p>
        /// This method in invoked after renderUI is invoked for the Widget class
        /// using YUI's aop infrastructure.
        /// </p>
        /// </summary>
        protected void _renderUIPosition(){}
        /// <summary>
        /// Default setter for the X attribute. The setter passes the X value through
        /// to the XY attribute, which is the sole store for the XY state.
        /// </summary>
        protected void _setX(Y_.DataType_.Number val){}
        /// <summary>
        /// Default setter for the Y attribute. The setter passes the Y value through
        /// to the XY attribute, which is the sole store for the XY state.
        /// </summary>
        protected void _setY(Y_.DataType_.Number val){}
        /// <summary>
        /// Synchronizes the UI to match the Widgets xy page position state.
        /// <p>
        /// This method in invoked after syncUI is invoked for the Widget class
        /// using YUI's aop infrastructure.
        /// </p>
        /// </summary>
        protected void _syncUIPosition(){}
        /// <summary>
        /// Updates the UI to reflect the XY page co-ordinates passed in.
        /// </summary>
        protected void _uiSetXY(object val){}
        /// <summary>
        /// Default validator for the XY attribute
        /// </summary>
        protected object _validateXY(Y_.Array val){return null;}
        /// <summary>
        /// Moves the Widget to the specified page xy co-ordinate position.
        /// </summary>
        public void move(Y_.DataType_.Number x, Y_.DataType_.Number y, Y_.Array x_){}
        /// <summary>
        /// Synchronizes the Panel's "xy", "x", and "y" properties with the
        /// Widget's position in the DOM.
        /// </summary>
        public void syncXY(){}
        /// <summary>
        /// Static property used to define the default attribute
        /// configuration introduced by WidgetPosition.
        /// </summary>
        public object ATTRS{get;set;}
        /// <summary>
        /// Page XY co-ordinate pair for the widget.
        /// </summary>
        public Y_.Array xy{get;set;}
    }
}
