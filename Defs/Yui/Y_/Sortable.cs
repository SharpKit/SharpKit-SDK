//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// The class allows you to create a Drag & Drop reordered list.
    /// </summary>
    public partial class Sortable : Y_.Base
    {
        [JsMethod(JsonInitializers=true)]
        public Sortable(){}
        /// <summary>
        /// Test a Node or a selector for the container
        /// </summary>
        public void _test(Node node, object test){}
        /// <summary>
        /// A custom callback to allow a user to extract some sort of id or any other data from the node to use in the "ordering list" and then that data should be returned from the callback.
        /// </summary>
        public Y_.Array getOrdering(object Function){return null;}
        /// <summary>
        /// Get a Sortable instance back from a node reference or a selector string.
        /// </summary>
        public void getSortable(object node){}
        /// <summary>
        /// Join this Sortable with another Sortable instance.
        /// <ul>
        /// <li>full: Exchange nodes with both lists.</li>
        /// <li>inner: Items can go into this list from the joined list.</li>
        /// <li>outer: Items can go out of the joined list into this list.</li>
        /// <li>none: Removes the join.</li>
        /// </ul>
        /// </summary>
        public void join(object Sortable, object String){}
        /// <summary>
        /// Passthrough to the DD.Delegate.ddplug method
        /// </summary>
        public void plug(object Class, object Object){}
        /// <summary>
        /// Register a Sortable instance with the singleton to allow lookups later.
        /// </summary>
        public void reg(object Sortable){}
        /// <summary>
        /// Passthrough to the DD.Delegate syncTargets method.
        /// </summary>
        public void sync(){}
        /// <summary>
        /// Unregister a Sortable instance with the singleton.
        /// </summary>
        public void unreg(object Sortable){}
        /// <summary>
        /// A reference to the DD.Delegate instance.
        /// </summary>
        public Y_.DD_.Delegate @delegate{get;set;}
        /// <summary>
        /// Drag handles to pass on to the internal DD.Delegate instance.
        /// </summary>
        public Y_.Array handles{get;set;}
    }
}
