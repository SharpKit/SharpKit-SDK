//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// The CartesianSeries class creates a chart with horizontal and vertical axes.
    /// </summary>
    public partial class CartesianSeries
    {
        [JsMethod(JsonInitializers=true)]
        public CartesianSeries(){}
        /// <summary>
        /// Parses a color based on a series order and type.
        /// </summary>
        protected object _getDefaultColor(Y_.DataType_.Number index, object type){return null;}
        /// <summary>
        /// Gets the default value for the `styles` attribute. Overrides
        /// base implementation.
        /// </summary>
        protected object _getDefaultStyles(){return null;}
        /// <summary>
        /// Shows/hides contents of the series.
        /// </summary>
        protected void _handleVisibleChange(object e){}
        /// <summary>
        /// Creates a `Graphic` instance.
        /// </summary>
        protected void _setCanvas(){}
        /// <summary>
        /// Destructor implementation for the CartesianSeries class. Calls destroy on all Graphic instances.
        /// </summary>
        protected void destructor(){}
        /// <summary>
        /// Draws the series.
        /// </summary>
        protected void draw(){}
        /// <summary>
        /// Returns the sum of all values for the series.
        /// </summary>
        public Y_.DataType_.Number getTotalValues(){return null;}
        /// <summary>
        /// Calculates the coordinates for the series.
        /// </summary>
        protected void setAreaData(){}
        /// <summary>
        /// Collection of default colors used for marker borders in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultBorderColors{get;set;}
        /// <summary>
        /// Collection of default colors used for marker fills in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultFillColors{get;set;}
        /// <summary>
        /// Collection of default colors used for lines in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultLineColors{get;set;}
        /// <summary>
        /// Collection of default colors used for area fills, histogram fills and pie fills in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultSliceColors{get;set;}
        /// <summary>
        /// Reference to the `Chart` application.
        /// </summary>
        public ChartBase chart{get;private set;}
        /// <summary>
        /// Reference to the `Graph` in which the series is drawn into.
        /// </summary>
        public Graph graph{get;set;}
        /// <summary>
        /// Order of the instance
        /// </summary>
        public Y_.DataType_.Number graphOrder{get;set;}
        /// <summary>
        /// Returns the height of the parent graph
        /// </summary>
        public Y_.DataType_.Number height{get;set;}
        /// <summary>
        /// Order of this instance of this `type`.
        /// </summary>
        public Y_.DataType_.Number order{get;set;}
        /// <summary>
        /// Reference to the `Axis` instance used for assigning
        /// x-values to the graph.
        /// </summary>
        public Axis xAxis{get;set;}
        /// <summary>
        /// x coordinates for the series.
        /// </summary>
        public Y_.Array xcoords{get;set;}
        /// <summary>
        /// Array of x values for the series.
        /// </summary>
        public Y_.Array xData{get;set;}
        /// <summary>
        /// Collection of area maps along the xAxis. Used to determine mouseover for multiple
        /// series.
        /// </summary>
        public Y_.Array xMarkerPlane{get;set;}
        /// <summary>
        /// Distance from a data coordinate to the left/right for setting a hotspot.
        /// </summary>
        public Y_.DataType_.Number xMarkerPlaneOffset{get;set;}
        /// <summary>
        /// Reference to the `Axis` instance used for assigning
        /// y-values to the graph.
        /// </summary>
        public Axis yAxis{get;set;}
        /// <summary>
        /// y coordinates for the series
        /// </summary>
        public Y_.Array ycoords{get;set;}
        /// <summary>
        /// Array of y values for the series.
        /// </summary>
        public Y_.Array yData{get;set;}
        /// <summary>
        /// Collection of area maps along the yAxis. Used to determine mouseover for multiple
        /// series.
        /// </summary>
        public Y_.Array yMarkerPlane{get;set;}
        /// <summary>
        /// Distance from a data coordinate to the top/bottom for setting a hotspot.
        /// </summary>
        public Y_.DataType_.Number yMarkerPlaneOffset{get;set;}
    }
}
