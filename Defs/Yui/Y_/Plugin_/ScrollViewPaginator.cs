//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_.Plugin_
{
    /// <summary>
    /// Scrollview plugin that adds support for paging
    /// </summary>
    public partial class ScrollViewPaginator : Y_.Plugin_.Base
    {
        /// <summary>
        /// index attr change handler
        /// </summary>
        protected void _afterIndexChange(object UNKNOWN){}
        /// <summary>
        /// After host render handler
        /// </summary>
        protected void _afterRender(object UNKNOWN){}
        /// <summary>
        /// Calculate the page boundary offsets
        /// </summary>
        protected void _calcOffsets(){}
        /// <summary>
        /// Executed to respond to the flick event, by over-riding the default flickFrame animation.
        /// This is needed to determine if the next or prev page should be activated.
        /// </summary>
        protected void _flickFrame(){}
        /// <summary>
        /// Return the offset value where scrollview should scroll to.
        /// Neccesary because index # doesn't nessecarily map up to location in the DOM because of this._manageDOM()
        /// </summary>
        protected Y_.DataType_.Number _getTargetOffset(Y_.DataType_.Number index){return null;}
        /// <summary>
        /// Manages adding & removing slides from the DOM, to improve performance & memory usage
        /// </summary>
        protected void _manageDOM(){}
        /// <summary>
        /// scrollEnd handler detects if a page needs to change
        /// </summary>
        protected void _scrollEnded(object UNKNOWN){}
        /// <summary>
        /// Update the UI based on the current page index
        /// </summary>
        protected void _uiIndex(Y_.DataType_.Number index){}
        /// <summary>
        /// Designated initializer
        /// </summary>
        public void initializer(){}
        /// <summary>
        /// Scroll to the next page in the scrollview, with animation
        /// </summary>
        public void next(){}
        /// <summary>
        /// Scroll to the previous page in the scrollview, with animation
        /// </summary>
        public void prev(){}
        /// <summary>
        /// Scroll to a given page in the scrollview, with animation.
        /// </summary>
        public void scrollTo(Y_.DataType_.Number index, Y_.DataType_.Number duration, object easing){}
        /// <summary>
        /// Snaps the scrollview to the currently selected page
        /// </summary>
        public void snapToCurrent(Y_.DataType_.Number duration, object easing){}
        /// <summary>
        /// The default attribute configuration for the plugin
        /// </summary>
        public object ATTRS{get;set;}
        /// <summary>
        /// The default snap to current duration and easing values used on scroll end.
        /// </summary>
        public object SNAP_TO_CURRENT{get;set;}
    }
}
