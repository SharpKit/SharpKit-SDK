//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_.Plugin_
{
    /// <summary>
    /// The base class for all Plugin instances.
    /// </summary>
    public partial class Base : Y_.Base
    {
        [JsMethod(JsonInitializers=true)]
        public Base(){}
        /// <summary>
        /// Listens for the "after" moment of events fired by the host object.
        /// Listeners attached through this method will be detached when the plugin is unplugged.
        /// </summary>
        public EventHandle afterHostEvent(object type, JsAction fn, object context){return null;}
        /// <summary>
        /// Injects a function to be executed after a given method on host object.
        /// The function will be detached when the plugin is unplugged.
        /// </summary>
        public EventHandle afterHostMethod(object method, JsAction fn, object context){return null;}
        /// <summary>
        /// Injects a function to be executed before a given method on host object.
        /// The function will be detached when the plugin is unplugged.
        /// </summary>
        public EventHandle beforeHostMethod(object method, JsAction fn, object context){return null;}
        /// <summary>
        /// Destructor lifecycle implementation.
        /// Removes any event listeners or injected methods applied by the Plugin
        /// </summary>
        public void destructor(){}
        /// <summary>
        /// Listens for the "after" moment of events fired by the host,
        /// or injects code "after" a given method on the host.
        /// </summary>
        public EventHandle doAfter(object strMethod, JsAction fn, object context){return null;}
        /// <summary>
        /// Listens for the "on" moment of events fired by the host,
        /// or injects code "before" a given method on the host.
        /// </summary>
        public EventHandle doBefore(object strMethod, JsAction fn, object context){return null;}
        /// <summary>
        /// Initializer lifecycle implementation.
        /// </summary>
        public void initializer(object config){}
        /// <summary>
        /// Listens for the "on" moment of events fired by the host object.
        /// Listeners attached through this method will be detached when the plugin is unplugged.
        /// </summary>
        public EventHandle onHostEvent(object type, JsAction fn, object context){return null;}
        /// <summary>
        /// Object defining the set of attributes supported by the Plugin.Base class
        /// </summary>
        public object ATTRS{get;set;}
        /// <summary>
        /// The plugin's host object.
        /// </summary>
        public Host host{get;set;}
    }
}
