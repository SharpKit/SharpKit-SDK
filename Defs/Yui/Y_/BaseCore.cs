//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// The BaseCore class, is the lightest version of Base, and provides Base's
    /// basic lifecycle management and ATTRS construction support, but doesn't
    /// fire init/destroy or attribute change events.
    /// BaseCore also handles the chaining of initializer and destructor methods across
    /// the hierarchy as part of object construction and destruction. Additionally, attributes
    /// configured through the static <a href="#property_BaseCore.ATTRS">ATTRS</a>
    /// property for each class in the hierarchy will be initialized by BaseCore.
    /// Classes which require attribute support, but don't intend to use/expose attribute
    /// change events can extend BaseCore instead of Base for optimal kweight and
    /// runtime performance.
    /// </summary>
    public partial class BaseCore
    {
        /// <summary>
        /// Returns an aggregated set of attribute configurations, by traversing
        /// the class hierarchy.
        /// </summary>
        protected object _getAttrCfgs(){return null;}
        /// <summary>
        /// Returns the class hierarchy for this object, with BaseCore being the last class in the array.
        /// </summary>
        protected object _getClasses(){return null;}
        /// <summary>
        /// Destroy lifecycle method. Invokes destructors for the class hierarchy.
        /// </summary>
        public BaseCore destroy(){return null;}
        /// <summary>
        /// Init lifecycle method, invoked during construction. Sets up attributes
        /// and invokes initializers for the class hierarchy.
        /// </summary>
        public BaseCore init(object cfg){return null;}
        /// <summary>
        /// Default toString implementation. Provides the constructor NAME
        /// and the instance guid, if set.
        /// </summary>
        public object toString(){return null;}
        /// <summary>
        /// The default set of attributes which will be available for instances of this class, and
        /// their configuration. In addition to the configuration properties listed by
        /// AttributeCore's <a href="AttributeCore.html#method_addAttr">addAttr</a> method,
        /// the attribute can also be configured with a "cloneDefaultValue" property, which
        /// defines how the statically defined value field should be protected
        /// ("shallow", "deep" and false are supported values).
        /// By default if the value is an object literal or an array it will be "shallow"
        /// cloned, to protect the default value.
        /// </summary>
        public object ATTRS{get;set;}
    }
}
