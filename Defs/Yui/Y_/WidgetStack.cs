//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Widget extension, which can be used to add stackable (z-index) support to the
    /// base Widget class along with a shimming solution, through the
    /// <a href="Base.html#method_build">Base.build</a> method.
    /// </summary>
    public partial class WidgetStack
    {
        /// <summary>
        /// Default attribute change listener for the shim attribute, responsible
        /// for updating the UI, in response to attribute changes.
        /// </summary>
        protected void _afterShimChange(EventFacade e){}
        /// <summary>
        /// Default attribute change listener for the zIndex attribute, responsible
        /// for updating the UI, in response to attribute changes.
        /// </summary>
        protected void _afterZIndexChange(EventFacade e){}
        /// <summary>
        /// Binds event listeners responsible for updating the UI state in response to
        /// Widget stack related state changes.
        /// <p>
        /// This method is invoked after bindUI is invoked for the Widget class
        /// using YUI's aop infrastructure.
        /// </p>
        /// </summary>
        protected void _bindUIStack(){}
        /// <summary>
        /// Parses a `zIndex` attribute value from this widget's `srcNode`.
        /// </summary>
        protected object _parseZIndex(Node srcNode){return null;}
        /// <summary>
        /// Creates/Initializes the DOM to support stackability.
        /// <p>
        /// This method in invoked after renderUI is invoked for the Widget class
        /// using YUI's aop infrastructure.
        /// </p>
        /// </summary>
        protected void _renderUIStack(){}
        /// <summary>
        /// Default setter for zIndex attribute changes. Normalizes zIndex values to
        /// numbers, converting non-numerical values to 0.
        /// </summary>
        protected Y_.DataType_.Number _setZIndex(object zIndex){return null;}
        /// <summary>
        /// Synchronizes the UI to match the Widgets stack state. This method in
        /// invoked after syncUI is invoked for the Widget class using YUI's aop infrastructure.
        /// </summary>
        protected void _syncUIStack(){}
        /// <summary>
        /// Updates the UI to enable/disable the shim. If the widget is not currently visible,
        /// creation of the shim is deferred until it is made visible, for performance reasons.
        /// </summary>
        protected void _uiSetShim(object enable){}
        /// <summary>
        /// Updates the UI to reflect the zIndex value passed in.
        /// </summary>
        protected void _uiSetZIndex(Y_.DataType_.Number zIndex){}
        /// <summary>
        /// For IE6, synchronizes the size and position of iframe shim to that of
        /// Widget bounding box which it is protecting. For all other browsers,
        /// this method does not do anything.
        /// </summary>
        public void sizeShim(){}
        /// <summary>
        /// Static property used to define the default attribute
        /// configuration introduced by WidgetStack.
        /// </summary>
        public object ATTRS{get;set;}
        /// <summary>
        /// The HTML parsing rules for the WidgetStack class.
        /// </summary>
        public object HTML_PARSER{get;set;}
    }
}
