//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Provides core language utilites and extensions used throughout YUI.
    /// </summary>
    public partial class Lang
    {
        /// <summary>
        /// Returns `true` if the given function appears to be implemented in native code,
        /// `false` otherwise. Will always return `false` -- even in ES5-capable browsers --
        /// if the `useNativeES5` YUI config option is set to `false`.
        /// This isn't guaranteed to be 100% accurate and won't work for anything other than
        /// functions, but it can be useful for determining whether a function like
        /// `Array.prototype.forEach` is native or a JS shim provided by another library.
        /// There's a great article by @kangax discussing certain flaws with this technique:
        /// <http://perfectionkills.com/detecting-built-in-host-methods/>
        /// While his points are valid, it's still possible to benefit from this function
        /// as long as it's used carefully and sparingly, and in such a way that false
        /// negatives have minimal consequences. It's used internally to avoid using
        /// potentially broken non-native ES5 shims that have been added to the page by
        /// other libraries.
        /// </summary>
        protected object _isNative(JsAction fn){return null;}
        /// <summary>
        /// Determines whether or not the provided item is an array.
        /// Returns `false` for array-like collections such as the function `arguments`
        /// collection or `HTMLElement` collections. Use `Y.Array.test()` if you want to
        /// test for an array-like collection.
        /// </summary>
        public object isArray(object o){return null;}
        /// <summary>
        /// Determines whether or not the provided item is a boolean.
        /// </summary>
        public object isBoolean(object o){return null;}
        /// <summary>
        /// Determines whether or not the supplied item is a date instance.
        /// </summary>
        public object isDate(object o){return null;}
        /// <summary>
        /// <p>
        /// Determines whether or not the provided item is a function.
        /// Note: Internet Explorer thinks certain functions are objects:
        /// </p>
        /// <pre>
        /// var obj = document.createElement("object");
        /// Y.Lang.isFunction(obj.getAttribute) // reports false in IE
        /// &nbsp;
        /// var input = document.createElement("input"); // append to body
        /// Y.Lang.isFunction(input.focus) // reports false in IE
        /// </pre>
        /// <p>
        /// You will have to implement additional tests if these functions
        /// matter to you.
        /// </p>
        /// </summary>
        public object isFunction(object o){return null;}
        /// <summary>
        /// Determines whether or not the provided item is null.
        /// </summary>
        public object isNull(object o){return null;}
        /// <summary>
        /// Determines whether or not the provided item is a legal number.
        /// </summary>
        public object isNumber(object o){return null;}
        /// <summary>
        /// Determines whether or not the provided item is of type object
        /// or function. Note that arrays are also objects, so
        /// <code>Y.Lang.isObject([]) === true</code>.
        /// </summary>
        public object isObject(object o, object failfn){return null;}
        /// <summary>
        /// Determines whether or not the provided item is a string.
        /// </summary>
        public object isString(object o){return null;}
        /// <summary>
        /// Determines whether or not the provided item is undefined.
        /// </summary>
        public object isUndefined(object o){return null;}
        /// <summary>
        /// A convenience method for detecting a legitimate non-null value.
        /// Returns false for null/undefined/NaN, true for other values,
        /// including 0/false/''
        /// </summary>
        public object isValue(object o){return null;}
        /// <summary>
        /// Returns the current time in milliseconds.
        /// </summary>
        public Y_.DataType_.Number now(){return null;}
        /// <summary>
        /// Lightweight version of <code>Y.substitute</code>. Uses the same template
        /// structure as <code>Y.substitute</code>, but doesn't support recursion,
        /// auto-object coersion, or formats.
        /// </summary>
        public object sub(object s, object o){return null;}
        /// <summary>
        /// Returns a string without any leading or trailing whitespace.  If
        /// the input is not a string, the input will be returned untouched.
        /// </summary>
        public object trim(object s){return null;}
        /// <summary>
        /// Returns a string without any leading whitespace.
        /// </summary>
        public object trimLeft(object s){return null;}
        /// <summary>
        /// Returns a string without any trailing whitespace.
        /// </summary>
        public object trimRight(object s){return null;}
        /// <summary>
        /// Returns one of the following strings, representing the type of the item passed
        /// in:
        /// * "array"
        /// * "boolean"
        /// * "date"
        /// * "error"
        /// * "function"
        /// * "null"
        /// * "number"
        /// * "object"
        /// * "regexp"
        /// * "string"
        /// * "undefined"
        /// Known issues:
        /// * `typeof HTMLElementCollection` returns function in Safari, but
        /// `Y.Lang.type()` reports "object", which could be a good thing --
        /// but it actually caused the logic in <code>Y.Lang.isObject</code> to fail.
        /// </summary>
        public object type(object o){return null;}
    }
}
