//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// PieSeries visualizes data as a circular chart divided into wedges which represent data as a
    /// percentage of a whole.
    /// </summary>
    public partial class PieSeries
    {
        [JsMethod(JsonInitializers=true)]
        public PieSeries(){}
        /// <summary>
        /// Colors used if style colors are not specified
        /// </summary>
        protected object _getDefaultColor(Y_.DataType_.Number index, object type){return null;}
        /// <summary>
        /// Draws the series. Overrides the base implementation.
        /// </summary>
        protected void draw(){}
        /// <summary>
        /// Draws the markers
        /// </summary>
        protected void drawPlots(){}
        /// <summary>
        /// Resizes and positions markers based on a mouse interaction.
        /// </summary>
        protected void updateMarkerState(object type, Y_.DataType_.Number i){}
        /// <summary>
        /// Collection of default colors used for marker borders in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultBorderColors{get;set;}
        /// <summary>
        /// Collection of default colors used for marker fills in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultFillColors{get;set;}
        /// <summary>
        /// Collection of default colors used for lines in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultLineColors{get;set;}
        /// <summary>
        /// Collection of default colors used for area fills, histogram fills and pie fills in a series when not specified by user.
        /// </summary>
        protected Y_.Array _defaultSliceColors{get;set;}
        /// <summary>
        /// Reference to the `Axis` instance used for assigning
        /// category values to the graph.
        /// </summary>
        public Axis categoryAxis{get;set;}
        /// <summary>
        /// Reference to the `Graph` in which the series is drawn into.
        /// </summary>
        public Graph graph{get;set;}
        /// <summary>
        /// Order of this instance of this `type`.
        /// </summary>
        public Y_.DataType_.Number order{get;set;}
        /// <summary>
        /// Style properties used for drawing markers. This attribute is inherited from `MarkerSeries`. Below are the default values:
        /// <dl>
        /// <dt>fill</dt><dd>A hash containing the following values:
        /// <dl>
        /// <dt>colors</dt><dd>An array of colors to be used for the marker fills. The color for each marker is retrieved from the
        /// array below:<br/>
        /// `["#66007f", "#a86f41", "#295454", "#996ab2", "#e8cdb7", "#90bdbd","#000000","#c3b8ca", "#968373", "#678585"]`
        /// </dd>
        /// <dt>alphas</dt><dd>An array of alpha references (Number from 0 to 1) indicating the opacity of each marker fill. The default value is [1].</dd>
        /// </dl>
        /// </dd>
        /// <dt>border</dt><dd>A hash containing the following values:
        /// <dl>
        /// <dt>color</dt><dd>An array of colors to be used for the marker borders. The color for each marker is retrieved from the
        /// array below:<br/>
        /// `["#205096", "#b38206", "#000000", "#94001e", "#9d6fa0", "#e55b00", "#5e85c9", "#adab9e", "#6ac291", "#006457"]`
        /// <dt>alpha</dt><dd>Number from 0 to 1 indicating the opacity of the marker border. The default value is 1.</dd>
        /// <dt>weight</dt><dd>Number indicating the width of the border. The default value is 1.</dd>
        /// </dl>
        /// </dd>
        /// <dt>over</dt><dd>hash containing styles for markers when highlighted by a `mouseover` event. The default
        /// values for each style is null. When an over style is not set, the non-over value will be used. For example,
        /// the default value for `marker.over.fill.color` is equivalent to `marker.fill.color`.</dd>
        /// </dl>
        /// </summary>
        public object styles{get;set;}
    }
}
