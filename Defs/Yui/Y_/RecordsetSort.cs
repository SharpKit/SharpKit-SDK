//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Plugin that adds default and custom sorting functionality to the Recordset utility
    /// </summary>
    public partial class RecordsetSort
    {
        [JsMethod(JsonInitializers=true)]
        public RecordsetSort(){}
        /// <summary>
        /// Sorts the recordset based on the last-used sort parameters, but flips the order. (ie: Descending becomes ascending, and vice versa).
        /// </summary>
        public void flip(){}
        /// <summary>
        /// Sets up the default function to use when the "sort" event is fired.
        /// </summary>
        protected void initializer(){}
        /// <summary>
        /// Resorts the recordset based on the last-used sort parameters (stored in 'lastSortProperties' ATTR)
        /// </summary>
        public void resort(){}
        /// <summary>
        /// Reverses the recordset calling the standard array.reverse() method.
        /// </summary>
        public void reverse(){}
        /// <summary>
        /// Sorts the recordset.
        /// </summary>
        public void sort(object field, object desc){}
        /// <summary>
        /// The last properties used to sort. Consists of an object literal with the keys "field", "desc", and "sorter"
        /// </summary>
        public object lastSortProperties{get;set;}
    }
}
