//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// A simple FIFO queue.  Items are added to the Queue with add(1..n items) and
    /// removed using next().
    /// </summary>
    public partial class Queue
    {
        /// <summary>
        /// Initialize the queue
        /// </summary>
        protected void _init(){}
        /// <summary>
        /// Add 0..n items to the end of the queue.
        /// </summary>
        public object add(object item){return null;}
        /// <summary>
        /// Returns the current index in the queue of the specified item
        /// </summary>
        public Y_.DataType_.Number indexOf(object needle){return null;}
        /// <summary>
        /// Get the last in the queue. LIFO support.
        /// </summary>
        public object last(){return null;}
        /// <summary>
        /// Get the next item in the queue. FIFO support
        /// </summary>
        public object next(){return null;}
        /// <summary>
        /// Moves the referenced item to the head of the queue
        /// </summary>
        public void promote(object item){}
        /// <summary>
        /// Removes the referenced item from the queue
        /// </summary>
        public void remove(object item){}
        /// <summary>
        /// Returns the current number of queued items.
        /// </summary>
        public Y_.DataType_.Number size(){return null;}
        /// <summary>
        /// The collection of enqueued items
        /// </summary>
        protected Y_.Array _q{get;set;}
    }
}
