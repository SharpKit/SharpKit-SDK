//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_.Test_
{
    /// <summary>
    /// Runs test suites and test cases, providing events to allowing for the
    /// interpretation of test results.
    /// </summary>
    public partial class Runner
    {
        /// <summary>
        /// Adds a test suite or test case to the list of test objects to run.
        /// </summary>
        public object add(object testObject){return null;}
        /// <summary>
        /// Removes all test objects from the runner.
        /// </summary>
        public object clear(){return null;}
        /// <summary>
        /// Returns the coverage report for the files that have been executed.
        /// This returns only coverage information for files that have been
        /// instrumented using YUI Test Coverage and only those that were run
        /// in the same pass.
        /// </summary>
        public object getCoverage(JsAction format){return null;}
        /// <summary>
        /// Retrieves the name of the current result set.
        /// </summary>
        public object getName(){return null;}
        /// <summary>
        /// Returns the last complete results set from the TestRunner. Null is returned
        /// if the TestRunner is running or no tests have been run.
        /// </summary>
        public object getResults(JsAction format){return null;}
        /// <summary>
        /// Indicates that the TestRunner is busy running tests and therefore can't
        /// be stopped and results cannot be gathered.
        /// </summary>
        public object isRunning(){return null;}
        /// <summary>
        /// Indicates if the TestRunner is waiting for a test to resume
        /// </summary>
        public object isWaiting(){return null;}
        /// <summary>
        /// Resumes the TestRunner after wait() was called.
        /// </summary>
        public object resume(JsAction segment){return null;}
        /// <summary>
        /// Runs the test suite.
        /// </summary>
        public object run(object options){return null;}
        /// <summary>
        /// The name assigned to the master suite of the TestRunner. This is the name
        /// that is output as the root's name when results are retrieved.
        /// </summary>
        public object setName(object name){return null;}
    }
}
