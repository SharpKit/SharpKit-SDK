//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// NumericAxis manages numeric data on an axis.
    /// </summary>
    public partial class NumericAxis
    {
        [JsMethod(JsonInitializers=true)]
        public NumericAxis(){}
        /// <summary>
        /// Checks to see if data extends beyond the range of the axis. If so,
        /// that data will need to be hidden. This method is internal, temporary and subject
        /// to removal in the future.
        /// </summary>
        protected object _hasDataOverflow(){return null;}
        /// <summary>
        /// Formats a label based on the axis type and optionally specified format.
        /// </summary>
        public object formatLabel(object value, object format){return null;}
        /// <summary>
        /// Calculates and returns a value based on the number of labels and the index of
        /// the current label.
        /// </summary>
        public object getLabelByIndex(Y_.DataType_.Number i, Y_.DataType_.Number l){return null;}
        /// <summary>
        /// Returns the sum of all values per key.
        /// </summary>
        public Y_.DataType_.Number getTotalByKey(object key){return null;}
        /// <summary>
        /// Object containing properties used by the `labelFunction` to format a
        /// label.
        /// </summary>
        public object labelFormat{get;set;}
        /// <summary>
        /// Method used for formatting a label. This attribute allows for the default label formatting method to overridden. The method use would need
        /// to implement the arguments below and return a `String` or an `HTMLElement`. The default implementation of the method returns a `String`. The output of this method
        /// will be rendered to the DOM using `appendChild`. If you override the `labelFunction` method and return an html string, you will also need to override the Axis'
        /// `appendLabelFunction` to accept html as a `String`.
        /// <dl>
        /// <dt>val</dt><dd>Label to be formatted. (`String`)</dd>
        /// <dt>format</dt><dd>Object containing properties used to format the label. (optional)</dd>
        /// </dl>
        /// </summary>
        public JsAction labelFunction{get;set;}
    }
}
