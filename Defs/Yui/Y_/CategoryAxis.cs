//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// CategoryAxis manages category data on an axis.
    /// </summary>
    public partial class CategoryAxis
    {
        /// <summary>
        /// Formats a label based on the axis type and optionally specified format.
        /// </summary>
        public object formatLabel(object value, object format){return null;}
        /// <summary>
        /// Returns an array of values based on an identifier key.
        /// </summary>
        public Y_.Array getDataByKey(object value){return null;}
        /// <summary>
        /// Gets the distance that the first and last ticks are offset from there respective
        /// edges.
        /// </summary>
        public Y_.DataType_.Number getEdgeOffset(Y_.DataType_.Number ct, Y_.DataType_.Number l){return null;}
        /// <summary>
        /// Returns a value based of a key value and an index.
        /// </summary>
        public object getKeyValueAt(object key, Y_.DataType_.Number index){return null;}
        /// <summary>
        /// Calculates and returns a value based on the number of labels and the index of
        /// the current label.
        /// </summary>
        public object getLabelByIndex(Y_.DataType_.Number i, Y_.DataType_.Number l){return null;}
        /// <summary>
        /// Returns the distance between major units on an axis.
        /// </summary>
        public Y_.DataType_.Number getMajorUnitDistance(Y_.DataType_.Number len, Y_.DataType_.Number uiLen, object majorUnit){return null;}
        /// <summary>
        /// Returns a string corresponding to the last label on an
        /// axis.
        /// </summary>
        public object getMaximumValue(){return null;}
        /// <summary>
        /// Returns a string corresponding to the first label on an
        /// axis.
        /// </summary>
        public object getMinimumValue(){return null;}
        /// <summary>
        /// Returns the total number of majorUnits that will appear on an axis.
        /// </summary>
        public Y_.DataType_.Number getTotalMajorUnits(object majorUnit, Y_.DataType_.Number len){return null;}
    }
}
