//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Widget extension providing functionality enabling a Widget to be a
    /// child of another Widget.
    /// </summary>
    public partial class WidgetChild
    {
        [JsMethod(JsonInitializers=true)]
        public WidgetChild(){}
        /// <summary>
        /// Number representing the depth of this Widget relative to
        /// the root Widget in the object heirarchy.
        /// </summary>
        public Y_.DataType_.Number depth{get;private set;}
        /// <summary>
        /// Number representing the Widget's ordinal position in its
        /// parent Widget.
        /// </summary>
        public Y_.DataType_.Number index{get;private set;}
        /// <summary>
        /// Retrieves the parent of the Widget in the object hierarchy.
        /// </summary>
        public Widget parent{get;private set;}
        /// <summary>
        /// Returns the root Widget in the object hierarchy.  If the
        /// ROOT_TYPE property is set, the search for the root Widget will be
        /// constrained to parent Widgets of the specified type.
        /// </summary>
        public Widget root{get;private set;}
        /// <summary>
        /// Constructor reference used to determine the root of a Widget-based
        /// object tree.
        /// <p>
        /// Currently used to control the behavior of the <code>root</code>
        /// attribute so that recursing up the object heirarchy can be constrained
        /// to a specific type of Widget.  Widget authors should set this property
        /// to the constructor function for a given Widget implementation.
        /// </p>
        /// </summary>
        public object ROOT_TYPE{get;set;}
        /// <summary>
        /// Number indicating if the Widget is selected.  Possible
        /// values are:
        /// <dl>
        /// <dt>0</dt> <dd>(Default) Not selected</dd>
        /// <dt>1</dt> <dd>Fully selected</dd>
        /// <dt>2</dt> <dd>Partially selected</dd>
        /// </dl>
        /// </summary>
        public Y_.DataType_.Number selected{get;set;}
    }
}
