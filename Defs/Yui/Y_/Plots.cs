//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Utility class used for drawing markers.
    /// </summary>
    public partial class Plots
    {
        /// <summary>
        /// Draws a series of markers in a single shape instance.
        /// </summary>
        protected void _createGroupMarkers(object styles){}
        /// <summary>
        /// Returns the correct group shape class.
        /// </summary>
        protected JsAction _getGroupShape(object shape){return null;}
        /// <summary>
        /// Parses a color from an array.
        /// </summary>
        protected object _getItemColor(Y_.Array val, Y_.DataType_.Number i){return null;}
        /// <summary>
        /// Gets the default values for series that use the utility. This method is used by
        /// the class' `styles` attribute's getter to get build default values.
        /// </summary>
        protected object _getPlotDefaults(){return null;}
        /// <summary>
        /// Returns marker state based on event type
        /// </summary>
        protected object _getState(object type){return null;}
        /// <summary>
        /// Method used by `styles` setter. Overrides base implementation.
        /// </summary>
        protected object _setStyles(object newStyles){return null;}
        /// <summary>
        /// Draws the markers
        /// </summary>
        protected void drawPlots(){}
        /// <summary>
        /// Gets and styles a marker. If there is a marker in cache, it will use it. Otherwise
        /// it will create one.
        /// </summary>
        protected Shape getMarker(object styles, Y_.DataType_.Number order, Y_.DataType_.Number index){return null;}
        /// <summary>
        /// Resizes and positions markers based on a mouse interaction.
        /// </summary>
        protected void updateMarkerState(object type, Y_.DataType_.Number i){}
    }
}
