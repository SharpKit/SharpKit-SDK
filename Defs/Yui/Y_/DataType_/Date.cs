//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_.DataType_
{
    /// <summary>
    /// DataType.Date provides a set of utility functions to operate against Date objects.
    /// </summary>
    public partial class Date
    {
        /// <summary>
        /// Adds a specified number of days to the given date.
        /// </summary>
        public Date addDays(Date oDate, Number numMonths){return null;}
        /// <summary>
        /// Adds a specified number of months to the given date.
        /// </summary>
        public Date addMonths(Date oDate, Number numMonths){return null;}
        /// <summary>
        /// Adds a specified number of years to the given date.
        /// </summary>
        public Date addYears(Date oDate, Number numYears){return null;}
        /// <summary>
        /// Checks whether two dates correspond to the same date and time.
        /// </summary>
        public object areEqual(Date aDate, Date bDate){return null;}
        /// <summary>
        /// Takes a native JavaScript Date and returns the number of days
        /// in the month that the given date belongs to.
        /// </summary>
        public Number daysInMonth(Date oDate){return null;}
        /// <summary>
        /// Takes a native JavaScript Date and formats it as a string for display to user.
        /// </summary>
        public object format(Date oDate, object oConfig){return null;}
        /// <summary>
        /// Checks whether the first date comes later than the second.
        /// </summary>
        public object isGreater(Date aDate, Date bDate){return null;}
        /// <summary>
        /// Checks whether the first date comes later than or is the same as
        /// the second.
        /// </summary>
        public object isGreaterOrEqual(Date aDate, Date bDate){return null;}
        /// <summary>
        /// Checks whether the date is between two other given dates.
        /// </summary>
        public object isInRange(Date aDate, Date bDate, Date cDate){return null;}
        /// <summary>
        /// Checks whether a native JavaScript Date contains a valid value.
        /// </summary>
        public object isValidDate(Date oDate){return null;}
        /// <summary>
        /// Lists all dates in a given month.
        /// </summary>
        public Y_.Array listOfDatesInMonth(Date oDate){return null;}
        /// <summary>
        /// Converts data to type Date.
        /// </summary>
        public Date parse(object data){return null;}
    }
}
