//***************************************************
//* This file was generated by tool
//* SharpKit
//***************************************************
using System;
using System.Collections.Generic;
using SharpKit.JavaScript;
namespace Y_
{
    /// <summary>
    /// Slider extension that allows clicking on the Slider's rail element,
    /// triggering the thumb to align with the location of the click.
    /// </summary>
    public partial class ClickableRail
    {
        /// <summary>
        /// Attaches DOM event subscribers to support rail interaction.
        /// </summary>
        protected void _bindClickableRail(){}
        /// <summary>
        /// Default behavior for the railMouseDown event.  Centers the thumb at
        /// the click location and passes control to the DDM to behave as though
        /// the thumb itself were clicked in preparation for a drag operation.
        /// </summary>
        protected void _defRailMouseDownFn(Event e){}
        /// <summary>
        /// Calculates the top left position the thumb should be moved to to
        /// align the click XY with the center of the specified node.
        /// </summary>
        protected Y_.Array _getThumbDestination(object e, Node node){return null;}
        /// <summary>
        /// Initializes the internal state and sets up events.
        /// </summary>
        protected void _initClickableRail(){}
        /// <summary>
        /// Dispatches the railMouseDown event.
        /// </summary>
        protected void _onRailMouseDown(object e){}
        /// <summary>
        /// Resolves which thumb to actuate if any.  Override this if you want to
        /// support multiple thumbs.  By default, returns the Drag instance for
        /// the thumb stored by the Slider.
        /// </summary>
        protected Y_.DD_.Drag _resolveThumb(object e){return null;}
        /// <summary>
        /// Detaches DOM event subscribers for cleanup/destruction cycle.
        /// </summary>
        protected void _unbindClickableRail(){}
    }
}
