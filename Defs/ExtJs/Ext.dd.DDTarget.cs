//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:40 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.dd
{
    #region DDTarget
    /// <inheritdocs />
    /// <summary>
    /// <p>A DragDrop implementation that does not move, but can be a drop
    /// target.  You would get the same result by simply omitting implementation
    /// for the event callbacks, but this way we reduce the processing cost of the
    /// event listener and the callbacks.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class DDTarget : Ext.dd.DragDrop
    {
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.addInvalidHandleClass">Ext.dd.DragDrop.addInvalidHandleClass</see>
        /// </summary>
        public void addInvalidHandleClass(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.addInvalidHandleId">Ext.dd.DragDrop.addInvalidHandleId</see>
        /// </summary>
        public void addInvalidHandleId(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.addInvalidHandleType">Ext.dd.DragDrop.addInvalidHandleType</see>
        /// </summary>
        public void addInvalidHandleType(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.endDrag">Ext.dd.DragDrop.endDrag</see>
        /// </summary>
        public void endDrag(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.isValidHandleChild">Ext.dd.DragDrop.isValidHandleChild</see>
        /// </summary>
        public void isValidHandleChild(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onDrag">Ext.dd.DragDrop.onDrag</see>
        /// </summary>
        public void onDrag(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onDragDrop">Ext.dd.DragDrop.onDragDrop</see>
        /// </summary>
        public void onDragDrop(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onDragEnter">Ext.dd.DragDrop.onDragEnter</see>
        /// </summary>
        public void onDragEnter(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onDragOut">Ext.dd.DragDrop.onDragOut</see>
        /// </summary>
        public void onDragOut(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onDragOver">Ext.dd.DragDrop.onDragOver</see>
        /// </summary>
        public void onDragOver(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onInvalidDrop">Ext.dd.DragDrop.onInvalidDrop</see>
        /// </summary>
        public void onInvalidDrop(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onMouseDown">Ext.dd.DragDrop.onMouseDown</see>
        /// </summary>
        public void onMouseDown(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.onMouseUp">Ext.dd.DragDrop.onMouseUp</see>
        /// </summary>
        public void onMouseUp(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.removeInvalidHandleClass">Ext.dd.DragDrop.removeInvalidHandleClass</see>
        /// </summary>
        public void removeInvalidHandleClass(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.removeInvalidHandleId">Ext.dd.DragDrop.removeInvalidHandleId</see>
        /// </summary>
        public void removeInvalidHandleId(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.removeInvalidHandleType">Ext.dd.DragDrop.removeInvalidHandleType</see>
        /// </summary>
        public void removeInvalidHandleType(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.resetConstraints">Ext.dd.DragDrop.resetConstraints</see>
        /// </summary>
        public void resetConstraints(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.setDragElId">Ext.dd.DragDrop.setDragElId</see>
        /// </summary>
        public void setDragElId(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.setHandleElId">Ext.dd.DragDrop.setHandleElId</see>
        /// </summary>
        public void setHandleElId(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.setInitPosition">Ext.dd.DragDrop.setInitPosition</see>
        /// </summary>
        public void setInitPosition(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.setOuterHandleElId">Ext.dd.DragDrop.setOuterHandleElId</see>
        /// </summary>
        public void setOuterHandleElId(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.setXConstraint">Ext.dd.DragDrop.setXConstraint</see>
        /// </summary>
        public void setXConstraint(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.setYConstraint">Ext.dd.DragDrop.setYConstraint</see>
        /// </summary>
        public void setYConstraint(){}
        /// <summary>
        /// Overridden and disabled. A DDTarget does not support being dragged.
        /// Overrides: <see cref="Ext.dd.DragDrop.startDrag">Ext.dd.DragDrop.startDrag</see>
        /// </summary>
        public void startDrag(){}
        public DDTarget(DDTargetConfig config){}
        public DDTarget(){}
        public DDTarget(params object[] args){}
    }
    #endregion
    #region DDTargetConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DDTargetConfig : Ext.dd.DragDropConfig
    {
        public DDTargetConfig(params object[] args){}
    }
    #endregion
    #region DDTargetEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DDTargetEvents : Ext.dd.DragDropEvents
    {
        public DDTargetEvents(params object[] args){}
    }
    #endregion
}
