//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:40 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.dom
{
    #region AbstractQuery
    /// <inheritdocs />
    /// <summary>
    /// <p><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class AbstractQuery : Ext.Base
    {
        /// <summary>
        /// Returns true if the passed element(s) match the passed simple selector (e.g. div.some-class or span:first-child)
        /// </summary>
        /// <param name="el"><p>An element id, element or array of elements</p>
        /// </param>
        /// <param name="selector"><p>The simple selector to test</p>
        /// </param>
        /// <returns>
        /// <span><see cref="bool">Boolean</see></span><div>
        /// </div>
        /// </returns>
        public bool @is(object el, JsString selector){return false;}
        /// <summary>
        /// Selects a group of elements.
        /// </summary>
        /// <param name="selector"><p>The selector/xpath query (can be a comma separated list of selectors)</p>
        /// </param>
        /// <param name="root"><p>The start of the query (defaults to document).</p>
        /// </param>
        /// <returns>
        /// <span>HTMLElement[]</span><div><p>An Array of DOM elements which match the selector. If there are
        /// no matches, and empty Array is returned.</p>
        /// </div>
        /// </returns>
        public JsObject[] select(object selector, object root=null){return null;}
        /// <summary>
        /// Selects a single element.
        /// </summary>
        /// <param name="selector"><p>The selector/xpath query</p>
        /// </param>
        /// <param name="root"><p>The start of the query (defaults to document).</p>
        /// </param>
        /// <returns>
        /// <span>HTMLElement</span><div><p>The DOM element which matched the selector.</p>
        /// </div>
        /// </returns>
        public JsObject selectNode(object selector, object root=null){return null;}
        public AbstractQuery(AbstractQueryConfig config){}
        public AbstractQuery(){}
        public AbstractQuery(params object[] args){}
    }
    #endregion
    #region AbstractQueryConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class AbstractQueryConfig : Ext.BaseConfig
    {
        public AbstractQueryConfig(params object[] args){}
    }
    #endregion
    #region AbstractQueryEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class AbstractQueryEvents : Ext.BaseEvents
    {
        public AbstractQueryEvents(params object[] args){}
    }
    #endregion
}
