//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:41 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.tip
{
    #region QuickTip
    /// <inheritdocs />
    /// <summary>
    /// <p>A specialized tooltip class for tooltips that can be specified in markup and automatically managed
    /// by the global <see cref="Ext.tip.QuickTipManager">Ext.tip.QuickTipManager</see> instance.  See the QuickTipManager documentation for
    /// additional usage details and examples.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class QuickTip : ToolTip
    {
        /// <summary>
        /// True to automatically use the element's DOM title value if available.
        /// Defaults to: <c>false</c>
        /// </summary>
        public bool interceptTitles;
        /// <summary>
        /// Hides a visible tip or cancels an impending show for a particular element.
        /// </summary>
        /// <param name="el"><p>The element that is the target of
        /// the tip or ID of the element.</p>
        /// </param>
        public void cancelShow(object el){}
        /// <summary>
        /// Reads the tip text from the closest node to the event target which contains the
        /// attribute we are configured to look for. Returns an object containing the text
        /// from the attribute, and the target element from which the text was read.
        /// </summary>
        /// <param name="e">
        /// </param>
        private void getTipCfg(object e){}
        /// <summary>
        /// Configures a new quick tip instance and assigns it to a target element.
        /// For example usage, see the <see cref="Ext.tip.QuickTipManager">Ext.tip.QuickTipManager</see> class header.
        /// </summary>
        /// <param name="config"><p>The config object with the following properties:</p>
        /// <ul><li><span>autoHide</span> : <div></div></li><li><span>cls</span> : <div></div></li><li><span>dismissDelay</span> : <div><p>overrides the singleton value</p>
        /// </div></li><li><span>target</span> : <div><p>required</p>
        /// </div></li><li><span>text</span> : <div><p>required</p>
        /// </div></li><li><span>title</span> : <div></div></li><li><span>width</span> : <div></div></li></ul></param>
        public void register(object config){}
        /// <summary>
        /// Removes this quick tip from its element and destroys it.
        /// </summary>
        /// <param name="el"><p>The element from which the quick tip
        /// is to be removed or ID of the element.</p>
        /// </param>
        public void unregister(object el){}
        public QuickTip(QuickTipConfig config){}
        public QuickTip(){}
        public QuickTip(params object[] args){}
    }
    #endregion
    #region QuickTipConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class QuickTipConfig : ToolTipConfig
    {
        /// <summary>
        /// True to automatically use the element's DOM title value if available.
        /// Defaults to: <c>false</c>
        /// </summary>
        public bool interceptTitles;
        public QuickTipConfig(params object[] args){}
    }
    #endregion
    #region QuickTipEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class QuickTipEvents : ToolTipEvents
    {
        public QuickTipEvents(params object[] args){}
    }
    #endregion
}
