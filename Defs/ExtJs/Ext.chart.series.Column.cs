//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:39 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.chart.series
{
    #region Column
    /// <inheritdocs />
    /// <summary>
    /// <p>Creates a Column Chart. Much of the methods are inherited from Bar. A Column Chart is a useful
    /// visualization technique to display quantitative information for different categories that can
    /// show some progression (or regression) in the data set. As with all other series, the Column Series
    /// must be appended in the <em>series</em> Chart array configuration. See the Chart documentation for more
    /// information. A typical configuration object for the column series could be:</p>
    /// <pre><code>var store = <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.data.JsonStore">Ext.data.JsonStore</see>', {
    /// fields: ['name', 'data'],
    /// data: [
    /// { 'name': 'metric one',   'data':10 },
    /// { 'name': 'metric two',   'data': 7 },
    /// { 'name': 'metric three', 'data': 5 },
    /// { 'name': 'metric four',  'data': 2 },
    /// { 'name': 'metric five',  'data':27 }
    /// ]
    /// });
    /// <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.chart.Chart">Ext.chart.Chart</see>', {
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>(),
    /// width: 500,
    /// height: 300,
    /// animate: true,
    /// store: store,
    /// axes: [
    /// {
    /// type: 'Numeric',
    /// position: 'left',
    /// fields: ['data'],
    /// label: {
    /// renderer: <see cref="Ext.util.Format.numberRenderer">Ext.util.Format.numberRenderer</see>('0,0')
    /// },
    /// title: 'Sample Values',
    /// grid: true,
    /// minimum: 0
    /// },
    /// {
    /// type: 'Category',
    /// position: 'bottom',
    /// fields: ['name'],
    /// title: 'Sample Metrics'
    /// }
    /// ],
    /// series: [
    /// {
    /// type: 'column',
    /// axis: 'left',
    /// highlight: true,
    /// tips: {
    /// trackMouse: true,
    /// width: 140,
    /// height: 28,
    /// renderer: function(storeItem, item) {
    /// this.setTitle(storeItem.get('name') + ': ' + storeItem.get('data') + ' $');
    /// }
    /// },
    /// label: {
    /// display: 'insideEnd',
    /// 'text-anchor': 'middle',
    /// field: 'data',
    /// renderer: <see cref="Ext.util.Format.numberRenderer">Ext.util.Format.numberRenderer</see>('0'),
    /// orientation: 'vertical',
    /// color: '#333'
    /// },
    /// xField: 'name',
    /// yField: 'data'
    /// }
    /// ]
    /// });
    /// </code></pre>
    /// <p>In this configuration we set <c>column</c> as the series type, bind the values of the bars to the bottom axis,
    /// set <c>highlight</c> to true so that bars are smoothly highlighted when hovered and bind the <c>xField</c> or category
    /// field to the data store <c>name</c> property and the <c>yField</c> as the data1 property of a store element.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Column : Ext.chart.series.Bar
    {
        public Column(Ext.chart.series.ColumnConfig config){}
        public Column(){}
        public Column(params object[] args){}
    }
    #endregion
    #region ColumnConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ColumnConfig : Ext.chart.series.BarConfig
    {
        public ColumnConfig(params object[] args){}
    }
    #endregion
    #region ColumnEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ColumnEvents : Ext.chart.series.BarEvents
    {
        public ColumnEvents(params object[] args){}
    }
    #endregion
}
