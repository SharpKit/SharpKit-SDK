//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:40 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext
{
    #region EventObject
    /// <inheritdocs />
    /// <summary>
    /// <p>Just as <see cref="Ext.dom.Element">Ext.Element</see> wraps around a native DOM node, <see cref="Ext.EventObject">Ext.EventObject</see>
    /// wraps the browser's native event-object normalizing cross-browser differences,
    /// such as which mouse button is clicked, keys pressed, mechanisms to stop
    /// event-propagation along with a method to prevent default actions from taking place.</p>
    /// <p>For example:</p>
    /// <pre><code>function handleClick(e, t){ // e is not a standard event object, it is a <see cref="Ext.EventObject">Ext.EventObject</see>
    /// e.preventDefault();
    /// var target = e.getTarget(); // same as t (the target HTMLElement)
    /// ...
    /// }
    /// var myDiv = <see cref="Ext.ExtContext.get">Ext.get</see>("myDiv");  // get reference to an <see cref="Ext.dom.Element">Ext.Element</see>
    /// myDiv.on(         // 'on' is shorthand for addListener
    /// "click",      // perform an action on click of myDiv
    /// handleClick   // reference to the action handler
    /// );
    /// // other methods to do the same:
    /// <see cref="Ext.EventManager.on">Ext.EventManager.on</see>("myDiv", 'click', handleClick);
    /// <see cref="Ext.EventManager.addListener">Ext.EventManager.addListener</see>("myDiv", 'click', handleClick);
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class EventObject : Ext.Base
    {
        /// <summary>
        /// Defaults to: <c>&quot;Ext.Base&quot;</c>
        /// </summary>
        [JsProperty(Name="$className")]
        private static JsString @className{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>65</c>
        /// </summary>
        public static JsNumber A{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>18</c>
        /// </summary>
        public static JsNumber ALT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>66</c>
        /// </summary>
        public static JsNumber B{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>8</c>
        /// </summary>
        public static JsNumber BACKSPACE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>67</c>
        /// </summary>
        public static JsNumber C{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>20</c>
        /// </summary>
        public static JsNumber CAPS_LOCK{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>93</c>
        /// </summary>
        public static JsNumber CONTEXT_MENU{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>17</c>
        /// </summary>
        public static JsNumber CTRL{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>68</c>
        /// </summary>
        public static JsNumber D{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>46</c>
        /// </summary>
        public static JsNumber DELETE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>40</c>
        /// </summary>
        public static JsNumber DOWN{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>69</c>
        /// </summary>
        public static JsNumber E{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>56</c>
        /// </summary>
        public static JsNumber EIGHT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>35</c>
        /// </summary>
        public static JsNumber END{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>13</c>
        /// </summary>
        public static JsNumber ENTER{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>27</c>
        /// </summary>
        public static JsNumber ESC{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>70</c>
        /// </summary>
        public static JsNumber F{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>112</c>
        /// </summary>
        public static JsNumber F1{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>121</c>
        /// </summary>
        public static JsNumber F10{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>122</c>
        /// </summary>
        public static JsNumber F11{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>123</c>
        /// </summary>
        public static JsNumber F12{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>113</c>
        /// </summary>
        public static JsNumber F2{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>114</c>
        /// </summary>
        public static JsNumber F3{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>115</c>
        /// </summary>
        public static JsNumber F4{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>116</c>
        /// </summary>
        public static JsNumber F5{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>117</c>
        /// </summary>
        public static JsNumber F6{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>118</c>
        /// </summary>
        public static JsNumber F7{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>119</c>
        /// </summary>
        public static JsNumber F8{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>120</c>
        /// </summary>
        public static JsNumber F9{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>53</c>
        /// </summary>
        public static JsNumber FIVE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>52</c>
        /// </summary>
        public static JsNumber FOUR{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>71</c>
        /// </summary>
        public static JsNumber G{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>72</c>
        /// </summary>
        public static JsNumber H{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>36</c>
        /// </summary>
        public static JsNumber HOME{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>73</c>
        /// </summary>
        public static JsNumber I{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>45</c>
        /// </summary>
        public static JsNumber INSERT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>74</c>
        /// </summary>
        public static JsNumber J{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>75</c>
        /// </summary>
        public static JsNumber K{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>76</c>
        /// </summary>
        public static JsNumber L{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>37</c>
        /// </summary>
        public static JsNumber LEFT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>77</c>
        /// </summary>
        public static JsNumber M{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>78</c>
        /// </summary>
        public static JsNumber N{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>57</c>
        /// </summary>
        public static JsNumber NINE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>12</c>
        /// </summary>
        public static JsNumber NUM_CENTER{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>111</c>
        /// </summary>
        public static JsNumber NUM_DIVISION{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>104</c>
        /// </summary>
        public static JsNumber NUM_EIGHT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>101</c>
        /// </summary>
        public static JsNumber NUM_FIVE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>100</c>
        /// </summary>
        public static JsNumber NUM_FOUR{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>109</c>
        /// </summary>
        public static JsNumber NUM_MINUS{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>106</c>
        /// </summary>
        public static JsNumber NUM_MULTIPLY{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>105</c>
        /// </summary>
        public static JsNumber NUM_NINE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>97</c>
        /// </summary>
        public static JsNumber NUM_ONE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>110</c>
        /// </summary>
        public static JsNumber NUM_PERIOD{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>107</c>
        /// </summary>
        public static JsNumber NUM_PLUS{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>103</c>
        /// </summary>
        public static JsNumber NUM_SEVEN{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>102</c>
        /// </summary>
        public static JsNumber NUM_SIX{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>99</c>
        /// </summary>
        public static JsNumber NUM_THREE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>98</c>
        /// </summary>
        public static JsNumber NUM_TWO{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>96</c>
        /// </summary>
        public static JsNumber NUM_ZERO{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>79</c>
        /// </summary>
        public static JsNumber O{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>49</c>
        /// </summary>
        public static JsNumber ONE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>80</c>
        /// </summary>
        public static JsNumber P{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>34</c>
        /// </summary>
        public static JsNumber PAGE_DOWN{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>33</c>
        /// </summary>
        public static JsNumber PAGE_UP{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>19</c>
        /// </summary>
        public static JsNumber PAUSE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>44</c>
        /// </summary>
        public static JsNumber PRINT_SCREEN{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>81</c>
        /// </summary>
        public static JsNumber Q{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>82</c>
        /// </summary>
        public static JsNumber R{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>13</c>
        /// </summary>
        public static JsNumber RETURN{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>39</c>
        /// </summary>
        public static JsNumber RIGHT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>83</c>
        /// </summary>
        public static JsNumber S{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>55</c>
        /// </summary>
        public static JsNumber SEVEN{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>16</c>
        /// </summary>
        public static JsNumber SHIFT{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>54</c>
        /// </summary>
        public static JsNumber SIX{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>32</c>
        /// </summary>
        public static JsNumber SPACE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>84</c>
        /// </summary>
        public static JsNumber T{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>9</c>
        /// </summary>
        public static JsNumber TAB{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>51</c>
        /// </summary>
        public static JsNumber THREE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>50</c>
        /// </summary>
        public static JsNumber TWO{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>85</c>
        /// </summary>
        public static JsNumber U{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>38</c>
        /// </summary>
        public static JsNumber UP{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>86</c>
        /// </summary>
        public static JsNumber V{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>87</c>
        /// </summary>
        public static JsNumber W{get;set;}
        /// <summary>
        /// The mouse wheel delta scaling factor. This value depends on browser version and OS and
        /// attempts to produce a similar scrolling experience across all platforms and browsers.
        /// To change this value:
        /// <code> Ext.EventObjectImpl.prototype.WHEEL_SCALE = 72;
        /// </code>
        /// </summary>
        public static JsNumber WHEEL_SCALE{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>88</c>
        /// </summary>
        public static JsNumber X{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>89</c>
        /// </summary>
        public static JsNumber Y{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>90</c>
        /// </summary>
        public static JsNumber Z{get;set;}
        /// <summary>
        /// Key constant
        /// Defaults to: <c>48</c>
        /// </summary>
        public static JsNumber ZERO{get;set;}
        /// <summary>
        /// True if the alt key was down during the event.
        /// </summary>
        public static bool altKey{get;set;}
        /// <summary>
        /// Simple click regex
        /// Defaults to: <c>/(dbl)?click/</c>
        /// </summary>
        private static JsRegExp clickRe{get;set;}
        /// <summary>
        /// Defaults to: <c>{}</c>
        /// </summary>
        private static JsObject configMap{get;set;}
        /// <summary>
        /// True if the control key was down during the event.
        /// In Mac this will also be true when meta key was down.
        /// </summary>
        public static bool ctrlKey{get;set;}
        /// <summary>
        /// Defaults to: <c>[]</c>
        /// </summary>
        private static JsArray initConfigList{get;set;}
        /// <summary>
        /// Defaults to: <c>{}</c>
        /// </summary>
        private static JsObject initConfigMap{get;set;}
        /// <summary>
        /// Defaults to: <c>true</c>
        /// </summary>
        private static bool isInstance{get;set;}
        /// <summary>
        /// Get the reference to the current class from which this object was instantiated. Unlike statics,
        /// this.self is scope-dependent and it's meant to be used for dynamic inheritance. See statics
        /// for a detailed comparison
        /// <code><see cref="Ext.ExtContext.define">Ext.define</see>('My.Cat', {
        /// statics: {
        /// speciesName: 'Cat' // My.Cat.speciesName = 'Cat'
        /// },
        /// constructor: function() {
        /// alert(this.self.speciesName); // dependent on 'this'
        /// },
        /// clone: function() {
        /// return new this.self();
        /// }
        /// });
        /// <see cref="Ext.ExtContext.define">Ext.define</see>('My.SnowLeopard', {
        /// extend: 'My.Cat',
        /// statics: {
        /// speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'
        /// }
        /// });
        /// var cat = new My.Cat();                     // alerts 'Cat'
        /// var snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'
        /// var clone = snowLeopard.clone();
        /// alert(<see cref="Ext.ExtContext.getClassName">Ext.getClassName</see>(clone));             // alerts 'My.SnowLeopard'
        /// </code>
        /// </summary>
        protected static Class self{get;set;}
        /// <summary>
        /// True if the shift key was down during the event.
        /// </summary>
        public static bool shiftKey{get;set;}
        /// <summary>
        /// Correctly scales a given wheel delta.
        /// </summary>
        /// <param name="delta"><p>The delta value.</p>
        /// </param>
        public void correctWheelDelta(JsNumber delta){}
        /// <summary>
        /// Gets the character code for the event.
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div>
        /// </div>
        /// </returns>
        public JsNumber getCharCode(){return null;}
        /// <summary>
        /// Returns a normalized keyCode for the event.
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div><p>The key code</p>
        /// </div>
        /// </returns>
        public JsNumber getKey(){return null;}
        /// <summary>
        /// Gets the x coordinate of the event.
        /// <p>This method has been <strong>deprecated</strong> since 4.0</p>
        /// <p>Replaced by <see cref="Ext.EventObject.getX">getX</see></p>
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div>
        /// </div>
        /// </returns>
        public JsNumber getPageX(){return null;}
        /// <summary>
        /// Gets the y coordinate of the event.
        /// <p>This method has been <strong>deprecated</strong> since 4.0</p>
        /// <p>Replaced by <see cref="Ext.EventObject.getY">getY</see></p>
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div>
        /// </div>
        /// </returns>
        public JsNumber getPageY(){return null;}
        /// <summary>
        /// Returns a point object that consists of the object coordinates.
        /// </summary>
        /// <returns>
        /// <span><see cref="Ext.util.Point">Ext.util.Point</see></span><div><p>point</p>
        /// </div>
        /// </returns>
        public Ext.util.Point getPoint(){return null;}
        /// <summary>
        /// Gets the related target.
        /// </summary>
        /// <param name="selector"><p>A simple selector to filter the target or look for an ancestor of the target</p>
        /// </param>
        /// <param name="maxDepth"><p>The max depth to search as a number or element (defaults to 10 || document.body)</p>
        /// </param>
        /// <param name="returnEl"><p>True to return a <see cref="Ext.dom.Element">Ext.Element</see> object instead of DOM node</p>
        /// </param>
        /// <returns>
        /// <span>HTMLElement</span><div>
        /// </div>
        /// </returns>
        public JsObject getRelatedTarget(object selector=null, object maxDepth=null, object returnEl=null){return null;}
        /// <summary>
        /// Gets the target for the event.
        /// </summary>
        /// <param name="selector"><p>A simple selector to filter the target or look for an ancestor of the target</p>
        /// </param>
        /// <param name="maxDepth"><p>The max depth to search as a number or element (defaults to 10 || document.body)</p>
        /// </param>
        /// <param name="returnEl"><p>True to return a <see cref="Ext.dom.Element">Ext.Element</see> object instead of DOM node</p>
        /// </param>
        /// <returns>
        /// <span>HTMLElement</span><div>
        /// </div>
        /// </returns>
        public JsObject getTarget(object selector=null, object maxDepth=null, object returnEl=null){return null;}
        /// <summary>
        /// Normalizes mouse wheel y-delta across browsers. To get x-delta information, use
        /// getWheelDeltas instead.
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div><p>The mouse wheel y-delta</p>
        /// </div>
        /// </returns>
        public JsNumber getWheelDelta(){return null;}
        /// <summary>
        /// Returns the mouse wheel deltas for this event.
        /// </summary>
        /// <returns>
        /// <span><see cref="Object">Object</see></span><div><p>An object with "x" and "y" properties holding the mouse wheel deltas.</p>
        /// </div>
        /// </returns>
        public object getWheelDeltas(){return null;}
        /// <summary>
        /// Gets the x coordinate of the event.
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div>
        /// </div>
        /// </returns>
        public JsNumber getX(){return null;}
        /// <summary>
        /// Gets the page coordinates of the event.
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see>[]</span><div><p>The xy values like [x, y]</p>
        /// </div>
        /// </returns>
        public JsNumber[] getXY(){return null;}
        /// <summary>
        /// Gets the y coordinate of the event.
        /// </summary>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div>
        /// </div>
        /// </returns>
        public JsNumber getY(){return null;}
        /// <summary>
        /// Returns true if the control, meta, shift or alt key was pressed during this event.
        /// </summary>
        /// <returns>
        /// <span><see cref="bool">Boolean</see></span><div>
        /// </div>
        /// </returns>
        public bool hasModifier(){return false;}
        /// <summary>
        /// Injects a DOM event using the data in this object and (optionally) a new target.
        /// This is a low-level technique and not likely to be used by application code. The
        /// currently supported event types are:
        /// <b>HTMLEvents</b>
        /// <li>load</li>
        /// <li>unload</li>
        /// <li>select</li>
        /// <li>change</li>
        /// <li>submit</li>
        /// <li>reset</li>
        /// <li>resize</li>
        /// <li>scroll</li>
        /// <b>MouseEvents</b>
        /// <li>click</li>
        /// <li>dblclick</li>
        /// <li>mousedown</li>
        /// <li>mouseup</li>
        /// <li>mouseover</li>
        /// <li>mousemove</li>
        /// <li>mouseout</li>
        /// <b>UIEvents</b>
        /// <li>focusin</li>
        /// <li>focusout</li>
        /// <li>activate</li>
        /// <li>focus</li>
        /// <li>blur</li>
        /// </summary>
        /// <param name="target"><p>If specified, the target for the event. This
        /// is likely to be used when relaying a DOM event. If not specified, <see cref="Ext.EventObject.getTarget">getTarget</see>
        /// is used to determine the target.</p>
        /// </param>
        public void injectEvent(object target=null){}
        /// <summary>
        /// Checks if the key pressed was a "navigation" key
        /// </summary>
        /// <returns>
        /// <span><see cref="bool">Boolean</see></span><div><p>True if the press is a navigation keypress</p>
        /// </div>
        /// </returns>
        public bool isNavKeyPress(){return false;}
        /// <summary>
        /// Checks if the key pressed was a "special" key
        /// </summary>
        /// <returns>
        /// <span><see cref="bool">Boolean</see></span><div><p>True if the press is a special keypress</p>
        /// </div>
        /// </returns>
        public bool isSpecialKey(){return false;}
        /// <summary>
        /// Normalize key codes across browsers
        /// </summary>
        /// <param name="key"><p>The key code</p>
        /// </param>
        /// <returns>
        /// <span><see cref="Number">Number</see></span><div><p>The normalized code</p>
        /// </div>
        /// </returns>
        private JsNumber normalizeKey(JsNumber key){return null;}
        /// <summary>
        /// Prevents the browsers default handling of the event.
        /// </summary>
        public void preventDefault(){}
        /// <summary>
        /// Stop the event (preventDefault and stopPropagation)
        /// </summary>
        public void stopEvent(){}
        /// <summary>
        /// Cancels bubbling of the event.
        /// </summary>
        public void stopPropagation(){}
        /// <summary>
        /// Returns true if the target of this event is a child of el.  Unless the allowEl parameter is set, it will return false if if the target is el.
        /// Example usage:
        /// <code>// Handle click on any child of an element
        /// <see cref="Ext.ExtContext.getBody">Ext.getBody</see>().on('click', function(e){
        /// if(e.within('some-el')){
        /// alert('Clicked on a child of some-el!');
        /// }
        /// });
        /// // Handle click directly on an element, ignoring clicks on child nodes
        /// <see cref="Ext.ExtContext.getBody">Ext.getBody</see>().on('click', function(e,t){
        /// if((t.id == 'some-el') && !e.within(t, true)){
        /// alert('Clicked directly on some-el!');
        /// }
        /// });
        /// </code>
        /// </summary>
        /// <param name="el"><p>The id, DOM element or <see cref="Ext.dom.Element">Ext.Element</see> to check</p>
        /// </param>
        /// <param name="related"><p>true to test if the related target is within el instead of the target</p>
        /// </param>
        /// <param name="allowEl"><p>true to also check if the passed element is the target or related target</p>
        /// </param>
        /// <returns>
        /// <span><see cref="bool">Boolean</see></span><div>
        /// </div>
        /// </returns>
        public bool within(object el, object related=null, object allowEl=null){return false;}
        public EventObject(EventObjectConfig config){}
        public EventObject(){}
        public EventObject(params object[] args){}
    }
    #endregion
    #region EventObjectConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class EventObjectConfig : Ext.BaseConfig
    {
        public EventObjectConfig(params object[] args){}
    }
    #endregion
    #region EventObjectEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class EventObjectEvents : Ext.BaseEvents
    {
        public EventObjectEvents(params object[] args){}
    }
    #endregion
}
