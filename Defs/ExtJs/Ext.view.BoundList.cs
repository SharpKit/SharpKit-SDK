//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:42 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.view
{
    #region BoundList
    /// <inheritdocs />
    /// <summary>
    /// <p>An internally used DataView for <see cref="Ext.form.field.ComboBox">ComboBox</see>.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class BoundList : Ext.view.View
    {
        /// <summary>
        /// The field from the store to show in the view.
        /// Defaults to: <c>&quot;&quot;</c>
        /// </summary>
        public JsString displayField;
        /// <summary>
        /// If greater than 0, a Ext.toolbar.Paging is displayed at the bottom of the list and store
        /// queries will execute with page start and
        /// limit parameters.
        /// Defaults to: <c>0</c>
        /// </summary>
        public JsNumber pageSize;
        /// <summary>
        /// A reference to the PagingToolbar instance in this view. Only populated if pageSize is greater
        /// than zero and the BoundList has been rendered.
        /// </summary>
        public Ext.toolbar.Paging pagingToolbar{get;set;}
        /// <summary>
        /// A method that returns the inner template for displaying items in the list.
        /// This method is useful to override when using a more complex display value, for example
        /// inserting an icon along with the text.
        /// </summary>
        /// <param name="displayField"><p>The <see cref="Ext.view.BoundListConfig.displayField">displayField</see> for the BoundList.</p>
        /// </param>
        /// <returns>
        /// <span><see cref="String">String</see></span><div><p>The inner template</p>
        /// </div>
        /// </returns>
        public JsString getInnerTpl(JsString displayField){return null;}
        public BoundList(Ext.view.BoundListConfig config){}
        public BoundList(){}
        public BoundList(params object[] args){}
    }
    #endregion
    #region BoundListConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class BoundListConfig : Ext.view.ViewConfig
    {
        /// <summary>
        /// The field from the store to show in the view.
        /// Defaults to: <c>&quot;&quot;</c>
        /// </summary>
        public JsString displayField;
        /// <summary>
        /// If greater than 0, a Ext.toolbar.Paging is displayed at the bottom of the list and store
        /// queries will execute with page start and
        /// limit parameters.
        /// Defaults to: <c>0</c>
        /// </summary>
        public JsNumber pageSize;
        public BoundListConfig(params object[] args){}
    }
    #endregion
    #region BoundListEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class BoundListEvents : Ext.view.ViewEvents
    {
        public BoundListEvents(params object[] args){}
    }
    #endregion
}
