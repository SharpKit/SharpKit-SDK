//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:42 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.ux.grid.menu
{
    #region RangeMenu
    /// <inheritdocs />
    /// <summary>
    /// <p>Custom implementation of <see cref="Ext.menu.Menu">Ext.menu.Menu</see> that has preconfigured items for entering numeric
    /// range comparison values: less-than, greater-than, and equal-to. This is used internally
    /// by <see cref="Ext.ux.grid.filter.NumericFilter">Ext.ux.grid.filter.NumericFilter</see> to create its menu.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class RangeMenu : Ext.menu.Menu
    {
        /// <summary>
        /// The default configuration options for any field item unless superseded
        /// by the fields configuration.
        /// Defaults to:
        /// fieldCfg : {}
        /// Example usage:
        /// <code>fieldCfg : {
        /// width: 150,
        /// },
        /// </code>
        /// </summary>
        public JsObject fieldCfg;
        /// <summary>
        /// The Class to use to construct each field item within this menu
        /// Defaults to:
        /// fieldCls : <see cref="Ext.form.field.Number">Ext.form.field.Number</see>
        /// Defaults to: <c>&quot;Ext.form.field.Number&quot;</c>
        /// </summary>
        public JsString fieldCls;
        /// <summary>
        /// Accessible label text for each comparator field item. Can be overridden by localization
        /// files. Defaults to:
        /// fieldLabels : {
        /// gt: 'Greater Than',
        /// lt: 'Less Than',
        /// eq: 'Equal To'
        /// }
        /// Defaults to: <c>{gt: &quot;Greater Than&quot;, lt: &quot;Less Than&quot;, eq: &quot;Equal To&quot;}</c>
        /// </summary>
        public JsObject fieldLabels;
        /// <summary>
        /// The field items may be configured individually
        /// Defaults to undefined.
        /// Example usage:
        /// <code>fields : {
        /// gt: { // override fieldCfg options
        /// width: 200,
        /// fieldCls: Ext.ux.form.CustomNumberField // to override default <see cref="Ext.ux.grid.menu.RangeMenuConfig.fieldCls">fieldCls</see>
        /// }
        /// },
        /// </code>
        /// </summary>
        public JsObject fields;
        /// <summary>
        /// A template for generating the label for each field in the menu
        /// </summary>
        public XTemplate iconTpl;
        /// <summary>
        /// The itemIconCls to be applied to each comparator field item.
        /// Defaults to:
        /// itemIconCls : {
        /// gt : 'ux-rangemenu-gt',
        /// lt : 'ux-rangemenu-lt',
        /// eq : 'ux-rangemenu-eq'
        /// }
        /// Defaults to: <c>{gt: &quot;ux-rangemenu-gt&quot;, lt: &quot;ux-rangemenu-lt&quot;, eq: &quot;ux-rangemenu-eq&quot;}</c>
        /// </summary>
        public JsObject itemIconCls;
        /// <summary>
        /// Default configuration options for each menu item
        /// Defaults to:
        /// menuItemCfgs : {
        /// emptyText: 'Enter Filter Text...',
        /// selectOnFocus: true,
        /// width: 125
        /// }
        /// Defaults to: <c>{emptyText: &quot;Enter Number...&quot;, selectOnFocus: false, width: 155}</c>
        /// </summary>
        public JsObject menuItemCfgs;
        /// <summary>
        /// The items to be shown in this menu.  Items are added to the menu
        /// according to their position within this array. Defaults to:
        /// menuItems : ['lt','gt','-','eq']
        /// Defaults to: <c>[&quot;lt&quot;, &quot;gt&quot;, &quot;-&quot;, &quot;eq&quot;]</c>
        /// </summary>
        public JsArray menuItems;
        /// <summary>
        /// called by this.updateTask
        /// </summary>
        private void fireUpdate(){}
        /// <summary>
        /// Get and return the value of the filter.
        /// </summary>
        /// <returns>
        /// <span><see cref="String">String</see></span><div><p>The value of this filter</p>
        /// </div>
        /// </returns>
        public JsString getValue(){return null;}
        /// <summary>
        /// Handler method called when the user changes the value of one of the input
        /// items in this menu.
        /// </summary>
        /// <param name="field">
        /// </param>
        private void onInputChange(object field){}
        /// <summary>
        /// Handler method called when there is a keyup event on an input
        /// item of this menu.
        /// </summary>
        /// <param name="field">
        /// </param>
        /// <param name="e">
        /// </param>
        private void onInputKeyUp(object field, object e){}
        /// <summary>
        /// Set the value of this menu and fires the 'update' event.
        /// </summary>
        /// <param name="data"><p>The data to assign to this menu</p>
        /// </param>
        public void setValue(object data){}
        public RangeMenu(RangeMenuConfig config){}
        public RangeMenu(){}
        public RangeMenu(params object[] args){}
    }
    #endregion
    #region RangeMenuConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class RangeMenuConfig : Ext.menu.MenuConfig
    {
        /// <summary>
        /// The default configuration options for any field item unless superseded
        /// by the fields configuration.
        /// Defaults to:
        /// fieldCfg : {}
        /// Example usage:
        /// <code>fieldCfg : {
        /// width: 150,
        /// },
        /// </code>
        /// </summary>
        public JsObject fieldCfg;
        /// <summary>
        /// The Class to use to construct each field item within this menu
        /// Defaults to:
        /// fieldCls : <see cref="Ext.form.field.Number">Ext.form.field.Number</see>
        /// Defaults to: <c>&quot;Ext.form.field.Number&quot;</c>
        /// </summary>
        public JsString fieldCls;
        /// <summary>
        /// Accessible label text for each comparator field item. Can be overridden by localization
        /// files. Defaults to:
        /// fieldLabels : {
        /// gt: 'Greater Than',
        /// lt: 'Less Than',
        /// eq: 'Equal To'
        /// }
        /// Defaults to: <c>{gt: &quot;Greater Than&quot;, lt: &quot;Less Than&quot;, eq: &quot;Equal To&quot;}</c>
        /// </summary>
        public JsObject fieldLabels;
        /// <summary>
        /// The field items may be configured individually
        /// Defaults to undefined.
        /// Example usage:
        /// <code>fields : {
        /// gt: { // override fieldCfg options
        /// width: 200,
        /// fieldCls: Ext.ux.form.CustomNumberField // to override default <see cref="Ext.ux.grid.menu.RangeMenuConfig.fieldCls">fieldCls</see>
        /// }
        /// },
        /// </code>
        /// </summary>
        public JsObject fields;
        /// <summary>
        /// A template for generating the label for each field in the menu
        /// </summary>
        public XTemplate iconTpl;
        /// <summary>
        /// The itemIconCls to be applied to each comparator field item.
        /// Defaults to:
        /// itemIconCls : {
        /// gt : 'ux-rangemenu-gt',
        /// lt : 'ux-rangemenu-lt',
        /// eq : 'ux-rangemenu-eq'
        /// }
        /// Defaults to: <c>{gt: &quot;ux-rangemenu-gt&quot;, lt: &quot;ux-rangemenu-lt&quot;, eq: &quot;ux-rangemenu-eq&quot;}</c>
        /// </summary>
        public JsObject itemIconCls;
        /// <summary>
        /// Default configuration options for each menu item
        /// Defaults to:
        /// menuItemCfgs : {
        /// emptyText: 'Enter Filter Text...',
        /// selectOnFocus: true,
        /// width: 125
        /// }
        /// Defaults to: <c>{emptyText: &quot;Enter Number...&quot;, selectOnFocus: false, width: 155}</c>
        /// </summary>
        public JsObject menuItemCfgs;
        /// <summary>
        /// The items to be shown in this menu.  Items are added to the menu
        /// according to their position within this array. Defaults to:
        /// menuItems : ['lt','gt','-','eq']
        /// Defaults to: <c>[&quot;lt&quot;, &quot;gt&quot;, &quot;-&quot;, &quot;eq&quot;]</c>
        /// </summary>
        public JsArray menuItems;
        public RangeMenuConfig(params object[] args){}
    }
    #endregion
    #region RangeMenuEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class RangeMenuEvents : Ext.menu.MenuEvents
    {
        /// <summary>
        /// Fires when a filter configuration has changed
        /// </summary>
        /// <param name="this"><p>The filter object.</p>
        /// </param>
        /// <param name="eOpts"><p>The options object passed to <see cref="Ext.util.Observable.addListener">Ext.util.Observable.addListener</see>.</p>
        /// </param>
        public void update(Ext.ux.grid.filter.Filter @this, object eOpts){}
        public RangeMenuEvents(params object[] args){}
    }
    #endregion
}
