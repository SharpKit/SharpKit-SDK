//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:40 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.draw
{
    #region Text
    /// <inheritdocs />
    /// <summary>
    /// <p>This class encapsulates a drawn text item as rendered by the Ext.draw package within a Component which can be
    /// then used anywhere in an ExtJS application just like any other Component.</p>
    /// <h2>Example usage</h2>
    /// <pre><code><see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.panel.Panel">Ext.panel.Panel</see>', {
    /// title: 'Panel with VerticalTextItem',
    /// width: 300,
    /// height: 200,
    /// lbar: {
    /// layout: {
    /// align: 'center'
    /// },
    /// items: [{
    /// xtype: 'text',
    /// text: 'Sample VerticalTextItem',
    /// degrees: 90
    /// }]
    /// },
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>()
    /// });
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Text : Ext.draw.Component
    {
        /// <summary>
        /// The angle by which to initially rotate the text clockwise. Defaults to zero.
        /// </summary>
        public JsNumber degrees;
        /// <summary>
        /// A CSS selector string which matches a style rule in the document stylesheet from which
        /// the text's font properties are read.
        /// <strong>Drawn</strong> text is not styled by CSS, but by properties set during its construction, so these styles
        /// must be programatically read from a stylesheet rule found via a selector at construction time.
        /// </summary>
        public JsString styleSelector;
        /// <summary>
        /// The text to display (html tags are not accepted)
        /// Defaults to: <c>&quot;&quot;</c>
        /// </summary>
        public JsString text;
        /// <summary>
        /// Accumulates a style object based upon the styles specified in document stylesheets
        /// by an array of CSS selectors
        /// </summary>
        /// <param name="selectors">
        /// </param>
        private void getStyles(object selectors){}
        /// <summary>
        /// Sets the clockwise rotation angle relative to the horizontal axis.
        /// </summary>
        /// <param name="degrees"><p>The clockwise angle (in degrees) from the horizontal axis
        /// by which the text should be rotated.</p>
        /// </param>
        public void setAngle(JsNumber degrees){}
        /// <summary>
        /// Updates this item's text.
        /// </summary>
        /// <param name="t"><p>The text to display (html <strong>not</strong> accepted).</p>
        /// </param>
        public void setText(JsString t){}
        public Text(Ext.draw.TextConfig config){}
        public Text(params object[] args){}
    }
    #endregion
    #region TextConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class TextConfig : Ext.draw.ComponentConfig
    {
        /// <summary>
        /// The angle by which to initially rotate the text clockwise. Defaults to zero.
        /// </summary>
        public JsNumber degrees;
        /// <summary>
        /// A CSS selector string which matches a style rule in the document stylesheet from which
        /// the text's font properties are read.
        /// <strong>Drawn</strong> text is not styled by CSS, but by properties set during its construction, so these styles
        /// must be programatically read from a stylesheet rule found via a selector at construction time.
        /// </summary>
        public JsString styleSelector;
        /// <summary>
        /// The text to display (html tags are not accepted)
        /// Defaults to: <c>&quot;&quot;</c>
        /// </summary>
        public JsString text;
        public TextConfig(params object[] args){}
    }
    #endregion
    #region TextEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class TextEvents : Ext.draw.ComponentEvents
    {
        public TextEvents(params object[] args){}
    }
    #endregion
}
