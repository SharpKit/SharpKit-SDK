//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:40 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.form.field
{
    #region Display
    /// <inheritdocs />
    /// <summary>
    /// <p>A display-only text field which is not validated and not submitted. This is useful for when you want to display a
    /// value from a form's <see cref="Ext.form.Basic.load">loaded data</see> but do not want to allow the user to edit or submit that
    /// value. The value can be optionally <see cref="Ext.form.field.DisplayConfig.htmlEncode">HTML encoded</see> if it contains HTML markup that you do not want
    /// to be rendered.</p>
    /// <p>If you have more complex content, or need to include components within the displayed content, also consider using a
    /// <see cref="Ext.form.FieldContainer">Ext.form.FieldContainer</see> instead.</p>
    /// <p>Example:</p>
    /// <pre><code><see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.form.Panel">Ext.form.Panel</see>', {
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>(),
    /// width: 175,
    /// height: 120,
    /// bodyPadding: 10,
    /// title: 'Final Score',
    /// items: [{
    /// xtype: 'displayfield',
    /// fieldLabel: 'Home',
    /// name: 'home_score',
    /// value: '10'
    /// }, {
    /// xtype: 'displayfield',
    /// fieldLabel: 'Visitor',
    /// name: 'visitor_score',
    /// value: '11'
    /// }],
    /// buttons: [{
    /// text: 'Update'
    /// }]
    /// });
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Display : Ext.form.field.Base
    {
        /// <summary>
        /// True to escape HTML in text when rendering it.
        /// Defaults to: <c>false</c>
        /// </summary>
        public bool htmlEncode;
        /// <summary>
        /// A function to transform the raw value for display in the field. The function will receive 2 arguments, the raw value
        /// and the Ext.form.field.Display object.
        /// </summary>
        public System.Delegate renderer;
        /// <summary>
        /// The scope to execute the renderer function. Defaults to this.
        /// </summary>
        public JsObject scope;
        /// <summary>
        /// Format the value to display.
        /// </summary>
        private void getDisplayValue(){}
        public Display(DisplayConfig config){}
        public Display(){}
        public Display(params object[] args){}
    }
    #endregion
    #region DisplayConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DisplayConfig : Ext.form.field.BaseConfig
    {
        /// <summary>
        /// True to escape HTML in text when rendering it.
        /// Defaults to: <c>false</c>
        /// </summary>
        public bool htmlEncode;
        /// <summary>
        /// A function to transform the raw value for display in the field. The function will receive 2 arguments, the raw value
        /// and the Ext.form.field.Display object.
        /// </summary>
        public System.Delegate renderer;
        /// <summary>
        /// The scope to execute the renderer function. Defaults to this.
        /// </summary>
        public JsObject scope;
        public DisplayConfig(params object[] args){}
    }
    #endregion
    #region DisplayEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DisplayEvents : Ext.form.field.BaseEvents
    {
        public DisplayEvents(params object[] args){}
    }
    #endregion
}
