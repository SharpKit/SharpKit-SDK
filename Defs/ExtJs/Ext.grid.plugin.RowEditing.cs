//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:41 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.grid.plugin
{
    #region RowEditing
    /// <inheritdocs />
    /// <summary>
    /// <p>The <see cref="Ext.grid.plugin.RowEditing">Ext.grid.plugin.RowEditing</see> plugin injects editing at a row level for a Grid. When editing begins,
    /// a small floating dialog will be shown for the appropriate row. Each editable column will show a field
    /// for editing. There is a button to save or cancel all changes for the edit.</p>
    /// <p>The field that will be used for the editor is defined at the
    /// <see cref="Ext.grid.column.ColumnConfig.editor">editor</see>. The editor can be a field instance or a field configuration.
    /// If an editor is not specified for a particular column then that column won't be editable and the value of
    /// the column will be displayed. To provide a custom renderer for non-editable values, use the
    /// <see cref="Ext.grid.column.ColumnConfig.editRenderer">editRenderer</see> configuration on the column.</p>
    /// <p>The editor may be shared for each column in the grid, or a different one may be specified for each column.
    /// An appropriate field type should be chosen to match the data structure that it will be editing. For example,
    /// to edit a date, it would be useful to specify <see cref="Ext.form.field.Date">Ext.form.field.Date</see> as the editor.</p>
    /// <pre><code><see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.data.Store">Ext.data.Store</see>', {
    /// storeId:'simpsonsStore',
    /// fields:['name', 'email', 'phone'],
    /// data: [
    /// {"name":"Lisa", "email":"lisa@simpsons.com", "phone":"555-111-1224"},
    /// {"name":"Bart", "email":"bart@simpsons.com", "phone":"555-222-1234"},
    /// {"name":"Homer", "email":"home@simpsons.com", "phone":"555-222-1244"},
    /// {"name":"Marge", "email":"marge@simpsons.com", "phone":"555-222-1254"}
    /// ]
    /// });
    /// <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.grid.Panel">Ext.grid.Panel</see>', {
    /// title: 'Simpsons',
    /// store: <see cref="Ext.data.StoreManager.lookup">Ext.data.StoreManager.lookup</see>('simpsonsStore'),
    /// columns: [
    /// {header: 'Name',  dataIndex: 'name', editor: 'textfield'},
    /// {header: 'Email', dataIndex: 'email', flex:1,
    /// editor: {
    /// xtype: 'textfield',
    /// allowBlank: false
    /// }
    /// },
    /// {header: 'Phone', dataIndex: 'phone'}
    /// ],
    /// selType: 'rowmodel',
    /// plugins: [
    /// <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.grid.plugin.RowEditing">Ext.grid.plugin.RowEditing</see>', {
    /// clicksToEdit: 1
    /// })
    /// ],
    /// height: 200,
    /// width: 400,
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>()
    /// });
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class RowEditing : Editing
    {
        /// <summary>
        /// True to automatically cancel any pending changes when the row editor begins editing a new row.
        /// False to force the user to explicitly cancel the pending changes. Defaults to true.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool autoCancel;
        /// <summary>
        /// The number of clicks to move the row editor to a new row while it is visible and actively editing another row.
        /// This will default to the same value as clicksToEdit.
        /// </summary>
        public JsNumber clicksToMoveEditor;
        /// <summary>
        /// True to show a tooltip that summarizes all validation errors present
        /// in the row editor. Set to false to prevent the tooltip from showing. Defaults to true.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool errorSummary;
        public RowEditing(RowEditingConfig config){}
        public RowEditing(){}
        public RowEditing(params object[] args){}
    }
    #endregion
    #region RowEditingConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class RowEditingConfig : EditingConfig
    {
        /// <summary>
        /// True to automatically cancel any pending changes when the row editor begins editing a new row.
        /// False to force the user to explicitly cancel the pending changes. Defaults to true.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool autoCancel;
        /// <summary>
        /// The number of clicks to move the row editor to a new row while it is visible and actively editing another row.
        /// This will default to the same value as clicksToEdit.
        /// </summary>
        public JsNumber clicksToMoveEditor;
        /// <summary>
        /// True to show a tooltip that summarizes all validation errors present
        /// in the row editor. Set to false to prevent the tooltip from showing. Defaults to true.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool errorSummary;
        public RowEditingConfig(params object[] args){}
    }
    #endregion
    #region RowEditingEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class RowEditingEvents : EditingEvents
    {
        public RowEditingEvents(params object[] args){}
    }
    #endregion
}
