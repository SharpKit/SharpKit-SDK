//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:39 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.data
{
    #region Errors
    /// <inheritdocs />
    /// <summary>
    /// <p>Wraps a collection of validation error responses and provides convenient functions for
    /// accessing and errors for specific fields.</p>
    /// <p>Usually this class does not need to be instantiated directly - instances are instead created
    /// automatically when <see cref="Ext.data.Model.validate">validate</see> on a model instance:</p>
    /// <pre><code>//validate some existing model instance - in this case it returned 2 failures messages
    /// var errors = myModel.validate();
    /// errors.isValid(); //false
    /// errors.length; //2
    /// errors.getByField('name');  // [{field: 'name',  message: 'must be present'}]
    /// errors.getByField('title'); // [{field: 'title', message: 'is too short'}]
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Errors : Ext.util.MixedCollection
    {
        /// <summary>
        /// Returns all of the errors for the given field
        /// </summary>
        /// <param name="fieldName"><p>The field to get errors for</p>
        /// </param>
        /// <returns>
        /// <span><see cref="Object">Object</see>[]</span><div><p>All errors for the given field</p>
        /// </div>
        /// </returns>
        public object[] getByField(JsString fieldName){return null;}
        /// <summary>
        /// Returns true if there are no errors in the collection
        /// </summary>
        /// <returns>
        /// <span><see cref="bool">Boolean</see></span><div>
        /// </div>
        /// </returns>
        public bool isValid(){return false;}
        public Errors(ErrorsConfig config){}
        public Errors(){}
        public Errors(params object[] args){}
    }
    #endregion
    #region ErrorsConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ErrorsConfig : Ext.util.MixedCollectionConfig
    {
        public ErrorsConfig(params object[] args){}
    }
    #endregion
    #region ErrorsEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ErrorsEvents : Ext.util.MixedCollectionEvents
    {
        public ErrorsEvents(params object[] args){}
    }
    #endregion
}
