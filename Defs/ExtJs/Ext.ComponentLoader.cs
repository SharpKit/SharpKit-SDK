//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:39 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext
{
    #region ComponentLoader
    /// <inheritdocs />
    /// <summary>
    /// <p>This class is used to load content via Ajax into a <see cref="Ext.Component">Ext.Component</see>. In general
    /// this class will not be instanced directly, rather a loader configuration will be passed to the
    /// constructor of the <see cref="Ext.Component">Ext.Component</see>.</p>
    /// <h2>HTML Renderer</h2>
    /// <p>By default, the content loaded will be processed as raw html. The response text
    /// from the request is taken and added to the component. This can be used in
    /// conjunction with the <see cref="Ext.ComponentLoaderConfig.scripts">scripts</see> option to execute any inline scripts in
    /// the resulting content. Using this renderer has the same effect as passing the
    /// <see cref="Ext.ComponentConfig.html">Ext.Component.html</see> configuration option.</p>
    /// <h2>Data Renderer</h2>
    /// <p>This renderer allows content to be added by using JSON data and a <see cref="Ext.XTemplate">Ext.XTemplate</see>.
    /// The content received from the response is passed to the <see cref="Ext.Component.update">Ext.Component.update</see> method.
    /// This content is run through the attached <see cref="Ext.ComponentConfig.tpl">Ext.Component.tpl</see> and the data is added to
    /// the Component. Using this renderer has the same effect as using the <see cref="Ext.ComponentConfig.data">Ext.Component.data</see>
    /// configuration in conjunction with a <see cref="Ext.ComponentConfig.tpl">Ext.Component.tpl</see>.</p>
    /// <h2>Component Renderer</h2>
    /// <p>This renderer can only be used with a <see cref="Ext.container.Container">Ext.container.Container</see> and subclasses. It allows for
    /// Components to be loaded remotely into a Container. The response is expected to be a single/series of
    /// <see cref="Ext.Component">Ext.Component</see> configuration objects. When the response is received, the data is decoded
    /// and then passed to <see cref="Ext.container.Container.add">Ext.container.Container.add</see>. Using this renderer has the same effect as specifying
    /// the <see cref="Ext.container.ContainerConfig.items">Ext.container.Container.items</see> configuration on a Container.</p>
    /// <h2>Custom Renderer</h2>
    /// <p>A custom function can be passed to handle any other special case, see the <see cref="Ext.ComponentLoaderConfig.renderer">renderer</see> option.</p>
    /// <h2>Example Usage</h2>
    /// <pre><code>var cmp = <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.Component">Ext.Component</see>', {
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>(),
    /// tpl: '{firstName} - {lastName}',
    /// loader: {
    /// url: 'myPage.php',
    /// renderer: 'data',
    /// params: {
    /// userId: 1
    /// }
    /// }
    /// });
    /// // call the loader manually (or use autoLoad:true instead)
    /// cmp.getLoader().load();
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class ComponentLoader : ElementLoader
    {
        public ComponentLoader(ComponentLoaderConfig config){}
        public ComponentLoader(){}
        public ComponentLoader(params object[] args){}
    }
    #endregion
    #region ComponentLoaderConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ComponentLoaderConfig : ElementLoaderConfig
    {
        public ComponentLoaderConfig(params object[] args){}
    }
    #endregion
    #region ComponentLoaderEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ComponentLoaderEvents : ElementLoaderEvents
    {
        public ComponentLoaderEvents(params object[] args){}
    }
    #endregion
}
