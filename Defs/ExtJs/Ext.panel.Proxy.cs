//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:41 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.panel
{
    #region Proxy
    /// <inheritdocs />
    /// <summary>
    /// <p><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p><p>A custom drag proxy implementation specific to <see cref="Ext.panel.Panel">Ext.panel.Panel</see>s. This class
    /// is primarily used internally for the Panel's drag drop implementation, and
    /// should never need to be created directly.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Proxy : Ext.Base
    {
        /// <summary>
        /// True to insert a placeholder proxy element while dragging the panel, false to drag with no proxy.
        /// Most Panels are not absolute positioned and therefore we need to reserve this space.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool insertProxy;
        /// <summary>
        /// True to move the panel to the dragged position when dropped
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool moveOnDrag;
        /// <summary>
        /// </summary>
        public Ext.panel.Panel panel{get;set;}
        /// <summary>
        /// Creates new panel proxy.
        /// </summary>
        /// <param name="panel"><p>The <see cref="Ext.panel.Panel">Ext.panel.Panel</see> to proxy for</p>
        /// </param>
        /// <param name="config"><p>Config object</p>
        /// </param>
        /// <returns>
        /// <span><see cref="Object">Object</see></span><div>
        /// </div>
        /// </returns>
        public Proxy(Ext.panel.Panel panel, object config=null){}
        /// <summary>
        /// Gets the proxy's element
        /// </summary>
        /// <returns>
        /// <span><see cref="Ext.dom.Element">Ext.Element</see></span><div><p>The proxy's element</p>
        /// </div>
        /// </returns>
        public Ext.dom.Element getEl(){return null;}
        /// <summary>
        /// Gets the proxy's ghost Panel
        /// </summary>
        /// <returns>
        /// <span><see cref="Ext.panel.Panel">Ext.panel.Panel</see></span><div><p>The proxy's ghost Panel</p>
        /// </div>
        /// </returns>
        public Ext.panel.Panel getGhost(){return null;}
        /// <summary>
        /// Gets the proxy element. This is the element that represents where the
        /// Panel was before we started the drag operation.
        /// </summary>
        /// <returns>
        /// <span><see cref="Ext.dom.Element">Ext.Element</see></span><div><p>The proxy's element</p>
        /// </div>
        /// </returns>
        public Ext.dom.Element getProxy(){return null;}
        /// <summary>
        /// Hides the proxy
        /// </summary>
        public void hide(){}
        /// <summary>
        /// Moves the proxy to a different position in the DOM.  This is typically
        /// called while dragging the Panel to keep the proxy sync'd to the Panel's
        /// location.
        /// </summary>
        /// <param name="parentNode"><p>The proxy's parent DOM node</p>
        /// </param>
        /// <param name="before"><p>The sibling node before which the
        /// proxy should be inserted. Defaults to the parent's last child if not
        /// specified.</p>
        /// </param>
        public void moveProxy(object parentNode, object before=null){}
        /// <summary>
        /// Shows the proxy
        /// </summary>
        public void show(){}
        public Proxy(Ext.panel.ProxyConfig config){}
        public Proxy(){}
        public Proxy(params object[] args){}
    }
    #endregion
    #region ProxyConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ProxyConfig : Ext.BaseConfig
    {
        /// <summary>
        /// True to insert a placeholder proxy element while dragging the panel, false to drag with no proxy.
        /// Most Panels are not absolute positioned and therefore we need to reserve this space.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool insertProxy;
        /// <summary>
        /// True to move the panel to the dragged position when dropped
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool moveOnDrag;
        public ProxyConfig(params object[] args){}
    }
    #endregion
    #region ProxyEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ProxyEvents : Ext.BaseEvents
    {
        public ProxyEvents(params object[] args){}
    }
    #endregion
}
