//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:39 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.chart.axis
{
    #region Time
    /// <inheritdocs />
    /// <summary>
    /// <p>A type of axis whose units are measured in time values. Use this axis
    /// for listing dates that you will want to group or dynamically change.
    /// If you just want to display dates as categories then use the
    /// Category class for axis instead.</p>
    /// <p>For example:</p>
    /// <pre><code>axes: [{
    /// type: 'Time',
    /// position: 'bottom',
    /// fields: 'date',
    /// title: 'Day',
    /// dateFormat: 'M d',
    /// constrain: true,
    /// fromDate: new Date('1/1/11'),
    /// toDate: new Date('1/7/11')
    /// }]
    /// </code></pre>
    /// <p>In this example we're creating a time axis that has as title <em>Day</em>.
    /// The field the axis is bound to is <c>date</c>.
    /// The date format to use to display the text for the axis labels is <c>M d</c>
    /// which is a three letter month abbreviation followed by the day number.
    /// The time axis will show values for dates between <c>fromDate</c> and <c>toDate</c>.
    /// Since <c>constrain</c> is set to true all other values for other dates not between
    /// the fromDate and toDate will not be displayed.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Time : Numeric
    {
        /// <summary>
        /// Indicates the format the date will be rendered on.
        /// For example: 'M d' will render the dates as 'Jan 30', etc.
        /// For a list of possible format strings see Date
        /// Defaults to: <c>false</c>
        /// </summary>
        public object dateFormat;
        /// <summary>
        /// The starting date for the time axis.
        /// Defaults to: <c>false</c>
        /// </summary>
        public JsDate fromDate;
        /// <summary>
        /// An array with two components: The first is the unit of the step (day, month, year, etc). The second one is the number of units for the step (1, 2, etc.).
        /// Defaults to: [<see cref="Ext.Date.DAY">Ext.Date.DAY</see>, 1].
        /// </summary>
        public object step;
        /// <summary>
        /// The ending date for the time axis.
        /// Defaults to: <c>false</c>
        /// </summary>
        public JsDate toDate;
        public Time(Ext.chart.axis.TimeConfig config){}
        public Time(){}
        public Time(params object[] args){}
    }
    #endregion
    #region TimeConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class TimeConfig : NumericConfig
    {
        /// <summary>
        /// Indicates the format the date will be rendered on.
        /// For example: 'M d' will render the dates as 'Jan 30', etc.
        /// For a list of possible format strings see Date
        /// Defaults to: <c>false</c>
        /// </summary>
        public object dateFormat;
        /// <summary>
        /// The starting date for the time axis.
        /// Defaults to: <c>false</c>
        /// </summary>
        public JsDate fromDate;
        /// <summary>
        /// An array with two components: The first is the unit of the step (day, month, year, etc). The second one is the number of units for the step (1, 2, etc.).
        /// Defaults to: [<see cref="Ext.Date.DAY">Ext.Date.DAY</see>, 1].
        /// </summary>
        public object step;
        /// <summary>
        /// The ending date for the time axis.
        /// Defaults to: <c>false</c>
        /// </summary>
        public JsDate toDate;
        public TimeConfig(params object[] args){}
    }
    #endregion
    #region TimeEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class TimeEvents : NumericEvents
    {
        public TimeEvents(params object[] args){}
    }
    #endregion
}
