//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:42 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext
{
    #region XTemplateParser
    /// <inheritdocs />
    /// <summary>
    /// <p><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p><p>This class parses the XTemplate syntax and calls abstract methods to process the parts.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class XTemplateParser : Ext.Base
    {
        /// <summary>
        /// The 'for' loop context level. This is adjusted up by one
        /// prior to calling doFor and down by one after calling the corresponding
        /// doEnd that closes the loop. This will be 1 on the first doFor
        /// call.
        /// </summary>
        public JsNumber level{get;set;}
        /// <summary>
        /// This method is called to process &lt;tpl case="action"&gt;. If there are other attributes,
        /// these are passed in the actions object.
        /// </summary>
        /// <param name="action">
        /// </param>
        /// <param name="actions"><p>Other actions keyed by the attribute name (such as 'exec').</p>
        /// </param>
        public void doCase(JsString action, object actions){}
        /// <summary>
        /// This method is called to process &lt;tpl default&gt;.
        /// </summary>
        public void doDefault(){}
        /// <summary>
        /// This method is called to process &lt;tpl else&gt;.
        /// </summary>
        public void doElse(){}
        /// <summary>
        /// This method is called to process &lt;tpl elseif="action"&gt;. If there are other attributes,
        /// these are passed in the actions object.
        /// </summary>
        /// <param name="action">
        /// </param>
        /// <param name="actions"><p>Other actions keyed by the attribute name (such as 'exec').</p>
        /// </param>
        public void doElseIf(JsString action, object actions){}
        /// <summary>
        /// This method is called to process &lt;/tpl&gt;. It is given the action type that started
        /// the tpl and the set of additional actions.
        /// </summary>
        /// <param name="type"><p>The type of action that is being ended.</p>
        /// </param>
        /// <param name="actions"><p>The other actions keyed by the attribute name (such as 'exec').</p>
        /// </param>
        public void doEnd(JsString type, object actions){}
        /// <summary>
        /// This method is called to process {% text %}.
        /// </summary>
        /// <param name="text">
        /// </param>
        public void doEval(JsString text){}
        /// <summary>
        /// This method is called to process &lt;tpl exec="action"&gt;. If there are other attributes,
        /// these are passed in the actions object.
        /// </summary>
        /// <param name="action">
        /// </param>
        /// <param name="actions"><p>Other actions keyed by the attribute name.</p>
        /// </param>
        public void doExec(JsString action, object actions){}
        /// <summary>
        /// This method is called to process expressions (like {[expr]}).
        /// </summary>
        /// <param name="expr"><p>The body of the expression (inside "{[" and "]}").</p>
        /// </param>
        public void doExpr(JsArray<String> expr){}
        /// <summary>
        /// This method is called to process &lt;tpl for="action"&gt;. If there are other attributes,
        /// these are passed in the actions object.
        /// </summary>
        /// <param name="action">
        /// </param>
        /// <param name="actions"><p>Other actions keyed by the attribute name (such as 'exec').</p>
        /// </param>
        public void doFor(JsString action, object actions){}
        /// <summary>
        /// This method is called to process &lt;tpl if="action"&gt;. If there are other attributes,
        /// these are passed in the actions object.
        /// </summary>
        /// <param name="action">
        /// </param>
        /// <param name="actions"><p>Other actions keyed by the attribute name (such as 'exec').</p>
        /// </param>
        public void doIf(JsString action, object actions){}
        /// <summary>
        /// This method is called to process &lt;tpl switch="action"&gt;. If there are other attributes,
        /// these are passed in the actions object.
        /// </summary>
        /// <param name="action">
        /// </param>
        /// <param name="actions"><p>Other actions keyed by the attribute name (such as 'exec').</p>
        /// </param>
        public void doSwitch(JsString action, object actions){}
        /// <summary>
        /// This method is called to process simple tags (like {tag}).
        /// </summary>
        public void doTag(){}
        /// <summary>
        /// This method is called to process a piece of raw text from the tpl.
        /// </summary>
        /// <param name="text">
        /// </param>
        public void doText(JsString text){}
        /// <summary>
        /// This method is called to process an empty &lt;tpl&gt;. This is unlikely to need to be
        /// implemented, so a default (do nothing) version is provided.
        /// </summary>
        public void doTpl(){}
        public XTemplateParser(XTemplateParserConfig config){}
        public XTemplateParser(){}
        public XTemplateParser(params object[] args){}
    }
    #endregion
    #region XTemplateParserConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class XTemplateParserConfig : Ext.BaseConfig
    {
        public XTemplateParserConfig(params object[] args){}
    }
    #endregion
    #region XTemplateParserEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class XTemplateParserEvents : Ext.BaseEvents
    {
        public XTemplateParserEvents(params object[] args){}
    }
    #endregion
}
