//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:42 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.ux.grid.menu
{
    #region ListMenu
    /// <inheritdocs />
    /// <summary>
    /// <p>This is a supporting class for <see cref="Ext.ux.grid.filter.ListFilter">Ext.ux.grid.filter.ListFilter</see>.
    /// Although not listed as configuration options for this class, this class
    /// also accepts all configuration options from <see cref="Ext.ux.grid.filter.ListFilter">Ext.ux.grid.filter.ListFilter</see>.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class ListMenu : Ext.menu.Menu
    {
        /// <summary>
        /// Defaults to 'text'.
        /// Defaults to: <c>&quot;text&quot;</c>
        /// </summary>
        public JsString labelField;
        /// <summary>
        /// Defaults to true.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool loadOnShow;
        /// <summary>
        /// Defaults to 'Loading...'.
        /// </summary>
        public JsString paramPrefix;
        /// <summary>
        /// Specify true to group all items in this list into a single-select
        /// radio button group. Defaults to false.
        /// Defaults to: <c>false</c>
        /// </summary>
        public bool single;
        /// <summary>
        /// Handler for the 'checkchange' event from an check item in this menu
        /// </summary>
        /// <param name="item"><p><see cref="Ext.menu.CheckItem">Ext.menu.CheckItem</see></p>
        /// </param>
        /// <param name="checked"><p>The checked value that was set</p>
        /// </param>
        public void checkChange(object item, object @checked){}
        /// <summary>
        /// Get the selected items.
        /// </summary>
        /// <returns>
        /// <span><see cref="Array">Array</see></span><div><p>selected</p>
        /// </div>
        /// </returns>
        public JsArray getSelected(){return null;}
        /// <summary>
        /// Parameters<li><span>store</span> : <see cref="Object">Object</see><div>
        /// </div></li><li><span>records</span> : <see cref="Object">Object</see><div>
        /// </div></li>
        /// </summary>
        /// <param name="store">
        /// </param>
        /// <param name="records">
        /// </param>
        private void onLoad(object store, object records){}
        /// <summary>
        /// Parameters<li><span>value</span> : <see cref="Object">Object</see><div>
        /// </div></li>
        /// </summary>
        /// <param name="value">
        /// </param>
        private void setSelected(object value){}
        /// <summary>
        /// Lists will initially show a 'loading' item while the data is retrieved from the store.
        /// In some cases the loaded data will result in a list that goes off the screen to the
        /// right (as placement calculations were done with the loading item). This adapter will
        /// allow show to be called with no arguments to show with the previous arguments and
        /// thus recalculate the width and potentially hang the menu from the left.
        /// Overrides: <see cref="Ext.Component.show">Ext.Component.show</see>
        /// </summary>
        public void show(){}
        public ListMenu(ListMenuConfig config){}
        public ListMenu(){}
        public ListMenu(params object[] args){}
    }
    #endregion
    #region ListMenuConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ListMenuConfig : Ext.menu.MenuConfig
    {
        /// <summary>
        /// Defaults to 'text'.
        /// Defaults to: <c>&quot;text&quot;</c>
        /// </summary>
        public JsString labelField;
        /// <summary>
        /// Defaults to true.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool loadOnShow;
        /// <summary>
        /// Defaults to 'Loading...'.
        /// </summary>
        public JsString paramPrefix;
        /// <summary>
        /// Specify true to group all items in this list into a single-select
        /// radio button group. Defaults to false.
        /// Defaults to: <c>false</c>
        /// </summary>
        public bool single;
        public ListMenuConfig(params object[] args){}
    }
    #endregion
    #region ListMenuEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class ListMenuEvents : Ext.menu.MenuEvents
    {
        /// <summary>
        /// Fires when there is a change in checked items from this list
        /// </summary>
        /// <param name="item"><p><see cref="Ext.menu.CheckItem">Ext.menu.CheckItem</see></p>
        /// </param>
        /// <param name="checked"><p>The checked value that was set</p>
        /// </param>
        /// <param name="eOpts"><p>The options object passed to <see cref="Ext.util.Observable.addListener">Ext.util.Observable.addListener</see>.</p>
        /// </param>
        public void checkchange(object item, object @checked, object eOpts){}
        public ListMenuEvents(params object[] args){}
    }
    #endregion
}
