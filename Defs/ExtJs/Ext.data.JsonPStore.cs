//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:39 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.data
{
    #region JsonPStore
    /// <inheritdocs />
    /// <summary>
    /// <p>Small helper class to make creating <see cref="Ext.data.Store">Ext.data.Store</see>s from different domain JSON data easier.
    /// A JsonPStore will be automatically configured with a <see cref="Ext.data.reader.Json">Ext.data.reader.Json</see> and a <see cref="Ext.data.proxy.JsonP">JsonPProxy</see>.</p>
    /// <p>A store configuration would be something like:
    /// <pre><code>var store = new <see cref="Ext.data.JsonPStore">Ext.data.JsonPStore</see>({
    /// // store configs
    /// storeId: 'myStore',
    /// // proxy configs
    /// url: 'get-images.php',
    /// // reader configs
    /// root: 'images',
    /// idProperty: 'name',
    /// fields: ['name', 'url', {name:'size', type: 'float'}, {name:'lastmod', type:'date'}]
    /// });
    /// </code></pre></p>
    /// <p>This store is configured to consume a returned object of the form:
    /// <pre><code>stcCallback({
    /// images: [
    /// {name: 'Image one', url:'/GetImage.php?id=1', size:46.5, lastmod: new Date(2007, 10, 29)},
    /// {name: 'Image Two', url:'/GetImage.php?id=2', size:43.2, lastmod: new Date(2007, 10, 30)}
    /// ]
    /// })
    /// </code></pre>
    /// <p>Where stcCallback is the callback name passed in the request to the remote domain. See <see cref="Ext.data.proxy.JsonP">JsonPProxy</see>
    /// for details of how this works.</p>
    /// An object literal of this form could also be used as the <see cref="Ext.data.JsonPStoreConfig.data">data</see> config option.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class JsonPStore : Ext.data.Store
    {
        public JsonPStore(JsonPStoreConfig config){}
        public JsonPStore(){}
        public JsonPStore(params object[] args){}
    }
    #endregion
    #region JsonPStoreConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class JsonPStoreConfig : Ext.data.StoreConfig
    {
        public JsonPStoreConfig(params object[] args){}
    }
    #endregion
    #region JsonPStoreEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class JsonPStoreEvents : Ext.data.StoreEvents
    {
        public JsonPStoreEvents(params object[] args){}
    }
    #endregion
}
