//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:41 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.menu
{
    #region DatePicker
    /// <inheritdocs />
    /// <summary>
    /// <p>A menu containing an <see cref="Ext.picker.Date">Ext.picker.Date</see> Component.</p>
    /// <p>Notes:</p>
    /// <ul>
    /// <li>Although not listed here, the <strong>constructor</strong> for this class accepts all of the
    /// configuration options of <strong><see cref="Ext.picker.Date">Ext.picker.Date</see></strong>.</li>
    /// <li>If subclassing DateMenu, any configuration options for the DatePicker must be applied
    /// to the <strong>initialConfig</strong> property of the DateMenu. Applying <see cref="Ext.picker.Date">Date Picker</see>
    /// configuration settings to <strong>this</strong> will <strong>not</strong> affect the Date Picker's configuration.</li>
    /// </ul>
    /// <p>Example:</p>
    /// <pre><code>var dateMenu = <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.menu.DatePicker">Ext.menu.DatePicker</see>', {
    /// handler: function(dp, date){
    /// <see cref="Ext.MessageBox.alert">Ext.Msg.alert</see>('Date Selected', 'You selected ' + <see cref="Ext.Date.format">Ext.Date.format</see>(date, 'M j, Y'));
    /// }
    /// });
    /// <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.menu.Menu">Ext.menu.Menu</see>', {
    /// width: 100,
    /// height: 90,
    /// floating: false,  // usually you want this set to True (default)
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>(),  // usually rendered by it's containing component
    /// items: [{
    /// text: 'choose a date',
    /// menu: dateMenu
    /// },{
    /// iconCls: 'add16',
    /// text: 'icon item'
    /// },{
    /// text: 'regular item'
    /// }]
    /// });
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class DatePicker : Ext.menu.Menu
    {
        /// <summary>
        /// False to continue showing the menu after a date is selected.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool hideOnClick;
        /// <summary>
        /// An id to assign to the underlying date picker.
        /// Defaults to: <c>null</c>
        /// </summary>
        public JsString pickerId;
        /// <summary>
        /// The Ext.picker.Date instance for this DateMenu
        /// </summary>
        public Ext.picker.Date picker{get;set;}
        public DatePicker(DatePickerConfig config){}
        public DatePicker(){}
        public DatePicker(params object[] args){}
    }
    #endregion
    #region DatePickerConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DatePickerConfig : Ext.menu.MenuConfig
    {
        /// <summary>
        /// False to continue showing the menu after a date is selected.
        /// Defaults to: <c>true</c>
        /// </summary>
        public bool hideOnClick;
        /// <summary>
        /// An id to assign to the underlying date picker.
        /// Defaults to: <c>null</c>
        /// </summary>
        public JsString pickerId;
        public DatePickerConfig(params object[] args){}
    }
    #endregion
    #region DatePickerEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DatePickerEvents : Ext.menu.MenuEvents
    {
        /// <summary>
        /// Fires when a date is selected
        /// </summary>
        /// <param name="this"><p>DatePicker</p>
        /// </param>
        /// <param name="date"><p>The selected date</p>
        /// </param>
        /// <param name="eOpts"><p>The options object passed to <see cref="Ext.util.Observable.addListener">Ext.util.Observable.addListener</see>.</p>
        /// </param>
        public void select(Ext.picker.Date @this, JsDate date, object eOpts){}
        public DatePickerEvents(params object[] args){}
    }
    #endregion
}
