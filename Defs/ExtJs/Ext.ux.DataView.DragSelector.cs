//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:42 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.ux.DataView
{
    #region DragSelector
    /// <summary>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class DragSelector
    {
        /// <summary>
        /// The DataView bound to this instance
        /// </summary>
        public Ext.view.View dataview{get;set;}
        /// <summary>
        /// Represents the region currently dragged out by the user. This is used to figure out which dataview nodes are
        /// in the selected area and to set the size of the Proxy element used to highlight the current drag area
        /// </summary>
        public Ext.util.Region dragRegion{get;set;}
        /// <summary>
        /// The DragTracker attached to this instance. Note that the 4 on* functions are called in the scope of the
        /// DragTracker ('this' refers to the DragTracker inside those functions), so we pass a reference to the
        /// DragSelector so that we can call this class's functions.
        /// </summary>
        public Ext.dd.DragTracker tracker{get;set;}
        /// <summary>
        /// Reusable handler that's used to cancel the container click event when dragging on the dataview. See onStart for
        /// details
        /// </summary>
        private void cancelClick(){}
        /// <summary>
        /// Gets the region taken up by each rendered node in the DataView. We use these regions to figure out which nodes
        /// to select based on the selector region the user has dragged out
        /// </summary>
        private void fillRegions(){}
        /// <summary>
        /// Creates a Proxy element that will be used to highlight the drag selection region
        /// </summary>
        /// <returns>
        /// <span><see cref="Ext.dom.Element">Ext.Element</see></span><div><p>The Proxy element</p>
        /// </div>
        /// </returns>
        private Ext.dom.Element getProxy(){return null;}
        /// <summary>
        /// Initializes the plugin by setting up the drag tracker
        /// </summary>
        /// <param name="dataview">
        /// </param>
        public void init(object dataview){}
        /// <summary>
        /// Listener attached to the DragTracker's onBeforeStart event. Returns false if the drag didn't start within the
        /// DataView's el
        /// </summary>
        /// <param name="e">
        /// </param>
        private void onBeforeStart(object e){}
        /// <summary>
        /// Listener attached to the DragTracker's onDrag event. Figures out how large the drag selection area should be and
        /// updates the proxy element's size to match. Then iterates over all of the rendered items and marks them selected
        /// if the drag region touches them
        /// </summary>
        /// <param name="e"><p>The drag event</p>
        /// </param>
        private void onDrag(EventObject e){}
        /// <summary>
        /// Listener attached to the DragTracker's onEnd event. This is a delayed function which executes 1
        /// millisecond after it has been called. This is because the dragging flag must remain active to cancel
        /// the containerclick event which the mouseup event will trigger.
        /// </summary>
        /// <param name="e"><p>The event object</p>
        /// </param>
        private void onEnd(EventObject e){}
        /// <summary>
        /// Called when the attached DataView is rendered. This sets up the DragTracker instance that will be used
        /// to created a dragged selection area
        /// </summary>
        private void onRender(){}
        /// <summary>
        /// Listener attached to the DragTracker's onStart event. Cancel's the DataView's containerclick event from firing
        /// and sets the start co-ordinates of the Proxy element. Clears any existing DataView selection
        /// </summary>
        /// <param name="e"><p>The click event</p>
        /// </param>
        private void onStart(EventObject e){}
        public DragSelector(DragSelectorConfig config){}
        public DragSelector(){}
        public DragSelector(params object[] args){}
    }
    #endregion
    #region DragSelectorConfig
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DragSelectorConfig
    {
        public DragSelectorConfig(params object[] args){}
    }
    #endregion
    #region DragSelectorEvents
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class DragSelectorEvents
    {
        public DragSelectorEvents(params object[] args){}
    }
    #endregion
}
