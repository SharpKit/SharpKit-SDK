//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:39 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.chart.series
{
    #region Radar
    /// <inheritdocs />
    /// <summary>
    /// <p>Creates a Radar Chart. A Radar Chart is a useful visualization technique for comparing different quantitative values for
    /// a constrained number of categories.</p>
    /// <p>As with all other series, the Radar series must be appended in the <em>series</em> Chart array configuration. See the Chart
    /// documentation for more information. A typical configuration object for the radar series could be:</p>
    /// <pre><code>var store = <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.data.JsonStore">Ext.data.JsonStore</see>', {
    /// fields: ['name', 'data1', 'data2', 'data3'],
    /// data: [
    /// { 'name': 'metric one',   'data1': 14, 'data2': 12, 'data3': 13 },
    /// { 'name': 'metric two',   'data1': 16, 'data2':  8, 'data3':  3 },
    /// { 'name': 'metric three', 'data1': 14, 'data2':  2, 'data3':  7 },
    /// { 'name': 'metric four',  'data1':  6, 'data2': 14, 'data3': 23 },
    /// { 'name': 'metric five',  'data1': 36, 'data2': 38, 'data3': 33 }
    /// ]
    /// });
    /// <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.chart.Chart">Ext.chart.Chart</see>', {
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>(),
    /// width: 500,
    /// height: 300,
    /// animate: true,
    /// theme:'Category2',
    /// store: store,
    /// axes: [{
    /// type: 'Radial',
    /// position: 'radial',
    /// label: {
    /// display: true
    /// }
    /// }],
    /// series: [{
    /// type: 'radar',
    /// xField: 'name',
    /// yField: 'data1',
    /// showInLegend: true,
    /// showMarkers: true,
    /// markerConfig: {
    /// radius: 5,
    /// size: 5
    /// },
    /// style: {
    /// 'stroke-width': 2,
    /// fill: 'none'
    /// }
    /// },{
    /// type: 'radar',
    /// xField: 'name',
    /// yField: 'data2',
    /// showMarkers: true,
    /// showInLegend: true,
    /// markerConfig: {
    /// radius: 5,
    /// size: 5
    /// },
    /// style: {
    /// 'stroke-width': 2,
    /// fill: 'none'
    /// }
    /// },{
    /// type: 'radar',
    /// xField: 'name',
    /// yField: 'data3',
    /// showMarkers: true,
    /// showInLegend: true,
    /// markerConfig: {
    /// radius: 5,
    /// size: 5
    /// },
    /// style: {
    /// 'stroke-width': 2,
    /// fill: 'none'
    /// }
    /// }]
    /// });
    /// </code></pre>
    /// <p>In this configuration we add three series to the chart. Each of these series is bound to the same
    /// categories field, <c>name</c> but bound to different properties for each category, <c>data1</c>, <c>data2</c> and
    /// <c>data3</c> respectively. All series display markers by having <c>showMarkers</c> enabled. The configuration
    /// for the markers of each series can be set by adding properties onto the markerConfig object.
    /// Finally we override some theme styling properties by adding properties to the <c>style</c> object.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Radar : Series
    {
        /// <summary>
        /// An object containing styles for overriding series styles from Theming.
        /// Defaults to: <c>{}</c>
        /// </summary>
        public JsObject style;
        /// <summary>
        /// Draws the series for the current chart.
        /// </summary>
        public void drawSeries(){}
        public Radar(RadarConfig config){}
        public Radar(){}
        public Radar(params object[] args){}
    }
    #endregion
    #region RadarConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class RadarConfig : SeriesConfig
    {
        /// <summary>
        /// An object containing styles for overriding series styles from Theming.
        /// Defaults to: <c>{}</c>
        /// </summary>
        public JsObject style;
        public RadarConfig(params object[] args){}
    }
    #endregion
    #region RadarEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class RadarEvents : SeriesEvents
    {
        public RadarEvents(params object[] args){}
    }
    #endregion
}
