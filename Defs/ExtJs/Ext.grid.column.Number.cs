//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:41 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.grid.column
{
    #region Number
    /// <inheritdocs />
    /// <summary>
    /// <p>A Column definition class which renders a numeric data field according to a <see cref="Ext.grid.column.NumberConfig.format">format</see> string.</p>
    /// <pre><code><see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.data.Store">Ext.data.Store</see>', {
    /// storeId:'sampleStore',
    /// fields:[
    /// { name: 'symbol', type: 'string' },
    /// { name: 'price',  type: 'number' },
    /// { name: 'change', type: 'number' },
    /// { name: 'volume', type: 'number' }
    /// ],
    /// data:[
    /// { symbol: "msft",   price: 25.76,  change: 2.43, volume: 61606325 },
    /// { symbol: "goog",   price: 525.73, change: 0.81, volume: 3053782  },
    /// { symbol: "apple",  price: 342.41, change: 1.35, volume: 24484858 },
    /// { symbol: "sencha", price: 142.08, change: 8.85, volume: 5556351  }
    /// ]
    /// });
    /// <see cref="Ext.ExtContext.create">Ext.create</see>('<see cref="Ext.grid.Panel">Ext.grid.Panel</see>', {
    /// title: 'Number Column Demo',
    /// store: <see cref="Ext.data.StoreManager.lookup">Ext.data.StoreManager.lookup</see>('sampleStore'),
    /// columns: [
    /// { text: 'Symbol',         dataIndex: 'symbol', flex: 1 },
    /// { text: 'Current Price',  dataIndex: 'price',  renderer: <see cref="Ext.util.Format.usMoney">Ext.util.Format.usMoney</see> },
    /// { text: 'Change',         dataIndex: 'change', xtype: 'numbercolumn', format:'0.00' },
    /// { text: 'Volume',         dataIndex: 'volume', xtype: 'numbercolumn', format:'0,000' }
    /// ],
    /// height: 200,
    /// width: 400,
    /// renderTo: <see cref="Ext.ExtContext.getBody">Ext.getBody</see>()
    /// });
    /// </code></pre>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Number : Ext.grid.column.Column
    {
        /// <summary>
        /// A formatting string as used by Ext.util.Format.number to format a numeric value for this Column.
        /// Defaults to: <c>&quot;0,000.00&quot;</c>
        /// </summary>
        public JsString format;
        public Number(Ext.grid.column.NumberConfig config){}
        public Number(){}
        public Number(params object[] args){}
    }
    #endregion
    #region NumberConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class NumberConfig : Ext.grid.column.ColumnConfig
    {
        /// <summary>
        /// A formatting string as used by Ext.util.Format.number to format a numeric value for this Column.
        /// Defaults to: <c>&quot;0,000.00&quot;</c>
        /// </summary>
        public JsString format;
        public NumberConfig(params object[] args){}
    }
    #endregion
    #region NumberEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class NumberEvents : Ext.grid.column.ColumnEvents
    {
        public NumberEvents(params object[] args){}
    }
    #endregion
}
