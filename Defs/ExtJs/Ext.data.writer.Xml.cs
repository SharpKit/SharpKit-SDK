//***************************************************
//* This file was generated by tool
//* SharpKit
//* At: 29/08/2012 03:59:40 p.m.
//***************************************************
using SharpKit.JavaScript;
namespace Ext.data.writer
{
    #region Xml
    /// <inheritdocs />
    /// <summary>
    /// <p>This class is used to write <see cref="Ext.data.Model">Ext.data.Model</see> data to the server in an XML format.
    /// The <see cref="Ext.data.writer.XmlConfig.documentRoot">documentRoot</see> property is used to specify the root element in the XML document.
    /// The <see cref="Ext.data.writer.XmlConfig.record">record</see> option is used to specify the element name for each record that will make
    /// up the XML document.</p>
    /// </summary>
    [JsType(JsMode.Prototype, Export=false, OmitOptionalParameters=true)]
    public partial class Xml : Writer
    {
        /// <summary>
        /// The root to be used if documentRoot is empty and a root is required
        /// to form a valid XML document.
        /// Defaults to: <c>&quot;xmlData&quot;</c>
        /// </summary>
        public JsString defaultDocumentRoot;
        /// <summary>
        /// The name of the root element of the document. Defaults to 'xmlData'.
        /// If there is more than 1 record and the root is not specified, the default document root will still be used
        /// to ensure a valid XML document is created.
        /// Defaults to: <c>&quot;xmlData&quot;</c>
        /// </summary>
        public JsString documentRoot;
        /// <summary>
        /// A header to use in the XML document (such as setting the encoding or version).
        /// Defaults to ''.
        /// Defaults to: <c>&quot;&quot;</c>
        /// </summary>
        public JsString header;
        /// <summary>
        /// The name of the node to use for each record. Defaults to 'record'.
        /// Defaults to: <c>&quot;record&quot;</c>
        /// </summary>
        public JsString record;
        public Xml(Ext.data.writer.XmlConfig config){}
        public Xml(){}
        public Xml(params object[] args){}
    }
    #endregion
    #region XmlConfig
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class XmlConfig : WriterConfig
    {
        /// <summary>
        /// The root to be used if documentRoot is empty and a root is required
        /// to form a valid XML document.
        /// Defaults to: <c>&quot;xmlData&quot;</c>
        /// </summary>
        public JsString defaultDocumentRoot;
        /// <summary>
        /// The name of the root element of the document. Defaults to 'xmlData'.
        /// If there is more than 1 record and the root is not specified, the default document root will still be used
        /// to ensure a valid XML document is created.
        /// Defaults to: <c>&quot;xmlData&quot;</c>
        /// </summary>
        public JsString documentRoot;
        /// <summary>
        /// A header to use in the XML document (such as setting the encoding or version).
        /// Defaults to ''.
        /// Defaults to: <c>&quot;&quot;</c>
        /// </summary>
        public JsString header;
        /// <summary>
        /// The name of the node to use for each record. Defaults to 'record'.
        /// Defaults to: <c>&quot;record&quot;</c>
        /// </summary>
        public JsString record;
        public XmlConfig(params object[] args){}
    }
    #endregion
    #region XmlEvents
    /// <inheritdocs />
    [JsType(JsMode.Json, Export=false, OmitOptionalParameters=true)]
    public partial class XmlEvents : WriterEvents
    {
        public XmlEvents(params object[] args){}
    }
    #endregion
}
