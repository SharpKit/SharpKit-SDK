// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.eventx.type
{
    /// <summary>
	/// <para>Event object for data holding event or data changes.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.event.type.Data", OmitOptionalParameters = true, Export = false)]
    public partial class Data : qx.eventx.type.Event
    {
		#region Methods

		public Data() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get a copy of this object</para>
		/// </summary>
		/// <param name="embryo">Optional event class, which will be configured using the data of this event instance. The event must be an instance of this event class. If the data is null, a new pooled instance is created.</param>
		/// <returns>a copy of this object</returns>
		[JsMethod(Name = "clone")]
		public qx.eventx.type.Data Clone(qx.eventx.type.Data embryo = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>The new data of the event sending this data event.
		/// The return data type is the same as the event data type.</para>
		/// </summary>
		/// <returns>The new data of the event</returns>
		[JsMethod(Name = "getData")]
		public object GetData() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>The old data of the event sending this data event.
		/// The return data type is the same as the event data type.</para>
		/// </summary>
		/// <returns>The old data of the event</returns>
		[JsMethod(Name = "getOldData")]
		public object GetOldData() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Initializes an event object.</para>
		/// </summary>
		/// <param name="data">The event&#8217;s new data</param>
		/// <param name="old">The event&#8217;s old data (optional)</param>
		/// <param name="cancelable">Whether or not an event can have its default action prevented. The default action can either be the browser&#8217;s default action of a native event (e.g. open the context menu on a right click) or the default action of a qooxdoo class (e.g. close the window widget). The default action can be prevented by calling qx.event.type.Event#preventDefault</param>
		/// <returns>the initialized instance.</returns>
		[JsMethod(Name = "init")]
		public qx.eventx.type.Data Init(object data, object old = null, bool cancelable = false) { throw new NotImplementedException(); }

		#endregion Methods
    }
}