// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.bom
{
    /// <summary>
	/// <para>A wrapper for Cookie handling.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.bom.Cookie", OmitOptionalParameters = true, Export = false)]
    public partial class Cookie 
    {
		#region Methods

		public Cookie() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Deletes the string value of a cookie.</para>
		/// </summary>
		/// <param name="key">The key for the string value.</param>
		/// <param name="path">Path value.</param>
		/// <param name="domain">Domain value.</param>
		[JsMethod(Name = "del")]
		public static void Del(string key, string path = null, string domain = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the string value of a cookie.</para>
		/// </summary>
		/// <param name="key">The key for the saved string value.</param>
		/// <returns>Returns the saved string value, if the cookie contains a value for the key, null otherwise.</returns>
		[JsMethod(Name = "get")]
		public static string Get(string key) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the string value of a cookie.</para>
		/// </summary>
		/// <param name="key">The key for the string value.</param>
		/// <param name="value">The string value.</param>
		/// <param name="expires">The expires in days starting from now, or null if the cookie should deleted after browser close.</param>
		/// <param name="path">Path value.</param>
		/// <param name="domain">Domain value.</param>
		/// <param name="secure">Secure flag.</param>
		[JsMethod(Name = "set")]
		public static void Set(string key, string value, double? expires = null, string path = null, string domain = null, bool? secure = null) { throw new NotImplementedException(); }

		#endregion Methods
    }
}