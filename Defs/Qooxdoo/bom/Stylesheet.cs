// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.bom
{
    /// <summary>
	/// <para>Cross-browser wrapper to work with CSS stylesheets.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.bom.Stylesheet", OmitOptionalParameters = true, Export = false)]
    public partial class Stylesheet 
    {
		#region Methods

		public Stylesheet() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Add an import of an external CSS file to a stylesheet</para>
		/// </summary>
		/// <param name="sheet">the stylesheet object</param>
		/// <param name="url">URL of the external stylesheet file</param>
		[JsMethod(Name = "addImport")]
		public static void AddImport(object sheet, string url) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Insert a new CSS rule into a given Stylesheet</para>
		/// </summary>
		/// <param name="sheet">the target Stylesheet object</param>
		/// <param name="selector">the selector</param>
		/// <param name="entry">style rule</param>
		[JsMethod(Name = "addRule")]
		public static void AddRule(object sheet, string selector, string entry) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Create a new Stylesheet node and append it to the document</para>
		/// </summary>
		/// <param name="text">optional string of css rules</param>
		/// <returns>the generates stylesheet element</returns>
		[JsMethod(Name = "createElement")]
		public static Stylesheet CreateElement(string text) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Include a CSS file</para>
		/// Note: Using a resource ID as the href parameter
		/// will no longer be supported. Call
		/// qx.util.ResourceManager.getInstance().toUri(href) to get
		/// valid URI to be used with this method.
		/// </summary>
		/// <param name="href">Href value</param>
		/// <param name="doc">Document to modify</param>
		[JsMethod(Name = "includeFile")]
		public static void IncludeFile(string href, Document doc) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Remove all imports from a stylesheet</para>
		/// </summary>
		/// <param name="sheet">the stylesheet object</param>
		[JsMethod(Name = "removeAllImports")]
		public static void RemoveAllImports(object sheet) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Remove all CSS rules from a stylesheet</para>
		/// </summary>
		/// <param name="sheet">the stylesheet object</param>
		[JsMethod(Name = "removeAllRules")]
		public static void RemoveAllRules(object sheet) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Removes an import from a stylesheet</para>
		/// </summary>
		/// <param name="sheet">the stylesheet object</param>
		/// <param name="url">URL of the imported CSS file</param>
		[JsMethod(Name = "removeImport")]
		public static void RemoveImport(object sheet, string url) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Remove a CSS rule from a stylesheet</para>
		/// </summary>
		/// <param name="sheet">the Stylesheet</param>
		/// <param name="selector">the Selector of the rule to remove</param>
		[JsMethod(Name = "removeRule")]
		public static void RemoveRule(object sheet, string selector) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Remove the given sheet from its owner.</para>
		/// </summary>
		/// <param name="sheet">the stylesheet object</param>
		[JsMethod(Name = "removeSheet")]
		public static void RemoveSheet(object sheet) { throw new NotImplementedException(); }

		#endregion Methods
    }
}