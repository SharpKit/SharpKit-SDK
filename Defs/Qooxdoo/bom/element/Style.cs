// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.bom.element
{
    /// <summary>
	/// <para>Style querying and modification of HTML elements.</para>
	/// <para>Automatically normalizes cross-browser differences for setting and reading
	/// CSS attributes. Optimized for performance.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.bom.element.Style", OmitOptionalParameters = true, Export = false)]
    public partial class Style 
    {
		#region Methods

		public Style() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Compiles the given styles into a string which can be used to
		/// concat a HTML string for innerHTML usage.</para>
		/// </summary>
		/// <param name="map">Map of style properties to compile</param>
		/// <returns>Compiled string of given style properties.</returns>
		[JsMethod(Name = "compile")]
		public static string Compile(object map) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Gets the value of a style property.</para>
		/// <para>Computed</para>
		/// <para>Returns the computed value of a style property. Compared to the cascaded style,
		/// this one also interprets the values e.g. translates em units to
		/// px.</para>
		/// <para>Cascaded</para>
		/// <para>Returns the cascaded value of a style property.</para>
		/// <para>Local</para>
		/// <para>Ignores inheritance cascade. Does not interpret values.</para>
		/// </summary>
		/// <param name="element">The DOM element to modify</param>
		/// <param name="name">Name of the style attribute (js variant e.g. marginTop, wordSpacing)</param>
		/// <param name="mode">Choose one of the modes #COMPUTED_MODE, #CASCADED_MODE, #LOCAL_MODE. The computed mode is the default one.</param>
		/// <param name="smart">Whether the implementation should automatically use special implementations for some properties</param>
		/// <returns>The value of the property</returns>
		[JsMethod(Name = "get")]
		public static object Get(qx.html.Element element, string name, double mode, bool smart = true) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the full content of the style attribute.</para>
		/// </summary>
		/// <param name="element">The DOM element to query</param>
		/// <returns>the full CSS string</returns>
		[JsMethod(Name = "getCss")]
		public static string GetCss(qx.html.Element element) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Checks whether the browser supports the given CSS property.</para>
		/// </summary>
		/// <param name="propertyName">The name of the property</param>
		/// <returns>Whether the property id supported</returns>
		[JsMethod(Name = "isPropertySupported")]
		public static bool IsPropertySupported(string propertyName) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the value of a style property</para>
		/// </summary>
		/// <param name="element">The DOM element to modify</param>
		/// <param name="name">Name of the style attribute (js variant e.g. marginTop, wordSpacing)</param>
		/// <param name="smart">Whether the implementation should automatically use special implementations for some properties</param>
		[JsMethod(Name = "reset")]
		public static void Reset(qx.html.Element element, string name, bool smart = true) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the value of a style property</para>
		/// </summary>
		/// <param name="element">The DOM element to modify</param>
		/// <param name="name">Name of the style attribute (js variant e.g. marginTop, wordSpacing)</param>
		/// <param name="value">The value for the given style</param>
		/// <param name="smart">Whether the implementation should automatically use special implementations for some properties</param>
		[JsMethod(Name = "set")]
		public static void Set(qx.html.Element element, string name, object value, bool smart = true) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Set the full CSS content of the style attribute</para>
		/// </summary>
		/// <param name="element">The DOM element to modify</param>
		/// <param name="value">The full CSS string</param>
		[JsMethod(Name = "setCss")]
		public static void SetCss(qx.html.Element element, string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Convenience method to modify a set of styles at once.</para>
		/// </summary>
		/// <param name="element">The DOM element to modify</param>
		/// <param name="styles">a map where the key is the name of the property and the value is the value to use.</param>
		/// <param name="smart">Whether the implementation should automatically use special implementations for some properties</param>
		[JsMethod(Name = "setStyles")]
		public static void SetStyles(qx.html.Element element, object styles, bool smart = true) { throw new NotImplementedException(); }

		#endregion Methods
    }
}