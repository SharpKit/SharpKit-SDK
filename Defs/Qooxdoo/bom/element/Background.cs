// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.bom.element
{
    /// <summary>
	/// <para>The background class contains methods to compute and set the background image
	/// of a DOM element.</para>
	/// <para>It fixes a background position issue in Firefox 2.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.bom.element.Background", OmitOptionalParameters = true, Export = false)]
    public partial class Background 
    {
		#region Methods

		public Background() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Compiles the background into a CSS compatible string.</para>
		/// </summary>
		/// <param name="source">The URL of the background image</param>
		/// <param name="repeat">The background repeat property. valid values are repeat, repeat-x, repeat-y, no-repeat</param>
		/// <param name="left">The horizontal offset of the image inside of the image element. If the value is an integer it is interpreted as pixel value otherwise the value is taken as CSS value. CSS the values are &#8220;center&#8221;, &#8220;left&#8221; and &#8220;right&#8221;</param>
		/// <param name="top">The vertical offset of the image inside of the image element. If the value is an integer it is interpreted as pixel value otherwise the value is taken as CSS value. CSS the values are &#8220;top&#8221;, &#8220;bottom&#8221; and &#8220;center&#8221;</param>
		/// <returns>CSS string</returns>
		[JsMethod(Name = "compile")]
		public static string Compile(string source = null, string repeat = null, object left = null, object top = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get standard css background styles</para>
		/// </summary>
		/// <param name="source">The URL of the background image</param>
		/// <param name="repeat">The background repeat property. valid values are repeat, repeat-x, repeat-y, no-repeat</param>
		/// <param name="left">The horizontal offset of the image inside of the image element. If the value is an integer it is interpreted as pixel value otherwise the value is taken as CSS value. CSS the values are &#8220;center&#8221;, &#8220;left&#8221; and &#8220;right&#8221;</param>
		/// <param name="top">The vertical offset of the image inside of the image element. If the value is an integer it is interpreted as pixel value otherwise the value is taken as CSS value. CSS the values are &#8220;top&#8221;, &#8220;bottom&#8221; and &#8220;center&#8221;</param>
		/// <returns>A map of CSS styles</returns>
		[JsMethod(Name = "getStyles")]
		public static object GetStyles(string source, string repeat = null, object left = null, object top = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Set the background on the given DOM element</para>
		/// </summary>
		/// <param name="element">The element to modify</param>
		/// <param name="source">The URL of the background image</param>
		/// <param name="repeat">The background repeat property. valid values are repeat, repeat-x, repeat-y, no-repeat</param>
		/// <param name="left">The horizontal offset of the image inside of the image element.</param>
		/// <param name="top">The vertical offset of the image inside of the image element.</param>
		[JsMethod(Name = "set")]
		public static void Set(qx.html.Element element, string source = null, string repeat = null, double? left = null, double? top = null) { throw new NotImplementedException(); }

		#endregion Methods
    }
}