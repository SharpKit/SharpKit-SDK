// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.bom
{
    /// <summary>
	/// <para>This class is mainly a convenience wrapper for DOM elements to
	/// qooxdoo&#8217;s event system.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.bom.Html", OmitOptionalParameters = true, Export = false)]
    public partial class Html 
    {
		#region Methods

		public Html() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Cleans-up the given HTML and append it to a fragment</para>
		/// <para>When no context is given the global document is used to
		/// create new DOM elements.</para>
		/// <para>When a fragment is given the nodes are appended to this
		/// fragment except the script tags. These are returned in a separate Array.</para>
		/// <para>Please note: HTML coming from user input must be validated prior
		/// to passing it to this method. HTML is temporarily inserted to the DOM
		/// using innerHTML. As a consequence, scripts included in
		/// attribute event handlers may be executed.</para>
		/// </summary>
		/// <param name="objs">Array of DOM elements or HTML strings</param>
		/// <param name="context">Context in which the elements should be created</param>
		/// <param name="fragment">Document fragment to appends elements to</param>
		/// <returns>Array of elements (when a fragment is given it only contains script elements)</returns>
		[JsMethod(Name = "clean")]
		public static qx.html.Element Clean(object objs, Document context = null, qx.html.Element fragment = null) { throw new NotImplementedException(); }

		#endregion Methods
    }
}