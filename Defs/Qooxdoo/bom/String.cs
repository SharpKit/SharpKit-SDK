// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.bom
{
    /// <summary>
	/// <para>A Collection of utility functions to escape and unescape strings.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.bom.String", OmitOptionalParameters = true, Export = false)]
    public partial class String 
    {
		#region Methods

		public String() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Escapes the characters in a String using HTML entities.</para>
		/// <para>For example: &#8220;bread&#8221; &amp; &#8220;butter&#8221; => &amp;quot;bread&amp;quot; &amp;amp; &amp;quot;butter&amp;quot;.
		/// Supports all known HTML 4.0 entities, including funky accents.</para>
		/// <list type="bullet">
		/// <item>HTML 3.2 Character Entities for ISO Latin-1</item>
		/// <item>HTML 4.0 Character entity references</item>
		/// <item>HTML 4.01 Character References</item>
		/// <item>HTML 4.01 Code positions</item>
		/// </list>
		/// </summary>
		/// <param name="str">the String to escape</param>
		/// <returns>a new escaped String</returns>
		[JsMethod(Name = "escape")]
		public static string Escape(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a plain text string into HTML.
		/// This is similar to <see cref="Escape"/> but converts new lines to
		/// &amp;lt:br&amp;gt: and preserves whitespaces.</para>
		/// </summary>
		/// <param name="str">the String to convert</param>
		/// <returns>a new converted String</returns>
		[JsMethod(Name = "fromText")]
		public static string FromText(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts HTML to plain text.</para>
		/// <list type="bullet">
		/// <item>Strips all HTML tags</item>
		/// <item>converts &amp;lt:br&amp;gt: to new line</item>
		/// <item>unescapes HTML entities</item>
		/// </list>
		/// </summary>
		/// <param name="str">HTML string to converts</param>
		/// <returns>plain text representation of the HTML string</returns>
		[JsMethod(Name = "toText")]
		public static string ToText(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Unescapes a string containing entity escapes to a string
		/// containing the actual Unicode characters corresponding to the
		/// escapes. Supports HTML 4.0 entities.</para>
		/// <para>For example, the string &#8221;&amp;lt;Fran&amp;ccedil;ais&amp;gt;&#8221;
		/// will become &#8221;&lt;Fran&ccedil;ais&gt;&#8221;</para>
		/// <para>If an entity is unrecognized, it is left alone, and inserted
		/// verbatim into the result string. e.g. &#8221;&amp;gt;&amp;zzzz;x&#8221; will
		/// become &#8221;&gt;&amp;zzzz;x&#8221;.</para>
		/// </summary>
		/// <param name="str">the String to unescape, may be null</param>
		/// <returns>a new unescaped String</returns>
		[JsMethod(Name = "unescape")]
		public static object Unescape(string str) { throw new NotImplementedException(); }

		#endregion Methods
    }
}