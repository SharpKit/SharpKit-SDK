// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.dev.unit
{
    /// <summary>
	/// <para>Measures JavaScript execution and rendering time for singular or repeated
	/// operations.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.dev.unit.MMeasure", OmitOptionalParameters = true, Export = false)]
    public partial class MMeasure 
    {
		#region Methods

		public MMeasure() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Logs a single measurement result</para>
		/// </summary>
		/// <param name="msg">Description of the measured operation</param>
		/// <param name="iterations">Number of iterations</param>
		/// <param name="ownTime">JavaScript execution time in ms</param>
		/// <param name="renderTime">Dom rendering time in ms</param>
		[JsMethod(Name = "log")]
		public void Log(string msg, double iterations, double ownTime, double renderTime) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Executes a given callback function once and measures JavaScript execution
		/// and rendering time</para>
		/// </summary>
		/// <param name="msg">Description of the measured operation</param>
		/// <param name="callback">Callback containing the code to be measured</param>
		/// <param name="finalize">Finalize function called once after measuring, e.g. for cleanup. Will not be measured.</param>
		/// <param name="displayIterations">Iterations to be displayed instead of iterations</param>
		[JsMethod(Name = "measure")]
		public void Measure(string msg, Action<object> callback, Action<object> finalize, double displayIterations) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Repeatedly runs code and measures execution and rendering times</para>
		/// </summary>
		/// <param name="msg">Description of the measured operation</param>
		/// <param name="callback">Callback containing the code to be measured</param>
		/// <param name="finalize">Finalize function called once after measuring, e.g. for cleanup. Will not be measured.</param>
		/// <param name="iterations">Number of times to execute the callback</param>
		/// <param name="displayIterations">Iterations to be displayed instead of iterations</param>
		[JsMethod(Name = "measureRepeated")]
		public void MeasureRepeated(string msg, Action<object> callback, Action<object> finalize, double iterations, double displayIterations) { throw new NotImplementedException(); }

		#endregion Methods
    }
}