// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.core.scroll
{
    /// <summary>
	/// <para>This class represents a scroll able pane. This means that this widget
	/// may contain content which is bigger than the available (inner)
	/// dimensions of this widget. The widget also offer methods to control
	/// the scrolling position. It can only have exactly one child.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.core.scroll.ScrollPane", OmitOptionalParameters = true, Export = false)]
    public partial class ScrollPane : qx.ui.core.Widget
    {
		#region Events

		/// <summary>
		/// <para>Fired on scroll animation end invoked by &#8216;scroll*&#8217; methods.</para>
		/// </summary>
		public event Action<qx.eventx.type.Event> OnScrollAnimationEnd;

		/// <summary>
		/// Fired on change of the property <see cref="ScrollX"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> OnScrollX;

		/// <summary>
		/// Fired on change of the property <see cref="ScrollY"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> OnScrollY;

		/// <summary>
		/// <para>Fired on resize of both the container or the content.</para>
		/// </summary>
		public event Action<qx.eventx.type.Event> OnUpdate;

		#endregion Events

		#region Properties

		/// <summary>
		/// <para>The horizontal scroll position</para>
		/// </summary>
		[JsProperty(Name = "scrollX", NativeField = true)]
		public object ScrollX { get; set; }

		/// <summary>
		/// <para>The vertical scroll position</para>
		/// </summary>
		[JsProperty(Name = "scrollY", NativeField = true)]
		public object ScrollY { get; set; }

		#endregion Properties

		#region Methods

		public ScrollPane() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Configures the content of the scroll pane. Replaces any existing child
		/// with the newly given one.</para>
		/// </summary>
		/// <param name="widget">The content widget of the pane</param>
		[JsMethod(Name = "add")]
		public void Add(qx.ui.core.Widget widget = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns an array containing the current content.</para>
		/// </summary>
		/// <returns>The content array</returns>
		[JsMethod(Name = "getChildren")]
		public object GetChildren() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the top offset of the end of the given item in relation to the
		/// inner height of this widget.</para>
		/// </summary>
		/// <param name="item">Item to query</param>
		/// <returns>Top offset</returns>
		[JsMethod(Name = "getItemBottom")]
		public double GetItemBottom(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the left offset of the given item in relation to the
		/// inner width of this widget.</para>
		/// </summary>
		/// <param name="item">Item to query</param>
		/// <returns>Top offset</returns>
		[JsMethod(Name = "getItemLeft")]
		public double GetItemLeft(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the left offset of the end of the given item in relation to the
		/// inner width of this widget.</para>
		/// </summary>
		/// <param name="item">Item to query</param>
		/// <returns>Right offset</returns>
		[JsMethod(Name = "getItemRight")]
		public double GetItemRight(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the top offset of the given item in relation to the
		/// inner height of this widget.</para>
		/// </summary>
		/// <param name="item">Item to query</param>
		/// <returns>Top offset</returns>
		[JsMethod(Name = "getItemTop")]
		public double GetItemTop(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>The maximum horizontal scroll position.</para>
		/// </summary>
		/// <returns>Maximum horizontal scroll position.</returns>
		[JsMethod(Name = "getScrollMaxX")]
		public double GetScrollMaxX() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>The maximum vertical scroll position.</para>
		/// </summary>
		/// <returns>Maximum vertical scroll position.</returns>
		[JsMethod(Name = "getScrollMaxY")]
		public double GetScrollMaxY() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>The size (identical with the preferred size) of the content.</para>
		/// </summary>
		/// <returns>Size of the content (keys: width and height)</returns>
		[JsMethod(Name = "getScrollSize")]
		public object GetScrollSize() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property scrollX.</para>
		/// </summary>
		[JsMethod(Name = "getScrollX")]
		public object GetScrollX() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property scrollY.</para>
		/// </summary>
		[JsMethod(Name = "getScrollY")]
		public object GetScrollY() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property scrollX
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property scrollX.</param>
		[JsMethod(Name = "initScrollX")]
		public void InitScrollX(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property scrollY
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property scrollY.</param>
		[JsMethod(Name = "initScrollY")]
		public void InitScrollY(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Removes the given widget from the content. The pane is empty
		/// afterwards as only one child is supported by the pane.</para>
		/// </summary>
		/// <param name="widget">The content widget of the pane</param>
		[JsMethod(Name = "remove")]
		public void Remove(qx.ui.core.Widget widget = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property scrollX.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetScrollX")]
		public void ResetScrollX() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property scrollY.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetScrollY")]
		public void ResetScrollY() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Scrolls the element&#8217;s content horizontally by the given amount.</para>
		/// </summary>
		/// <param name="x">Amount to scroll</param>
		/// <param name="duration">The time in milliseconds the scroll to should take.</param>
		[JsMethod(Name = "scrollByX")]
		public void ScrollByX(double x = 0, double? duration = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Scrolls the element&#8217;s content vertically by the given amount.</para>
		/// </summary>
		/// <param name="y">Amount to scroll</param>
		/// <param name="duration">The time in milliseconds the scroll to should take.</param>
		[JsMethod(Name = "scrollByY")]
		public void ScrollByY(double y = 0, double? duration = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Scrolls the element&#8217;s content to the given left coordinate</para>
		/// </summary>
		/// <param name="value">The vertical position to scroll to.</param>
		/// <param name="duration">The time in milliseconds the scroll to should take.</param>
		[JsMethod(Name = "scrollToX")]
		public void ScrollToX(double value, double duration) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Scrolls the element&#8217;s content to the given top coordinate</para>
		/// </summary>
		/// <param name="value">The horizontal position to scroll to.</param>
		/// <param name="duration">The time in milliseconds the scroll to should take.</param>
		[JsMethod(Name = "scrollToY")]
		public void ScrollToY(double value, double duration) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property scrollX.</para>
		/// </summary>
		/// <param name="value">New value for property scrollX.</param>
		[JsMethod(Name = "setScrollX")]
		public void SetScrollX(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property scrollY.</para>
		/// </summary>
		/// <param name="value">New value for property scrollY.</param>
		[JsMethod(Name = "setScrollY")]
		public void SetScrollY(object value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}