// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.core
{
    /// <summary>
	/// <para>Each object, which should support single selection have to
	/// implement this interface.</para>
	/// </summary>
	public interface ISingleSelection
    {
		#region Events

		/// <summary>
		/// <para>Fires after the selection was modified</para>
		/// </summary>
		event Action<qx.eventx.type.Data> OnChangeSelection;

		#endregion Events

		#region Methods

		/// <summary>
		/// <para>Returns all elements which are selectable.</para>
		/// </summary>
		/// <param name="all">true for all selectables, false for the selectables the user can interactively select</param>
		/// <returns>The contained items.</returns>
		qx.ui.core.Widget GetSelectables(bool all);

		/// <summary>
		/// <para>Returns an array of currently selected items.</para>
		/// <para>Note: The result is only a set of selected items, so the order can
		/// differ from the sequence in which the items were added.</para>
		/// </summary>
		/// <returns>List of items.</returns>
		qx.ui.core.Widget GetSelection();

		/// <summary>
		/// <para>Detects whether the given item is currently selected.</para>
		/// </summary>
		/// <param name="item">Any valid selectable item</param>
		/// <returns>Whether the item is selected.</returns>
		bool IsSelected(qx.ui.core.Widget item);

		/// <summary>
		/// <para>Whether the selection is empty.</para>
		/// </summary>
		/// <returns>Whether the selection is empty.</returns>
		bool IsSelectionEmpty();

		/// <summary>
		/// <para>Clears the whole selection at once.</para>
		/// </summary>
		void ResetSelection();

		/// <summary>
		/// <para>Replaces current selection with the given items.</para>
		/// </summary>
		/// <param name="items">Items to select.</param>
		void SetSelection(qx.ui.core.Widget items);

		#endregion Methods
    }
}