// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.core
{
    /// <summary>
	/// <para>A Spacer is a &#8220;virtual&#8221; widget, which can be placed into any layout and takes
	/// the space a normal widget of the same size would take.</para>
	/// <para>Spacers are invisible and very light weight because they don&#8217;t require any
	/// DOM modifications.</para>
	/// <para>Example</para>
	/// <para>Here is a little example of how to use the widget.</para>
	/// <code>
	/// var container = new qx.ui.container.Composite(new qx.ui.layout.HBox());
	/// container.add(new qx.ui.core.Widget());
	/// container.add(new qx.ui.core.Spacer(50));
	/// container.add(new qx.ui.core.Widget());
	/// </code>
	/// <para>This example places two widgets and a spacer into a container with a
	/// horizontal box layout. In this scenario the spacer creates an empty area of
	/// 50 pixel width between the two widgets.</para>
	/// <para>External Documentation</para>
	/// 
	/// Documentation of this widget in the qooxdoo manual.
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.core.Spacer", OmitOptionalParameters = true, Export = false)]
    public partial class Spacer : qx.ui.core.LayoutItem
    {
		#region Methods

		public Spacer() { throw new NotImplementedException(); }

		/// <param name="width">the initial width</param>
		/// <param name="height">the initial height</param>
		public Spacer(double? width = null, double? height = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Recursively adds all children to the given queue</para>
		/// </summary>
		/// <param name="queue">The queue to add widgets to</param>
		[JsMethod(Name = "addChildrenToQueue")]
		public void AddChildrenToQueue(object queue) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Removes this widget from its parent and dispose it.</para>
		/// <para>Please note that the widget is not disposed synchronously. The
		/// real dispose happens after the next queue flush.</para>
		/// </summary>
		[JsMethod(Name = "destroy")]
		public void Destroy() { throw new NotImplementedException(); }

		#endregion Methods
    }
}