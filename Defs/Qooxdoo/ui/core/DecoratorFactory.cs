// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.core
{
    /// <summary>
	/// <para>This class is responsible for creating and maintaining <see cref="qx.html.Element"/>
	/// instances. It pools decorator elements for reuse.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.core.DecoratorFactory", OmitOptionalParameters = true, Export = false)]
    public partial class DecoratorFactory : qx.core.Object
    {
		#region Methods

		public DecoratorFactory() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get a decorator element configured with the given decorator.</para>
		/// </summary>
		/// <param name="decorator">The decorator to use</param>
		/// <returns>The configured decorator element</returns>
		[JsMethod(Name = "getDecoratorElement")]
		public qx.html.Decorator GetDecoratorElement(qx.ui.decoration.IDecorator decorator) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Empties the pool in case its invalid.</para>
		/// </summary>
		[JsMethod(Name = "invalidatePool")]
		public void InvalidatePool() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Pool or dispose the given decorator element</para>
		/// </summary>
		/// <param name="decoratorElement">the decorator element to pool</param>
		[JsMethod(Name = "poolDecorator")]
		public void PoolDecorator(qx.html.Decorator decoratorElement) { throw new NotImplementedException(); }

		#endregion Methods
    }
}