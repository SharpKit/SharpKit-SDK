// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.list.provider
{
    /// <summary>
	/// <para>This interface needs to implemented from all <see cref="qx.ui.list.List"/> providers.</para>
	/// </summary>
	public interface IListProvider
    {
		#region Methods

		/// <summary>
		/// <para>Creates a renderer for group rendering.</para>
		/// </summary>
		/// <returns>new group renderer.</returns>
		object CreateGroupRenderer();

		/// <summary>
		/// <para>Creates a renderer for item rendering.</para>
		/// </summary>
		/// <returns>new item renderer.</returns>
		object CreateItemRenderer();

		/// <summary>
		/// <para>Creates a layer for item and group rendering.</para>
		/// </summary>
		/// <returns>new layer.</returns>
		qx.ui.virtualx.layer.Abstract CreateLayer();

		/// <summary>
		/// <para>Returns if the passed row can be selected or not.</para>
		/// </summary>
		/// <param name="row">row to select.</param>
		/// <returns>true when the row can be selected, false otherwise.</returns>
		bool IsSelectable(double row);

		/// <summary>
		/// <para>Remove all bindings from all bounded items.</para>
		/// </summary>
		void RemoveBindings();

		/// <summary>
		/// <para>Delegation object, which can have one or more functions defined by the
		/// <see cref="qx.ui.list.core.IListDelegate"/> interface.</para>
		/// </summary>
		/// <param name="delegatex">delegation object.</param>
		void SetDelegate(object delegatex);

		/// <summary>
		/// <para>A map containing the options for the icon binding. The possible keys
		/// can be found in the <see cref="qx.data.SingleValueBinding"/> documentation.</para>
		/// </summary>
		/// <param name="options">options for the icon binding.</param>
		void SetIconOptions(object options);

		/// <summary>
		/// <para>The path to the property which holds the information that should be
		/// shown as an icon. This is only needed if objects are stored in the model
		/// and if the icon should be shown.</para>
		/// </summary>
		/// <param name="path">path to the property.</param>
		void SetIconPath(string path);

		/// <summary>
		/// <para>A map containing the options for the label binding. The possible keys
		/// can be found in the <see cref="qx.data.SingleValueBinding"/> documentation.</para>
		/// </summary>
		/// <param name="options">options for the label binding.</param>
		void SetLabelOptions(object options);

		/// <summary>
		/// <para>The path to the property which holds the information that should be
		/// shown as a label. This is only needed if objects are stored in the model.</para>
		/// </summary>
		/// <param name="path">path to the property.</param>
		void SetLabelPath(string path);

		/// <summary>
		/// <para>Styles a selected item.</para>
		/// </summary>
		/// <param name="row">row to style.</param>
		void StyleSelectabled(double row);

		/// <summary>
		/// <para>Styles a not selected item.</para>
		/// </summary>
		/// <param name="row">row to style.</param>
		void StyleUnselectabled(double row);

		#endregion Methods
    }
}