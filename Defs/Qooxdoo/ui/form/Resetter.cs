// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.form
{
    /// <summary>
	/// <para>The resetter is responsible for managing a set of items and resetting these
	/// items on a <see cref="Reset"/> call. It can handle all form items supplying a
	/// value property and all widgets implementing the single selection linked list
	/// or select box.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.form.Resetter", OmitOptionalParameters = true, Export = false)]
    public partial class Resetter : qx.core.Object
    {
		#region Methods

		public Resetter() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Adding a widget to the reseter will get its current value and store
		/// it for resetting. To access the value, the given item needs to specify
		/// a value property or implement the <see cref="qx.ui.core.ISingleSelection"/>
		/// interface.</para>
		/// </summary>
		/// <param name="item">The widget which should be added.</param>
		[JsMethod(Name = "add")]
		public void Add(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Takes the current values of all added items and uses these values as
		/// init values for resetting.</para>
		/// </summary>
		[JsMethod(Name = "redefine")]
		public void Redefine() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Takes the current value of the given item and stores this value as init
		/// value for resetting.</para>
		/// </summary>
		/// <param name="item">The item to redefine.</param>
		[JsMethod(Name = "redefineItem")]
		public void RedefineItem(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets all added form items to their initial value. The initial value
		/// is the value in the widget during the <see cref="Add"/>.</para>
		/// </summary>
		[JsMethod(Name = "reset")]
		public void Reset() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets a single given item. The item has to be added to the resetter
		/// instance before. Otherwise, an error is thrown.</para>
		/// </summary>
		/// <param name="item">The widget, which should be resetted.</param>
		[JsMethod(Name = "resetItem")]
		public void ResetItem(qx.ui.core.Widget item) { throw new NotImplementedException(); }

		#endregion Methods
    }
}