// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.virtualx.layer
{
    /// <summary>
	/// <para>EXPERIMENTAL!</para>
	/// <para>The Row layer renders row background colors.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.virtual.layer.Column", OmitOptionalParameters = true, Export = false)]
    public partial class Column : qx.ui.virtualx.layer.AbstractBackground
    {
		#region Properties

		/// <summary>
		/// <para>The appearance ID. This ID is used to identify the appearance theme
		/// entry to use for this widget. This controls the styling of the element.</para>
		/// </summary>
		[JsProperty(Name = "appearance", NativeField = true)]
		public string Appearance { get; set; }

		#endregion Properties

		#region Methods

		public Column() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the color for the given index</para>
		/// </summary>
		/// <param name="index">Index to set the color for</param>
		/// <param name="color">the color to set. A value of null will reset the color.</param>
		[JsMethod(Name = "setColor")]
		public void SetColor(double index, string color) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Update the layer to display a different window of the virtual grid.
		/// This method is called if the pane is scrolled, resized or cells
		/// are prefetched. The implementation can assume that no other grid
		/// data has been changed since the last &#8220;fullUpdate&#8221; of &#8220;updateLayerWindow&#8221;
		/// call.</para>
		/// <para>Note: This method can only be called after the widgets initial appear
		/// event has been fired because it may work with the widget&#8217;s DOM elements.</para>
		/// </summary>
		/// <param name="firstRow">Index of the first row to display.</param>
		/// <param name="firstColumn">Index of the first column to display.</param>
		/// <param name="rowSizes">Array of heights for each row to display.</param>
		/// <param name="columnSizes">Array of widths for each column to display.</param>
		[JsMethod(Name = "updateLayerWindow")]
		public void UpdateLayerWindow(double firstRow, double firstColumn, double rowSizes, double columnSizes) { throw new NotImplementedException(); }

		#endregion Methods
    }
}