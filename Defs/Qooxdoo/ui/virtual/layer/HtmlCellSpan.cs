// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.virtualx.layer
{
    /// <summary>
	/// <para>EXPERIMENTAL!</para>
	/// <para>An extended HtmlCell layer, which adds the possibility to specify row and
	/// column spans for specific cells.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.virtual.layer.HtmlCellSpan", OmitOptionalParameters = true, Export = false)]
    public partial class HtmlCellSpan : qx.ui.virtualx.layer.HtmlCell
    {
		#region Methods

		public HtmlCellSpan() { throw new NotImplementedException(); }

		/// <param name="htmlCellProvider">This class provides the HTML markup for each cell.</param>
		/// <param name="rowConfig">The row configuration of the pane in which the cells will be rendered</param>
		/// <param name="columnConfig">The column configuration of the pane in which the cells will be rendered</param>
		public HtmlCellSpan(qx.ui.virtualx.core.IHtmlCellProvider htmlCellProvider, qx.ui.virtualx.core.Axis rowConfig, qx.ui.virtualx.core.Axis columnConfig) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Set the row and column span for a specific cell</para>
		/// </summary>
		/// <param name="row">The cell&#8217;s row</param>
		/// <param name="column">The cell&#8217;s column</param>
		/// <param name="rowSpan">The number of rows the cells spans</param>
		/// <param name="columnSpan">The number of columns the cells spans</param>
		[JsMethod(Name = "setCellSpan")]
		public void SetCellSpan(double row, double column, double rowSpan, double columnSpan) { throw new NotImplementedException(); }

		#endregion Methods
    }
}