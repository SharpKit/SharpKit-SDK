// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.virtualx.selection
{
    /// <summary>
	/// <para>EXPERIMENTAL!</para>
	/// <para>Abstract base class for selection manager, which manage selectable items
	/// rendered in a virtual <see cref="qx.ui.virtual.core.Pane"/>.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.virtual.selection.Abstract", OmitOptionalParameters = true, Export = false)]
    public partial class Abstract : qx.ui.core.selection.Abstract
    {
		#region Methods

		public Abstract() { throw new NotImplementedException(); }

		/// <param name="pane">The virtual pane on which the selectable item are rendered</param>
		/// <param name="selectionDelegate">An optional delegate, which can be used to customize the behavior of the selection manager without sub classing it.</param>
		public Abstract(qx.ui.virtualx.core.Pane pane, ISelectionDelegate selectionDelegate = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Attach key events to manipulate the selection using the keyboard. The
		/// event target doesn&#8217;t need to be the pane itself. It can be an widget,
		/// which received key events. Usually the key event target is the
		/// <see cref="qx.ui.virtual.core.Scroller"/>.</para>
		/// </summary>
		/// <param name="target">the key event target.</param>
		[JsMethod(Name = "attachKeyEvents")]
		public void AttachKeyEvents(qx.core.Object target) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Attach list events. The selection mode one need to know,
		/// when selectable items are added or removed. If this mode is used the
		/// list parameter must fire addItem and
		/// removeItem events.</para>
		/// </summary>
		/// <param name="list">the event target for addItem and removeItem events</param>
		[JsMethod(Name = "attachListEvents")]
		public void AttachListEvents(qx.core.Object list) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Attach mouse events to the managed pane.</para>
		/// </summary>
		[JsMethod(Name = "attachMouseEvents")]
		public void AttachMouseEvents() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detach key events.</para>
		/// </summary>
		/// <param name="target">the key event target.</param>
		[JsMethod(Name = "detachKeyEvents")]
		public void DetachKeyEvents(qx.core.Object target) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detach list events.</para>
		/// </summary>
		/// <param name="list">the event target for addItem and removeItem events</param>
		[JsMethod(Name = "detachListEvents")]
		public void DetachListEvents(qx.core.Object list) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detach mouse events from the managed pane.</para>
		/// </summary>
		[JsMethod(Name = "detatchMouseEvents")]
		public void DetatchMouseEvents() { throw new NotImplementedException(); }

		#endregion Methods
    }
}