// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.decoration
{
    /// <summary>
	/// <para>This class is an abstract base calls and used by
	/// <see cref="qx.theme.manager.Decoration"/>. It&#8217;s main purpose is to combine the
	/// included mixins into one working decorator.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.decoration.DynamicDecorator", OmitOptionalParameters = true, Export = false)]
    public abstract partial class DynamicDecorator : qx.ui.decoration.Abstract
    {
		#region Methods

		public DynamicDecorator() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the basic markup structure used for this decoration.
		/// This later updated on DOM to resize or tint the element.</para>
		/// </summary>
		/// <returns>Basic markup</returns>
		[JsMethod(Name = "getMarkup")]
		public string GetMarkup() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the styles of the decorator as a map with property names written
		/// in javascript style (e.g. fontWeight instead of font-weight).</para>
		/// </summary>
		/// <returns>style information</returns>
		[JsMethod(Name = "getStyles")]
		public object GetStyles() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resizes the element respecting the configured borders
		/// to the given width and height. Should automatically
		/// respect the box model of the client to correctly
		/// compute the dimensions.</para>
		/// </summary>
		/// <param name="element">The element to update</param>
		/// <param name="width">Width of the element</param>
		/// <param name="height">Height of the element</param>
		[JsMethod(Name = "resize")]
		public void Resize(qx.html.Element element, double width, double height) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Applies the given background color to the element
		/// or fallback to the background color defined
		/// by the decoration itself.</para>
		/// </summary>
		/// <param name="element">The element to update</param>
		/// <param name="bgcolor">The color to apply or null</param>
		[JsMethod(Name = "tint")]
		public void Tint(qx.html.Element element, string bgcolor) { throw new NotImplementedException(); }

		#endregion Methods
    }
}