// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.decoration
{
    /// <summary>
	/// <para>Mixin for the box shadow CSS property.
	/// This mixin is usually used by <see cref="qx.ui.decoration.DynamicDecorator"/>.</para>
	/// <para>Keep in mind that this is not supported by all browsers:</para>
	/// <list type="bullet">
	/// <item>Firefox 3,5+</item>
	/// <item>IE9+</item>
	/// <item>Safari 3.0+</item>
	/// <item>Opera 10.5+</item>
	/// <item>Chrome 4.0+</item>
	/// </list
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.decoration.MBoxShadow", OmitOptionalParameters = true, Export = false)]
    public partial class MBoxShadow 
    {
		#region Properties

		/// <summary>
		/// <para>Inset shadows are drawn inside the border.</para>
		/// </summary>
		[JsProperty(Name = "inset", NativeField = true)]
		public bool Inset { get; set; }

		/// <summary>
		/// <para>The blur radius of the shadow.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "shadowBlurRadius", NativeField = true)]
		public double ShadowBlurRadius { get; set; }

		/// <summary>
		/// <para>The color of the shadow.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "shadowColor", NativeField = true)]
		public string ShadowColor { get; set; }

		/// <summary>
		/// <para>Horizontal length of the shadow.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "shadowHorizontalLength", NativeField = true)]
		public double ShadowHorizontalLength { get; set; }

		/// <summary>
		/// <para>Property group to set the shadow length.</para>
		/// </summary>
		[JsProperty(Name = "shadowLength", NativeField = true)]
		public object ShadowLength { get; set; }

		/// <summary>
		/// <para>The spread radius of the shadow.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "shadowSpreadRadius", NativeField = true)]
		public double ShadowSpreadRadius { get; set; }

		/// <summary>
		/// <para>Vertical length of the shadow.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "shadowVerticalLength", NativeField = true)]
		public double ShadowVerticalLength { get; set; }

		#endregion Properties

		#region Methods

		public MBoxShadow() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property inset.</para>
		/// </summary>
		[JsMethod(Name = "getInset")]
		public bool GetInset() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property shadowBlurRadius.</para>
		/// </summary>
		[JsMethod(Name = "getShadowBlurRadius")]
		public double GetShadowBlurRadius() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property shadowColor.</para>
		/// </summary>
		[JsMethod(Name = "getShadowColor")]
		public string GetShadowColor() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property shadowHorizontalLength.</para>
		/// </summary>
		[JsMethod(Name = "getShadowHorizontalLength")]
		public double GetShadowHorizontalLength() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property shadowSpreadRadius.</para>
		/// </summary>
		[JsMethod(Name = "getShadowSpreadRadius")]
		public double GetShadowSpreadRadius() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property shadowVerticalLength.</para>
		/// </summary>
		[JsMethod(Name = "getShadowVerticalLength")]
		public double GetShadowVerticalLength() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property inset
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property inset.</param>
		[JsMethod(Name = "initInset")]
		public void InitInset(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property shadowBlurRadius
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property shadowBlurRadius.</param>
		[JsMethod(Name = "initShadowBlurRadius")]
		public void InitShadowBlurRadius(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property shadowColor
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property shadowColor.</param>
		[JsMethod(Name = "initShadowColor")]
		public void InitShadowColor(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property shadowHorizontalLength
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property shadowHorizontalLength.</param>
		[JsMethod(Name = "initShadowHorizontalLength")]
		public void InitShadowHorizontalLength(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property shadowSpreadRadius
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property shadowSpreadRadius.</param>
		[JsMethod(Name = "initShadowSpreadRadius")]
		public void InitShadowSpreadRadius(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property shadowVerticalLength
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property shadowVerticalLength.</param>
		[JsMethod(Name = "initShadowVerticalLength")]
		public void InitShadowVerticalLength(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Check whether the (computed) value of the boolean property inset equals true.</para>
		/// </summary>
		[JsMethod(Name = "isInset")]
		public void IsInset() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property inset.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetInset")]
		public void ResetInset() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property shadowBlurRadius.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetShadowBlurRadius")]
		public void ResetShadowBlurRadius() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property shadowColor.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetShadowColor")]
		public void ResetShadowColor() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property shadowHorizontalLength.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetShadowHorizontalLength")]
		public void ResetShadowHorizontalLength() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property shadowLength.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetShadowLength")]
		public void ResetShadowLength() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property shadowSpreadRadius.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetShadowSpreadRadius")]
		public void ResetShadowSpreadRadius() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property shadowVerticalLength.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetShadowVerticalLength")]
		public void ResetShadowVerticalLength() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property inset.</para>
		/// </summary>
		/// <param name="value">New value for property inset.</param>
		[JsMethod(Name = "setInset")]
		public void SetInset(bool value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property shadowBlurRadius.</para>
		/// </summary>
		/// <param name="value">New value for property shadowBlurRadius.</param>
		[JsMethod(Name = "setShadowBlurRadius")]
		public void SetShadowBlurRadius(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property shadowColor.</para>
		/// </summary>
		/// <param name="value">New value for property shadowColor.</param>
		[JsMethod(Name = "setShadowColor")]
		public void SetShadowColor(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property shadowHorizontalLength.</para>
		/// </summary>
		/// <param name="value">New value for property shadowHorizontalLength.</param>
		[JsMethod(Name = "setShadowHorizontalLength")]
		public void SetShadowHorizontalLength(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the values of the property group shadowLength.</para>
		/// <para>This setter supports a shorthand mode compatible with the way margins and paddins are set in CSS.</para>
		/// </summary>
		/// <param name="shadowHorizontalLength">Sets the value of the property #shadowHorizontalLength.</param>
		/// <param name="shadowVerticalLength">Sets the value of the property #shadowVerticalLength.</param>
		[JsMethod(Name = "setShadowLength")]
		public void SetShadowLength(object shadowHorizontalLength, object shadowVerticalLength) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property shadowSpreadRadius.</para>
		/// </summary>
		/// <param name="value">New value for property shadowSpreadRadius.</param>
		[JsMethod(Name = "setShadowSpreadRadius")]
		public void SetShadowSpreadRadius(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property shadowVerticalLength.</para>
		/// </summary>
		/// <param name="value">New value for property shadowVerticalLength.</param>
		[JsMethod(Name = "setShadowVerticalLength")]
		public void SetShadowVerticalLength(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Toggles the (computed) value of the boolean property inset.</para>
		/// </summary>
		[JsMethod(Name = "toggleInset")]
		public void ToggleInset() { throw new NotImplementedException(); }

		#endregion Methods
    }
}