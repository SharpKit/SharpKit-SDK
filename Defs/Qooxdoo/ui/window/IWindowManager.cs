// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.window
{
    /// <summary>
	/// <para>Required interface for all window manager.</para>
	/// <para>Window manager handle the z-order and modality blocking of windows managed
	/// by the connected desktop <see cref="IDesktop"/>.</para>
	/// </summary>
	public interface IWindowManager
    {
		#region Methods

		/// <summary>
		/// <para>Ask the manager to bring a window to the front.</para>
		/// </summary>
		/// <param name="win">window to bring to front</param>
		void BringToFront(Window win);

		/// <summary>
		/// <para>Inform the window manager about a new active window</para>
		/// </summary>
		/// <param name="active">new active window</param>
		/// <param name="oldActive">old active window</param>
		void ChangeActiveWindow(Window active, Window oldActive);

		/// <summary>
		/// <para>Ask the manager to send a window to the back.</para>
		/// </summary>
		/// <param name="win">window to sent to back</param>
		void SendToBack(Window win);

		/// <summary>
		/// <para>Connect the window manager to the window desktop</para>
		/// </summary>
		/// <param name="desktop">The connected desktop</param>
		void SetDesktop(IDesktop desktop);

		/// <summary>
		/// <para>Update the window order and modality blocker</para>
		/// </summary>
		void UpdateStack();

		#endregion Methods
    }
}