// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.tree.core
{
    /// <summary>
	/// <para>Interface describes the methods which the <see cref="qx.ui.tree.provider.WidgetProvider"/>
	/// uses for communication.</para>
	/// </summary>
	public interface IVirtualTree
    {
		#region Methods

		/// <summary>
		/// <para>Closes the passed node.</para>
		/// </summary>
		/// <param name="node">Node to close.</param>
		void CloseNode(qx.core.Object node);

		/// <summary>
		/// <para>Returns the row&#8217;s nesting level.</para>
		/// </summary>
		/// <param name="row">The row to get the nesting level.</param>
		/// <returns>The row&#8217;s nesting level or null.</returns>
		double GetLevel(double row);

		/// <summary>
		/// <para>Returns the current selection.</para>
		/// </summary>
		/// <returns>The current selected elements.</returns>
		qx.data.Array GetSelection();

		/// <summary>
		/// <para>Return whether the node is opened or closed.</para>
		/// </summary>
		/// <param name="node">Node to check.</param>
		/// <returns>Returns true when the node is opened, false otherwise.</returns>
		bool IsNodeOpen(qx.core.Object node);

		/// <summary>
		/// <para>Return whether top level items should have an open/close button. The top
		/// level item item is normally the root item, but when the root is hidden,
		/// the root children are the top level items.</para>
		/// </summary>
		/// <returns>Returns true when top level items should show open/close buttons, false otherwise.</returns>
		bool IsShowTopLevelOpenCloseIcons();

		/// <summary>
		/// <para>Opens the passed node.</para>
		/// </summary>
		/// <param name="node">Node to open.</param>
		void OpenNode(qx.core.Object node);

		#endregion Methods
    }
}