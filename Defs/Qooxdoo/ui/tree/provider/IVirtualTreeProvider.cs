// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.tree.provider
{
    /// <summary>
	/// <para>This interface needs to implemented from all <see cref="qx.ui.tree.VirtualTree"/>
	/// providers.</para>
	/// </summary>
	public interface IVirtualTreeProvider
    {
		#region Methods

		/// <summary>
		/// <para>Creates a layer for node and leaf rendering.</para>
		/// </summary>
		/// <returns>new layer.</returns>
		qx.ui.virtualx.layer.Abstract CreateLayer();

		/// <summary>
		/// <para>Creates a renderer for rendering.</para>
		/// </summary>
		/// <returns>new node renderer.</returns>
		object CreateRenderer();

		/// <summary>
		/// <para>Returns if the passed row can be selected or not.</para>
		/// </summary>
		/// <param name="row">row to select.</param>
		/// <returns>true when the row can be selected, false otherwise.</returns>
		bool IsSelectable(double row);

		/// <summary>
		/// <para>Sets the name of the property, where the children are stored in the model.</para>
		/// </summary>
		/// <param name="value">The child property name.</param>
		void SetChildProperty(string value);

		/// <summary>
		/// <para>Sets the name of the property, where the value for the tree folders label
		/// is stored in the model classes.</para>
		/// </summary>
		/// <param name="value">The label path.</param>
		void SetLabelPath(string value);

		/// <summary>
		/// <para>Styles a selected item.</para>
		/// </summary>
		/// <param name="row">row to style.</param>
		void StyleSelectabled(double row);

		/// <summary>
		/// <para>Styles a not selected item.</para>
		/// </summary>
		/// <param name="row">row to style.</param>
		void StyleUnselectabled(double row);

		#endregion Methods
    }
}