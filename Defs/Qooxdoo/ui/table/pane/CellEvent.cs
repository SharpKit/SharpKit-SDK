// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.table.pane
{
    /// <summary>
	/// <para>A cell event instance contains all data for mouse events related to cells in
	/// a table.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.table.pane.CellEvent", OmitOptionalParameters = true, Export = false)]
    public partial class CellEvent : qx.eventx.type.Mouse
    {
		#region Properties

		/// <summary>
		/// <para>The table column of the event target</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "column", NativeField = true)]
		public double Column { get; set; }

		/// <summary>
		/// <para>The table row of the event target</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "row", NativeField = true)]
		public double Row { get; set; }

		#endregion Properties

		#region Methods

		public CellEvent() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Create a clone of the event object, which is not automatically disposed
		/// or pooled after an event dispatch.</para>
		/// </summary>
		/// <param name="embryo">Optional event class, which will be configured using the data of this event instance. The event must be an instance of this event class. If the value is null, a new pooled instance is created.</param>
		/// <returns>a clone of this class.</returns>
		[JsMethod(Name = "clone")]
		public qx.eventx.type.Event Clone(qx.eventx.type.Event embryo = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property column.</para>
		/// </summary>
		[JsMethod(Name = "getColumn")]
		public double GetColumn() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property row.</para>
		/// </summary>
		[JsMethod(Name = "getRow")]
		public double GetRow() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Initialize the event</para>
		/// </summary>
		/// <param name="scroller">The tables pane scroller</param>
		/// <param name="me">The original mouse event</param>
		/// <param name="row">The cell&#8217;s row index</param>
		/// <param name="column">The cell&#8217;s column index</param>
		[JsMethod(Name = "init")]
		public void Init(qx.ui.table.pane.Scroller scroller, qx.eventx.type.Mouse me, double? row = null, double? column = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property column
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property column.</param>
		[JsMethod(Name = "initColumn")]
		public void InitColumn(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property row
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property row.</param>
		[JsMethod(Name = "initRow")]
		public void InitRow(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property column.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetColumn")]
		public void ResetColumn() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property row.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetRow")]
		public void ResetRow() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property column.</para>
		/// </summary>
		/// <param name="value">New value for property column.</param>
		[JsMethod(Name = "setColumn")]
		public void SetColumn(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property row.</para>
		/// </summary>
		/// <param name="value">New value for property row.</param>
		[JsMethod(Name = "setRow")]
		public void SetRow(double value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}