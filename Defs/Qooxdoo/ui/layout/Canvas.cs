// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.layout
{
    /// <summary>
	/// <para>The Canvas is an extended Basic layout.</para>
	/// <para>It is possible to position a widget relative to the right or bottom edge of
	/// the available space. It further supports stretching between left and right
	/// or top and bottom e.g. left=20 and right=20 would
	/// keep a margin of 20 pixels to both edges. The Canvas layout has support for
	/// percent dimensions and locations.</para>
	/// <para>Features</para>
	/// <list type="bullet">
	/// <item>Pixel dimensions and locations</item>
	/// <item>Percent dimensions and locations</item>
	/// <item>Stretching between left+right and top+bottom</item>
	/// <item>Minimum and maximum dimensions</item>
	/// <item>Children are automatically shrunk to their minimum dimensions if not enough space is available</item>
	/// <item>Auto sizing (ignoring percent values)</item>
	/// <item>Margins (also negative ones)</item>
	/// </list>
	/// <para>Item Properties</para>
	/// <list type="bullet">
	/// <item>left (Integer|String): The left coordinate in pixel or as a percent string e.g. 20 or 30%.</item>
	/// <item>top (Integer|String): The top coordinate in pixel or as a percent string e.g. 20 or 30%.</item>
	/// <item>right (Integer|String): The right coordinate in pixel or as a percent string e.g. 20 or 30%.</item>
	/// <item>bottom (Integer|String): The bottom coordinate in pixel or as a percent string e.g. 20 or 30%.</item>
	/// <item>width (String): A percent width e.g. 40%.</item>
	/// <item>height (String): A percent height e.g. 60%.</item>
	/// </list>
	/// <para>Notes</para>
	/// <list type="bullet">
	/// <item>Stretching (left->right or top->bottom)
	/// has a higher priority than the preferred dimensions</item>
	/// <item>Stretching has a lower priority than the min/max dimensions.</item>
	/// <item>Percent values have no influence on the size hint of the layout.</item>
	/// </list>
	/// <para>Example</para>
	/// <para>Here is a little example of how to use the canvas layout.</para>
	/// <code>
	/// var container = new qx.ui.container.Composite(new qx.ui.layout.Canvas());
	/// // simple positioning
	/// container.add(new qx.ui.core.Widget(), {top: 10, left: 10});
	/// // stretch vertically with 10 pixel distance to the parent's top
	/// // and bottom border
	/// container.add(new qx.ui.core.Widget(), {top: 10, left: 10, bottom: 10});
	/// // percent positioning and size
	/// container.add(new qx.ui.core.Widget(), {left: "50%", top: "50%", width: "25%", height: "40%"});
	/// </code>
	/// <para>External Documentation</para>
	/// 
	/// Extended documentation and links to demos of this layout in the qooxdoo manual.
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.layout.Canvas", OmitOptionalParameters = true, Export = false)]
    public partial class Canvas : qx.ui.layout.Abstract
    {
		#region Methods

		public Canvas() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Applies the children layout.</para>
		/// </summary>
		/// <param name="availWidth">Final width available for the content (in pixel)</param>
		/// <param name="availHeight">Final height available for the content (in pixel)</param>
		[JsMethod(Name = "renderLayout")]
		public void RenderLayout(double availWidth, double availHeight) { throw new NotImplementedException(); }

		#endregion Methods
    }
}