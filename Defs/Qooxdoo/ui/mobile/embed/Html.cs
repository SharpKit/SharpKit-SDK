// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.mobile.embed
{
    /// <summary>
	/// <para>The Html widget embeds plain HTML code into the application</para>
	/// <para>Example</para>
	/// <para>Here is a little example of how to use the html widget.</para>
	/// <code>
	/// var html = new qx.ui.mobile.embed.Html();
	/// html.setHtml("Hello World");
	/// </code>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.mobile.embed.Html", OmitOptionalParameters = true, Export = false)]
    public partial class Html : qx.ui.mobile.core.Widget
    {
		#region Events

		/// <summary>
		/// Fired on change of the property <see cref="Html"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> OnChangeHtml;

		#endregion Events

		#region Properties

		/// <summary>
		/// <para>Any text string which can contain HTML, too</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "html", NativeField = true)]
		public string Htmlx { get; set; }

		#endregion Properties

		#region Methods

		public Html() { throw new NotImplementedException(); }

		/// <param name="html">Initial HTML content</param>
		public Html(string html = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property html.</para>
		/// </summary>
		[JsMethod(Name = "getHtml")]
		public string GetHtml() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property html
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property html.</param>
		[JsMethod(Name = "initHtml")]
		public void InitHtml(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property html.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetHtml")]
		public void ResetHtml() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property html.</para>
		/// </summary>
		/// <param name="value">New value for property html.</param>
		[JsMethod(Name = "setHtml")]
		public void SetHtml(string value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}