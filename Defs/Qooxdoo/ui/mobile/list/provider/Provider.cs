// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.mobile.list.provider
{
    /// <summary>
	/// <para>Provides a list item element for a certain row and its data.
	/// Uses the <see cref="qx.ui.mobile.list.renderer.Default"/> list item renderer as a
	/// default renderer when no other renderer is given by the <see cref="qx.ui.mobile.list.List.Delegate"/>.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.mobile.list.provider.Provider", OmitOptionalParameters = true, Export = false)]
    public partial class Provider : qx.core.Object
    {
		#region Events

		/// <summary>
		/// Fired on change of the property <see cref="Delegate"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> OnChangeDelegate;

		#endregion Events

		#region Properties

		/// <summary>
		/// <para>Delegation object which can have one or more functions defined by the
		/// <see cref="qx.ui.mobile.list.IListDelegate"/> interface. Set by the list.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "delegate", NativeField = true)]
		internal object Delegate { get; set; }

		#endregion Properties

		#region Methods

		public Provider() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property delegate.</para>
		/// </summary>
		[JsMethod(Name = "getDelegate")]
		public object GetDelegate() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the list item element for a given row.</para>
		/// </summary>
		/// <param name="data">The data of the row.</param>
		/// <param name="row">The row index.</param>
		/// <returns>the list item element.</returns>
		[JsMethod(Name = "getItemElement")]
		public qx.html.Element GetItemElement(object data, double row) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property delegate
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property delegate.</param>
		[JsMethod(Name = "initDelegate")]
		public void InitDelegate(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property delegate.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetDelegate")]
		public void ResetDelegate() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property delegate.</para>
		/// </summary>
		/// <param name="value">New value for property delegate.</param>
		[JsMethod(Name = "setDelegate")]
		public void SetDelegate(object value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}