// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.mobile.dialog
{
    /// <summary>
	/// <para>Very basic dialog manager. Displays a native alert or confirm dialog if
	/// the application is running in a PhoneGap environment. For debugging in a browser
	/// it displays the browser alert or confirm dialog. In the near
	/// future this should be replaced by dialog widgets.</para>
	/// <para>Example</para>
	/// <para>Here is a little example of how to use the widget.</para>
	/// <code>
	/// var buttons = [];
	/// buttons.push(qx.locale.Manager.tr("OK"));
	/// buttons.push(qx.locale.Manager.tr("Cancel"));
	/// var title = "Delete item";
	/// var text = "Do you want to delete the item?"
	/// qx.ui.mobile.dialog.Manager.getInstance().confirm(title, text, function(index) {
	/// if (index==1) {
	/// // delete the item
	/// }
	/// }, this, buttons);
	/// </code>
	/// <para>This example displays a confirm dialog and defines a button click handler.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.mobile.dialog.Manager", OmitOptionalParameters = true, Export = false)]
    public partial class Manager : qx.core.Object
    {
		#region Methods

		public Manager() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Displays an alert box. When the application is running in a PhoneGap
		/// environment, a native alert box is shown. When debugging in a browser, a
		/// browser alert is shown.</para>
		/// </summary>
		/// <param name="title">The title of the alert box</param>
		/// <param name="text">The text to display in the alert box</param>
		/// <param name="handler">The handler to call when the OK button was pressed</param>
		/// <param name="scope">The scope of the handler</param>
		/// <param name="button">The button title</param>
		/// <returns>a reference to an alert dialog instance. An Object, if environment is phonegap, or a qx.ui.mobile.dialog.Dialog if not.</returns>
		[JsMethod(Name = "alert")]
		public object Alert(string title, string text, Action<object> handler, object scope, string button) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Displays a confirm box. When the application is running in a PhoneGap
		/// environment, a native confirm box is shown. When debugging in a browser, a
		/// browser confirm is shown.</para>
		/// </summary>
		/// <param name="title">The title of the confirm box</param>
		/// <param name="text">The text to display in the confirm box</param>
		/// <param name="handler">The handler to call when the OK button was pressed. The first parameter of the function is the index of the pressed button, starting from 1.</param>
		/// <param name="scope">The scope of the handler</param>
		/// <param name="buttons">Each text entry of the array represents a button and its title</param>
		/// <returns>The dialog widget</returns>
		[JsMethod(Name = "confirm")]
		public qx.ui.mobile.dialog.Dialog Confirm(string title, string text, Action<object> handler, object scope, string buttons) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Displays an error dialog. When the application is running in an PhoneGap
		/// environment, a native error dialog is shown. For debugging in a browser, a
		/// browser confirm is shown.</para>
		/// </summary>
		/// <param name="title">The title of the error dialog.</param>
		/// <param name="text">The text to display in the error dialog.</param>
		/// <param name="handler">The handler to call when the OK button was pressed. The first parameter of the function is the index of the pressed button, starting from 1.</param>
		/// <param name="scope">The scope of the handler</param>
		/// <param name="button">The text entry represents a button and its title</param>
		/// <returns>The dialog widget</returns>
		[JsMethod(Name = "error")]
		public qx.ui.mobile.dialog.Dialog Error(string title, string text, Action<object> handler, object scope, string button) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Displays an input dialog.</para>
		/// </summary>
		/// <param name="title">The title of the input dialog.</param>
		/// <param name="text">The text to display in the input dialog.</param>
		/// <param name="handler">The handler to call when the OK button was pressed. The first parameter of the function is the index of the pressed button, starting from 1.</param>
		/// <param name="scope">The scope of the handler</param>
		/// <param name="buttons">Each text entry of the array represents a button and its title</param>
		/// <returns>The dialog widget</returns>
		[JsMethod(Name = "input")]
		public qx.ui.mobile.dialog.Dialog Input(string title, string text, Action<object> handler, object scope, string buttons) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Displays a waiting dialog.</para>
		/// </summary>
		/// <param name="title">The title of the waiting dialog.</param>
		/// <param name="text">The text to display in the waiting dialog.</param>
		/// <param name="handler">The handler to call when the OK button was pressed. The first parameter of the function is the index of the pressed button, starting from 1.</param>
		/// <param name="scope">The scope of the handler</param>
		/// <param name="buttons">Each text entry of the array represents a button and its title</param>
		/// <returns>The dialog widget</returns>
		[JsMethod(Name = "wait")]
		public qx.ui.mobile.dialog.Dialog Wait(string title, string text, Action<object> handler, object scope, string buttons) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Displays a warning dialog. When the application is running in an PhoneGap
		/// environment, a native warning dialog is shown. For debugging in a browser, a
		/// browser confirm is shown.</para>
		/// </summary>
		/// <param name="title">The title of the warning dialog.</param>
		/// <param name="text">The text to display in the warning dialog.</param>
		/// <param name="handler">The handler to call when the OK button was pressed. The first parameter of the function is the index of the pressed button, starting from 1.</param>
		/// <param name="scope">The scope of the handler</param>
		/// <param name="button">The text entry represents a button and its title</param>
		/// <returns>The dialog widget</returns>
		[JsMethod(Name = "warning")]
		public qx.ui.mobile.dialog.Dialog Warning(string title, string text, Action<object> handler, object scope, string button) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns a singleton instance of this class. On the first call the class
		/// is instantiated by calling the constructor with no arguments. All following
		/// calls will return this instance.</para>
		/// <para>This method has been added by setting the &#8220;type&#8221; key in the class definition
		/// (<see cref="qx.Class.Define"/>) to &#8220;singleton&#8221;.</para>
		/// </summary>
		/// <returns>The singleton instance of this class.</returns>
		[JsMethod(Name = "getInstance")]
		public static qx.ui.mobile.dialog.Manager GetInstance() { throw new NotImplementedException(); }

		#endregion Methods
    }
}