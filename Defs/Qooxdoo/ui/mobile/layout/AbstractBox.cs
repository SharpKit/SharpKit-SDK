// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.mobile.layout
{
    /// <summary>
	/// <para>Base class for all box layout managers.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.mobile.layout.AbstractBox", OmitOptionalParameters = true, Export = false)]
    public abstract partial class AbstractBox : qx.ui.mobile.layout.Abstract
    {
		#region Properties

		/// <summary>
		/// <para>Horizontal alignment of the whole children block.</para>
		/// </summary>
		/// <remarks>
		/// Possible values: "left","center","right"
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "alignX", NativeField = true)]
		public object AlignX { get; set; }

		/// <summary>
		/// <para>Vertical alignment of each child.</para>
		/// </summary>
		/// <remarks>
		/// Possible values: "top","middle","bottom"
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "alignY", NativeField = true)]
		public object AlignY { get; set; }

		/// <summary>
		/// <para>Children will be displayed in reverse order.</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "reversed", NativeField = true)]
		public bool Reversed { get; set; }

		#endregion Properties

		#region Methods

		public AbstractBox() { throw new NotImplementedException(); }

		/// <param name="alignX">Sets the #alignX property</param>
		/// <param name="alignY">Sets the #alignY property</param>
		/// <param name="reversed">Sets the #reversed property</param>
		public AbstractBox(string alignX = null, string alignY = null, bool? reversed = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method is called by the widget to connect the widget with the layout.</para>
		/// </summary>
		/// <param name="widget">The widget to connect to</param>
		[JsMethod(Name = "connectToWidget")]
		public void ConnectToWidget(qx.ui.mobile.core.Widget widget) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Disconnects the layout from a given child widget. Can be overridden in a concrete
		/// interface implementation.</para>
		/// </summary>
		/// <param name="widget">The widget to connect to</param>
		[JsMethod(Name = "disconnectFromChildWidget")]
		public void DisconnectFromChildWidget(qx.ui.mobile.core.Widget widget) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property alignX.</para>
		/// </summary>
		[JsMethod(Name = "getAlignX")]
		public object GetAlignX() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property alignY.</para>
		/// </summary>
		[JsMethod(Name = "getAlignY")]
		public object GetAlignY() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property reversed.</para>
		/// </summary>
		[JsMethod(Name = "getReversed")]
		public bool GetReversed() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property alignX
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property alignX.</param>
		[JsMethod(Name = "initAlignX")]
		public void InitAlignX(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property alignY
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property alignY.</param>
		[JsMethod(Name = "initAlignY")]
		public void InitAlignY(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property reversed
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property reversed.</param>
		[JsMethod(Name = "initReversed")]
		public void InitReversed(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Check whether the (computed) value of the boolean property reversed equals true.</para>
		/// </summary>
		[JsMethod(Name = "isReversed")]
		public void IsReversed() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property alignX.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetAlignX")]
		public void ResetAlignX() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property alignY.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetAlignY")]
		public void ResetAlignY() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property reversed.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetReversed")]
		public void ResetReversed() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property alignX.</para>
		/// </summary>
		/// <param name="value">New value for property alignX.</param>
		[JsMethod(Name = "setAlignX")]
		public void SetAlignX(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property alignY.</para>
		/// </summary>
		/// <param name="value">New value for property alignY.</param>
		[JsMethod(Name = "setAlignY")]
		public void SetAlignY(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property reversed.</para>
		/// </summary>
		/// <param name="value">New value for property reversed.</param>
		[JsMethod(Name = "setReversed")]
		public void SetReversed(bool value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Toggles the (computed) value of the boolean property reversed.</para>
		/// </summary>
		[JsMethod(Name = "toggleReversed")]
		public void ToggleReversed() { throw new NotImplementedException(); }

		#endregion Methods
    }
}