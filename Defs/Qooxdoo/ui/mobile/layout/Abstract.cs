// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.mobile.layout
{
    /// <summary>
	/// <para>Base class for all layout managers.</para>
	/// <para>Custom layout managers must derive from
	/// this class and implement the methods <see cref="#_getCssClasses"/>,
	/// <see cref="#_getSupportedChildLayoutProperties"/> and <see cref="#_setLayoutProperty"/>.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.mobile.layout.Abstract", OmitOptionalParameters = true, Export = false)]
    public abstract partial class Abstract : qx.core.Object
    {
		#region Events

		/// <summary>
		/// <para>Fired when the layout is updated. Data contains the &#8220;widget&#8221;, &#8220;action&#8221;, &#8220;properties&#8221;</para>
		/// </summary>
		public event Action<qx.eventx.type.Data> OnUpdateLayout;

		#endregion Events

		#region Methods

		public Abstract() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Connects the layout to a given child widget. Can be overridden in a concrete
		/// interface implementation.</para>
		/// </summary>
		/// <param name="widget">The widget to connect to</param>
		[JsMethod(Name = "connectToChildWidget")]
		public void ConnectToChildWidget(qx.ui.mobile.core.Widget widget) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method is called by the widget to connect the widget with the layout.</para>
		/// </summary>
		/// <param name="widget">The widget to connect to</param>
		[JsMethod(Name = "connectToWidget")]
		public void ConnectToWidget(qx.ui.mobile.core.Widget widget) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Disconnects the layout from a given child widget. Can be overridden in a concrete
		/// interface implementation.</para>
		/// </summary>
		/// <param name="widget">The widget to connect to</param>
		[JsMethod(Name = "disconnectFromChildWidget")]
		public void DisconnectFromChildWidget(qx.ui.mobile.core.Widget widget) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the given layout properties to a widget.</para>
		/// </summary>
		/// <param name="widget">The target widget</param>
		/// <param name="properties">The layout properties to set. Key / value pairs.</param>
		[JsMethod(Name = "setLayoutProperties")]
		public void SetLayoutProperties(qx.ui.mobile.core.Widget widget, object properties) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Updates the layout. Method is called by a widget, when it changes its state.</para>
		/// </summary>
		/// <param name="widget">The target widget</param>
		/// <param name="action">The causing action that triggered the layout update.</param>
		/// <param name="properties">The animation properties to set. Key / value pairs.</param>
		[JsMethod(Name = "updateLayout")]
		public void UpdateLayout(qx.ui.mobile.core.Widget widget, string action, object properties) { throw new NotImplementedException(); }

		#endregion Methods
    }
}