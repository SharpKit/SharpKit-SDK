// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.toolbar
{
    /// <summary>
	/// <para>A button which acts as a normal button and shows a menu on one
	/// of the sides to open something like a history list.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.toolbar.SplitButton", OmitOptionalParameters = true, Export = false)]
    public partial class SplitButton : qx.ui.form.SplitButton
    {
		#region Properties

		/// <summary>
		/// <para>The appearance ID. This ID is used to identify the appearance theme
		/// entry to use for this widget. This controls the styling of the element.</para>
		/// </summary>
		[JsProperty(Name = "appearance", NativeField = true)]
		public string Appearance { get; set; }

		/// <summary>
		/// <para>Whether the widget is focusable e.g. rendering a focus border and visualize
		/// as active element.</para>
		/// <para>See also <see cref="IsTabable"/> which allows runtime checks for
		/// isChecked or other stuff to test whether the widget is
		/// reachable via the TAB key.</para>
		/// </summary>
		[JsProperty(Name = "focusable", NativeField = true)]
		public bool Focusable { get; set; }

		#endregion Properties

		#region Methods

		public SplitButton() { throw new NotImplementedException(); }

		/// <param name="label">Label to use</param>
		/// <param name="icon">Icon to use</param>
		/// <param name="menu">Connect to menu instance</param>
		/// <param name="command">Command instance to connect with</param>
		public SplitButton(string label, string icon = null, qx.ui.menu.Menu menu = null, qx.ui.core.Command command = null) { throw new NotImplementedException(); }

		#endregion Methods
    }
}