// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.indicator
{
    /// <summary>
	/// <para>The Progress bar is designed to simply display the current % complete
	/// for a process.</para>
	/// <para>The Value is limited between 0 and Maximum value.
	/// It&#8217;s not allowed to set a Maximum value of 0.  If you set a Maximum value
	/// bigger than 0, but smaller than Value, it will be limited to Value.</para>
	/// <para>The following example creates and adds a progress bar to the root element.
	/// A listener is used to show the user if the value is changed,
	/// and another one when the progress is complete.</para>
	/// <code>
	/// var pb = new qx.ui.indicator.ProgressBar();
	/// this.getRoot().add(pb, { left : 20, top: 20});
	/// pb.addListener("change", function(e) {
	/// this.debug(e.getData()); // % complete
	/// this.debug(pb.getValue()); // absolute value
	/// });
	/// pb.addListener("complete", function(e) {
	/// this.debug("complete");
	/// });
	/// //set a value
	/// pb.setValue(20);
	/// </code>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.indicator.ProgressBar", OmitOptionalParameters = true, Export = false)]
    public partial class ProgressBar : qx.ui.container.Composite
    {
		#region Events

		/// <summary>
		/// <para>Fired when the % complete value is changed.</para>
		/// </summary>
		public event Action<qx.eventx.type.Data> OnChange;

		/// <summary>
		/// <para>Fired when the process is complete (value === maximum value)</para>
		/// </summary>
		public event Action<qx.eventx.type.Event> OnComplete;

		#endregion Events

		#region Properties

		/// <summary>
		/// <para>The appearance ID. This ID is used to identify the appearance theme
		/// entry to use for this widget. This controls the styling of the element.</para>
		/// </summary>
		[JsProperty(Name = "appearance", NativeField = true)]
		public string Appearance { get; set; }

		#endregion Properties

		#region Methods

		public ProgressBar() { throw new NotImplementedException(); }

		/// <param name="value">Progress bar value</param>
		/// <param name="maximum">Progress bar maximum value</param>
		public ProgressBar(double value = 0, double maximum = 100) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the maximum value of progress bar.</para>
		/// </summary>
		/// <returns>maximum value of progress bar.</returns>
		[JsMethod(Name = "getMaximum")]
		public double GetMaximum() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the progress bar value.</para>
		/// </summary>
		/// <returns>progress bar value.</returns>
		[JsMethod(Name = "getValue")]
		public double GetValue() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the maximum value of the progress bar.</para>
		/// </summary>
		/// <param name="value">New maximum value progress bar.</param>
		/// <returns>The unmodified incoming value or null if the value is invalid.</returns>
		[JsMethod(Name = "setMaximum")]
		public double SetMaximum(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the value of the progress bar.</para>
		/// </summary>
		/// <param name="value">New value of the progress bar.</param>
		/// <returns>The unmodified incoming value or null if the value is invalid.</returns>
		[JsMethod(Name = "setValue")]
		public double SetValue(double value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}