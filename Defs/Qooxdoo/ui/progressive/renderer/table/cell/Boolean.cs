// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.ui.progressive.renderer.table.cell
{
    /// <summary>
	/// <para>Table Cell Boolean Renderer.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.ui.progressive.renderer.table.cell.Boolean", OmitOptionalParameters = true, Export = false)]
    public partial class Boolean : qx.ui.progressive.renderer.table.cell.Icon
    {
		#region Properties

		/// <summary>
		/// <para>Whether to add code which will toggle the checkbox on/off.  (There is
		/// not yet code here to generate an event when this occurs, so it&#8217;s not
		/// yet very useful.)</para>
		/// </summary>
		[JsProperty(Name = "allowToggle", NativeField = true)]
		public bool AllowToggle { get; set; }

		#endregion Properties

		#region Methods

		public Boolean() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property allowToggle.</para>
		/// </summary>
		[JsMethod(Name = "getAllowToggle")]
		public bool GetAllowToggle() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property allowToggle
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property allowToggle.</param>
		[JsMethod(Name = "initAllowToggle")]
		public void InitAllowToggle(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Check whether the (computed) value of the boolean property allowToggle equals true.</para>
		/// </summary>
		[JsMethod(Name = "isAllowToggle")]
		public void IsAllowToggle() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property allowToggle.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetAllowToggle")]
		public void ResetAllowToggle() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property allowToggle.</para>
		/// </summary>
		/// <param name="value">New value for property allowToggle.</param>
		[JsMethod(Name = "setAllowToggle")]
		public void SetAllowToggle(bool value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Toggles the (computed) value of the boolean property allowToggle.</para>
		/// </summary>
		[JsMethod(Name = "toggleAllowToggle")]
		public void ToggleAllowToggle() { throw new NotImplementedException(); }

		#endregion Methods
    }
}