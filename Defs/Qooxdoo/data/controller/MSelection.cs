// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.data.controller
{
    /// <summary>
	/// <para>Mixin for the selection in the data binding controller.
	/// It contains an selection property which can be manipulated.
	/// Remember to call the method <see cref="#_addChangeTargetListener"/> on every
	/// change of the target.
	/// It is also important that the elements stored in the target e.g. ListItems
	/// do have the corresponding model stored as user data under the &#8220;model&#8221; key.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.data.controller.MSelection", OmitOptionalParameters = true, Export = false)]
    public partial class MSelection 
    {
		#region Events

		/// <summary>
		/// Fired on change of the property <see cref="Selection"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> OnChangeSelection;

		#endregion Events

		#region Properties

		/// <summary>
		/// <para>Data array containing the selected model objects. This property can be
		/// manipulated directly which means that a push to the selection will also
		/// select the corresponding element in the target.</para>
		/// </summary>
		[JsProperty(Name = "selection", NativeField = true)]
		public qx.data.Array Selection { get; set; }

		#endregion Properties

		#region Methods

		public MSelection() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property selection.</para>
		/// </summary>
		[JsMethod(Name = "getSelection")]
		public qx.data.Array GetSelection() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property selection
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property selection.</param>
		[JsMethod(Name = "initSelection")]
		public void InitSelection(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property selection.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetSelection")]
		public void ResetSelection() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property selection.</para>
		/// </summary>
		/// <param name="value">New value for property selection.</param>
		[JsMethod(Name = "setSelection")]
		public void SetSelection(qx.data.Array value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}