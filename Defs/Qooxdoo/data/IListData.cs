// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.data
{
    /// <summary>
	/// <para>This interface defines a data structure compatible with the data binding
	/// controllers.
	/// It defines a minimum of functionality which the controller need to work.</para>
	/// </summary>
	public interface IListData
    {
		#region Events

		/// <summary>
		/// <para>The change event which will be fired if there is a change in the data
		/// structure.The data should contain a map with three key value pairs:
		/// <item>start: The start index of the change.</item>
		/// <item>end: The end index of the change.</item>
		/// <item>type: The type of the change as a String. This can be &#8216;add&#8217;,
		/// &#8216;remove&#8217; or &#8216;order&#8217;</item>
		/// <item>item: The item which has been changed.</item></para>
		/// </summary>
		event Action<qx.eventx.type.Data> OnChange;

		/// <summary>
		/// <para>The changeLength event will be fired every time the length of the
		/// data structure changes.</para>
		/// </summary>
		event Action<qx.eventx.type.Event> OnChangeLength;

		#endregion Events

		#region Methods

		/// <summary>
		/// <para>Check if the given item is in the current data structure.</para>
		/// </summary>
		/// <param name="item">The item which is possibly in the data structure.</param>
		/// <returns>true, if the array contains the given item.</returns>
		bool Contains(object item);

		/// <summary>
		/// <para>Returns the item at the given index</para>
		/// </summary>
		/// <param name="index">The index requested of the data element.</param>
		/// <returns>The element at the given index.</returns>
		object GetItem(double index);

		/// <summary>
		/// <para>Returns the current length of the data structure.</para>
		/// </summary>
		/// <returns>The current length of the data structure.</returns>
		double GetLength();

		/// <summary>
		/// <para>Sets the given item at the given position in the data structure. A
		/// change event has to be fired.</para>
		/// </summary>
		/// <param name="index">The index of the data element.</param>
		/// <param name="item">The new item to set.</param>
		void SetItem(double index, object item);

		/// <summary>
		/// <para>Method to remove and add new element to the data. For every remove or
		/// add a change event should be fired.</para>
		/// </summary>
		/// <param name="startIndex">The index where the splice should start</param>
		/// <param name="amount">Defines number of element which will be removed at the given position.</param>
		/// <param name="varargs">All following parameters will be added at the given position to the array.</param>
		/// <returns>An array containing the removed elements.</returns>
		qx.data.Array Splice(double startIndex, double amount, object varargs);

		/// <summary>
		/// <para>Returns the list data as native array.</para>
		/// </summary>
		/// <returns>The native array.</returns>
		JsArray ToArray();

		#endregion Methods
    }
}