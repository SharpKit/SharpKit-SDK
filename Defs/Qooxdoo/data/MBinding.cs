// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.data
{
    /// <summary>
	/// <para>This mixin is forwarding the static methods of
	/// <see cref="qx.data.SingleValueBinding"/> to the instance including the mixin.
	/// The source object will be this.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.data.MBinding", OmitOptionalParameters = true, Export = false)]
    public partial class MBinding 
    {
		#region Methods

		public MBinding() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>The bind method delegates the call to the
		/// <see cref="qx.data.SingleValueBinding.Bind"/> function. As source, the current
		/// object (this) will be used.</para>
		/// </summary>
		/// <param name="sourcePropertyChain">The property chain which represents the source property.</param>
		/// <param name="targetObject">The object which the source should be bind to.</param>
		/// <param name="targetProperty">The property name of the target object.</param>
		/// <param name="options">A map containing the options. See qx.data.SingleValueBinding#bind for more information.</param>
		/// <returns>Returns the internal id for that binding. This can be used for referencing the binding e.g. for removing. This is not an atomic id so you can&#8217;t you use it as a hash-map index.</returns>
		[JsMethod(Name = "bind")]
		public object Bind(string sourcePropertyChain, qx.core.Object targetObject, string targetProperty, object options) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns an array which lists all bindings for the object.</para>
		/// </summary>
		/// <returns>An array of binding informations. Every binding information is an array itself containing id, sourceObject, sourceEvent, targetObject and targetProperty in that order.</returns>
		[JsMethod(Name = "getBindings")]
		public JsArray GetBindings() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Removes all bindings from the object.</para>
		/// </summary>
		[JsMethod(Name = "removeAllBindings")]
		public void RemoveAllBindings() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Removes the binding with the given id from the current object. The
		/// id hast to be the id returned by any of the bind functions.</para>
		/// </summary>
		/// <param name="id">The id of the binding.</param>
		[JsMethod(Name = "removeBinding")]
		public void RemoveBinding(object id) { throw new NotImplementedException(); }

		#endregion Methods
    }
}