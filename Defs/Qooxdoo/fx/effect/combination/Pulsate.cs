// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.fx.effect.combination
{
    /// <summary>
	/// <para>Combination effect &#8220;Pulsate&#8221;</para>
	/// <para>Fades the element in and out several times.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.fx.effect.combination.Pulsate", OmitOptionalParameters = true, Export = false)]
    public partial class Pulsate : qx.fx.Base
    {
		#region Properties

		/// <summary>
		/// <para>Number of seconds the effect should run.</para>
		/// </summary>
		[JsProperty(Name = "duration", NativeField = true)]
		public object Duration { get; set; }

		#endregion Properties

		#region Methods

		public Pulsate() { throw new NotImplementedException(); }

		/// <param name="element">The DOM element</param>
		public Pulsate(object element) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This internal function is called after
		/// the effect actually has ended.</para>
		/// </summary>
		[JsMethod(Name = "afterFinish")]
		public void AfterFinish() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This internal function is called before
		/// the effect&#8217;s &#8220;setup&#8221; method gets called.</para>
		/// </summary>
		[JsMethod(Name = "beforeSetup")]
		public void BeforeSetup() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Cancels the member effects first and then cancels itself.</para>
		/// </summary>
		[JsMethod(Name = "cancel")]
		public void Cancel() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Ends the effect</para>
		/// </summary>
		[JsMethod(Name = "end")]
		public void End() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Starts the effect</para>
		/// </summary>
		/// <returns>true if the effect was successfully started</returns>
		[JsMethod(Name = "start")]
		public bool Start() { throw new NotImplementedException(); }

		#endregion Methods
    }
}