// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.fx.queue
{
    /// <summary>
	/// <para>This queue manages ordering and rendering of effects.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.fx.queue.Queue", OmitOptionalParameters = true, Export = false)]
    public partial class Queue : qx.core.Object
    {
		#region Properties

		/// <summary>
		/// <para>Maximal number of effects that can run simultaneously.</para>
		/// </summary>
		[JsProperty(Name = "limit", NativeField = true)]
		public double Limit { get; set; }

		#endregion Properties

		#region Methods

		public Queue() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method adds the given effect to the queue and starts the timer (if necessary).</para>
		/// </summary>
		/// <param name="effect">The effect.</param>
		[JsMethod(Name = "add")]
		public void Add(object effect) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property limit.</para>
		/// </summary>
		[JsMethod(Name = "getLimit")]
		public double GetLimit() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property limit
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property limit.</param>
		[JsMethod(Name = "initLimit")]
		public void InitLimit(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method executes all effects in queue.</para>
		/// </summary>
		[JsMethod(Name = "loop")]
		public void Loop() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method removes the given effect from the queue.</para>
		/// </summary>
		/// <param name="effect">The effect.</param>
		[JsMethod(Name = "remove")]
		public void Remove(object effect) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property limit.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetLimit")]
		public void ResetLimit() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property limit.</para>
		/// </summary>
		/// <param name="value">New value for property limit.</param>
		[JsMethod(Name = "setLimit")]
		public void SetLimit(double value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}