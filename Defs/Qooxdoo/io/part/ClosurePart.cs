// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.io.part
{
    /// <summary>
	/// <para>Wrapper for a part as defined in the config file. This class knows about all
	/// packages the part depends on and provides functionality to load the part.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.io.part.ClosurePart", OmitOptionalParameters = true, Export = false)]
    public partial class ClosurePart : qx.io.part.Part
    {
		#region Methods

		public ClosurePart() { throw new NotImplementedException(); }

		/// <param name="name">Name of the part as defined in the config file at compile time.</param>
		/// <param name="packages">List of dependent packages</param>
		/// <param name="loader">The loader of this part.</param>
		public ClosurePart(string name, Package packages, qx.Part loader) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Loads the closure part including all its packages. The loading will
		/// be done parallel. After all packages are available, the closures are
		/// executed in the correct order.</para>
		/// </summary>
		/// <param name="callback">The function to call after the loading.</param>
		/// <param name="self">The context of the callback.</param>
		[JsMethod(Name = "load")]
		public void Load(Action<object> callback, object self) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Method for preloading this part.
		/// Empty implementation! Regular parts can not be preloaded.</para>
		/// </summary>
		/// <param name="callback">Callback for the preload.</param>
		/// <param name="self">The context of the callback.</param>
		[JsMethod(Name = "preload")]
		public void Preload(Action<object> callback, object self) { throw new NotImplementedException(); }

		#endregion Methods
    }
}