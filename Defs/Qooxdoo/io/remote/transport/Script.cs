// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.io.remote.transport
{
    /// <summary>
	/// <para>Transports requests to a server using dynamic script tags.</para>
	/// <para>This class should not be used directly by client programmers.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.io.remote.transport.Script", OmitOptionalParameters = true, Export = false)]
    public partial class Script : qx.io.remote.transport.Abstract
    {
		#region Methods

		public Script() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns always true, because script transport is supported by all browsers.</para>
		/// </summary>
		/// <returns>true</returns>
		[JsMethod(Name = "isSupported")]
		public static bool IsSupported() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the length of the content as fetched thus far.
		/// This method needs implementation (returns always 0).</para>
		/// </summary>
		/// <returns>Returns 0</returns>
		[JsMethod(Name = "getFetchedLength")]
		public double GetFetchedLength() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the content of the response.</para>
		/// </summary>
		/// <returns>If successful content of response as string.</returns>
		[JsMethod(Name = "getResponseContent")]
		public string GetResponseContent() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the value of the given response header.</para>
		/// <para>This method is not implemented at the moment and returns always &#8220;null&#8221;.</para>
		/// </summary>
		/// <param name="vLabel">Response header name</param>
		/// <returns>Returns null</returns>
		[JsMethod(Name = "getResponseHeader")]
		public object GetResponseHeader(string vLabel) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Provides an hash of all response headers.</para>
		/// <para>This method is not implemented at the moment and returns an empty map.</para>
		/// </summary>
		/// <returns>empty map</returns>
		[JsMethod(Name = "getResponseHeaders")]
		public object GetResponseHeaders() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the current status code of the request if available or -1 if not.
		/// This method needs implementation (returns always 200).</para>
		/// </summary>
		/// <returns>status code</returns>
		[JsMethod(Name = "getStatusCode")]
		public double GetStatusCode() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Provides the status text for the current request if available and null otherwise.
		/// This method needs implementation (returns always an empty string)</para>
		/// </summary>
		/// <returns>always an empty string.</returns>
		[JsMethod(Name = "getStatusText")]
		public string GetStatusText() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sends the request using &#8220;script&#8221; elements</para>
		/// </summary>
		[JsMethod(Name = "send")]
		public void Send() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets a request header with the given value.</para>
		/// <para>This method is not implemented at the moment.</para>
		/// </summary>
		/// <param name="vLabel">Request header name</param>
		/// <param name="vValue">Request header value</param>
		[JsMethod(Name = "setRequestHeader")]
		public void SetRequestHeader(string vLabel, object vValue) { throw new NotImplementedException(); }

		#endregion Methods
    }
}