// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.core
{
    /// <summary>
	/// <para>Mixin to add a bindTo method to a class, making it easy to bind a function
	/// to an object instance for use in lieu of calls to static method
	/// qx.lang.Function.bind().</para>
	/// <para>The easiest (but not necessarily most efficient) way to use this mixin is
	/// to include it in qx.core.Object by adding this line some place in the
	/// application code (typically in main()):</para>
	/// 
	/// qx.Class.include(qx.core.Object, qx.core.MBindTo);
	/// </code>
	/// <para>If object footprint (memory use) is of significant concern, that may be a
	/// bit excessive since every object which is a descendent of qx.core.Object
	/// will have the methods defined in the mixin. Instead, if a certain class
	/// will have many functions bound to it (of particular use for callback
	/// functions), qx.Class.include() could be used to include this mixin in that
	/// class instead of in qx.core.Object.</para>
	/// <para>Alternatively, that class may be subclassed, and the &#8216;include&#8217; key of the
	/// class configuration could be used to always include this mixin in the
	/// subclass. e.g.</para>
	/// 
	/// qx.Class.define("custom.Table",
	/// {
	/// extend  : qx.ui.table.Table,
	/// include : [ qx.core.MBindTo ]
	/// });
	/// </code>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.core.MBindTo", OmitOptionalParameters = true, Export = false)]
    public partial class MBindTo 
    {
		#region Methods

		public MBindTo() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Bind a function to this object</para>
		/// </summary>
		/// <param name="func">The function to be bound</param>
		/// <param name="varargs">Optional arguments to be passed to the function.</param>
		/// <returns>A wrapped version of the function that binds &#8216;this&#8217; to the user-provided function.</returns>
		[JsMethod(Name = "bindTo")]
		public Action<object> BindTo(Action<object> func, object varargs) { throw new NotImplementedException(); }

		#endregion Methods
    }
}