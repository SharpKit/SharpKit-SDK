// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.lang
{
    /// <summary>
	/// <para>Helper functions for numbers.</para>
	/// <para>The native JavaScript Number is not modified by this class.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.lang.Number", OmitOptionalParameters = true, Export = false)]
    public partial class Number 
    {
		#region Methods

		public Number() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Check whether the number is between a given range</para>
		/// </summary>
		/// <param name="nr">the number to check</param>
		/// <param name="vmin">lower bound of the range</param>
		/// <param name="vmax">upper bound of the range</param>
		/// <returns>whether the number is > vmin and </returns>
		[JsMethod(Name = "isBetweenRange")]
		public static bool IsBetweenRange(double nr, double vmin, double vmax) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Check whether the number is in a given range</para>
		/// </summary>
		/// <param name="nr">the number to check</param>
		/// <param name="vmin">lower bound of the range</param>
		/// <param name="vmax">upper bound of the range</param>
		/// <returns>whether the number is >= vmin and </returns>
		[JsMethod(Name = "isInRange")]
		public static bool IsInRange(double nr, double vmin, double vmax) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Limit the number to a given range</para>
		/// <list type="bullet">
		/// <item>If the number is greater than the upper bound, the upper bound is returned</item>
		/// <item>If the number is smaller than the lower bound, the lower bound is returned</item>
		/// <item>If the number is in the range, the number is returned</item>
		/// </list>
		/// </summary>
		/// <param name="nr">the number to limit</param>
		/// <param name="vmin">lower bound of the range</param>
		/// <param name="vmax">upper bound of the range</param>
		/// <returns>the limited number</returns>
		[JsMethod(Name = "limit")]
		public static double Limit(double nr, double vmin, double vmax) { throw new NotImplementedException(); }

		#endregion Methods
    }
}