// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.lang
{
    /// <summary>
	/// <para>An memory container which stores arbitrary data up to a maximum number of
	/// entries. When new entries come in an the maximum is reached, the oldest
	/// entries are deleted.</para>
	/// <para>A mark feature also exists which can be used to remember a point in time.
	/// When retrieving entriues, it is possible to get only those entries
	/// after the marked time. This is useful if data from the buffer is extracted
	/// and processed. Whenever this happens, a mark() call can be used so that the
	/// next extraction will only get new data.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.lang.RingBuffer", OmitOptionalParameters = true, Export = false)]
    public partial class RingBuffer : qx.util.RingBuffer
    {
		#region Methods

		public RingBuffer() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Constructor.</para>
		/// </summary>
		/// <param name="maxEntries">Maximum number of entries in the buffer</param>
		public RingBuffer(double maxEntries = 50) { throw new NotImplementedException(); }

		#endregion Methods
    }
}