// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.lang
{
    /// <summary>
	/// <para>Pure JavaScript implementation of the EcmaScript 3.1 JSON object. This class
	/// is used, if the browser does not support it natively.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.lang.JsonImpl", OmitOptionalParameters = true, Export = false)]
    public partial class JsonImpl : object
    {
		#region Methods

		public JsonImpl() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Convert a date to JSON</para>
		/// </summary>
		/// <param name="date">The date to convert</param>
		/// <returns>The JSON representation of the date</returns>
		[JsMethod(Name = "dateToJSON")]
		public string DateToJSON(DateTime date) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method parses a JSON text to produce an object or array.
		/// It can throw a SyntaxError exception.</para>
		/// </summary>
		/// <param name="text">JSON string to parse</param>
		/// <param name="reviver">Optional reviver function to filter and transform the results</param>
		/// <returns>The parsed JSON object</returns>
		[JsMethod(Name = "parse")]
		public object Parse(string text, Action<object> reviver) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>This method produces a JSON text from a JavaScript value.</para>
		/// </summary>
		/// <param name="value">any JavaScript value, usually an object or array.</param>
		/// <param name="replacer">an optional parameter that determines how object values are stringified for objects. It can be a function or an array of strings.</param>
		/// <param name="space">an optional parameter that specifies the indentation of nested structures. If it is omitted, the text will be packed without extra whitespace. If it is a number, it will specify the number of spaces to indent at each level. If it is a string (such as &#8217;\t&#8217; or &#8217;&nbsp;&#8217;), it contains the characters used to indent at each level.</param>
		/// <returns>The JSON string of the value</returns>
		[JsMethod(Name = "stringify")]
		public string Stringify(object value, Action<object> replacer, string space) { throw new NotImplementedException(); }

		#endregion Methods
    }
}