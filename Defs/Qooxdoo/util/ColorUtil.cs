// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.util
{
    /// <summary>
	/// <para>Methods to convert colors between different color spaces.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.util.ColorUtil", OmitOptionalParameters = true, Export = false)]
    public partial class ColorUtil 
    {
		#region Methods

		public ColorUtil() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Try to convert an incoming string to an RGB array.
		/// Support named colors, RGB strings, hex3 and hex6 values.</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>returns an array of red, green, blue on a successful transformation</returns>
		[JsMethod(Name = "cssStringToRgb")]
		public static JsArray CssStringToRgb(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a hex3 (#xxx) string to a hex6 (#xxxxxx) string.</para>
		/// </summary>
		/// <param name="value">a hex3 (#xxx) string</param>
		/// <returns>The hex6 (#xxxxxx) string or the passed value when the passed value is not an hex3 (#xxx) value.</returns>
		[JsMethod(Name = "hex3StringToHex6String")]
		public static string Hex3StringToHex6String(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a hex3 string to an RGB array</para>
		/// </summary>
		/// <param name="value">a hex3 (#xxx) string</param>
		/// <returns>an array with red, green, blue</returns>
		[JsMethod(Name = "hex3StringToRgb")]
		public static JsArray Hex3StringToRgb(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a hex6 string to an RGB array</para>
		/// </summary>
		/// <param name="value">a hex6 (#xxxxxx) string</param>
		/// <returns>an array with red, green, blue</returns>
		[JsMethod(Name = "hex6StringToRgb")]
		public static JsArray Hex6StringToRgb(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a hex string to an RGB array</para>
		/// </summary>
		/// <param name="value">a hex3 (#xxx) or hex6 (#xxxxxx) string</param>
		/// <returns>an array with red, green, blue</returns>
		[JsMethod(Name = "hexStringToRgb")]
		public static JsArray HexStringToRgb(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Convert HSB colors to RGB</para>
		/// </summary>
		/// <param name="hsb">an array with hue, saturation and brightness</param>
		/// <returns>an array with red, green, blue</returns>
		[JsMethod(Name = "hsbToRgb")]
		public static double HsbToRgb(double hsb) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detects if a string is a valid CSS color string</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>true when the incoming value is a valid CSS color string</returns>
		[JsMethod(Name = "isCssString")]
		public static bool IsCssString(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detects if a string is a valid hex3 string</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>true when the incoming value is a valid hex3 string</returns>
		[JsMethod(Name = "isHex3String")]
		public static bool IsHex3String(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detects if a string is a valid hex6 string</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>true when the incoming value is a valid hex6 string</returns>
		[JsMethod(Name = "isHex6String")]
		public static bool IsHex6String(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Whether the incoming value is a named color.</para>
		/// </summary>
		/// <param name="value">the color value to test</param>
		/// <returns>true if the color is a named color</returns>
		[JsMethod(Name = "isNamedColor")]
		public static bool IsNamedColor(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detects if a string is a valid RGBA string</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>true when the incoming value is a valid RGBA string</returns>
		[JsMethod(Name = "isRgbaString")]
		public static bool IsRgbaString(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detects if a string is a valid RGB string</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>true when the incoming value is a valid RGB string</returns>
		[JsMethod(Name = "isRgbString")]
		public static bool IsRgbString(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Whether the incoming value is a system color.</para>
		/// </summary>
		/// <param name="value">the color value to test</param>
		/// <returns>true if the color is a system color</returns>
		[JsMethod(Name = "isSystemColor")]
		public static bool IsSystemColor(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Whether the incoming value is a themed color.</para>
		/// </summary>
		/// <param name="value">the color value to test</param>
		/// <returns>true if the color is a themed color</returns>
		[JsMethod(Name = "isThemedColor")]
		public static bool IsThemedColor(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Detects if a string is a valid qooxdoo color</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>true when the incoming value is a valid qooxdoo color</returns>
		[JsMethod(Name = "isValidPropertyValue")]
		public static bool IsValidPropertyValue(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Creates a random color.</para>
		/// </summary>
		/// <returns>a valid qooxdoo/CSS rgb color string.</returns>
		[JsMethod(Name = "randomColor")]
		public static string RandomColor() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a RGB array to an hex6 string</para>
		/// </summary>
		/// <param name="rgb">an array with red, green and blue</param>
		/// <returns>a hex6 string (#xxxxxx)</returns>
		[JsMethod(Name = "rgbToHexString")]
		public static string RgbToHexString(JsArray rgb) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Convert RGB colors to HSB</para>
		/// </summary>
		/// <param name="rgb">red, blue and green as array</param>
		/// <returns>an array with hue, saturation and brightness</returns>
		[JsMethod(Name = "rgbToHsb")]
		public static JsArray RgbToHsb(double rgb) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Converts a RGB array to an RGB string</para>
		/// </summary>
		/// <param name="rgb">an array with red, green and blue</param>
		/// <returns>a RGB string</returns>
		[JsMethod(Name = "rgbToRgbString")]
		public static string RgbToRgbString(JsArray rgb) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Try to convert an incoming string to an RGB array.
		/// Supports themed, named and system colors, but also RGB strings,
		/// hex3 and hex6 values.</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>returns an array of red, green, blue on a successful transformation</returns>
		[JsMethod(Name = "stringToRgb")]
		public static JsArray StringToRgb(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Try to convert an incoming string to an RGB string, which can be used
		/// for all color properties.
		/// Supports themed, named and system colors, but also RGB strings,
		/// hex3 and hex6 values.</para>
		/// </summary>
		/// <param name="str">any string</param>
		/// <returns>a RGB string</returns>
		[JsMethod(Name = "stringToRgbString")]
		public static string StringToRgbString(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Whether the color theme manager is loaded. Generally
		/// part of the GUI of qooxdoo.</para>
		/// </summary>
		/// <returns>true when color theme support is ready.</returns>
		[JsMethod(Name = "supportsThemes")]
		public static bool SupportsThemes() { throw new NotImplementedException(); }

		#endregion Methods
    }
}