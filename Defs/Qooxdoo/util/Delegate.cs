// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.util
{
    /// <summary>
	/// <para>Methods to work with the delegate pattern.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.util.Delegate", OmitOptionalParameters = true, Export = false)]
    public partial class Delegate 
    {
		#region Methods

		public Delegate() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Checks, if the given delegate is valid or if a specific method is given.</para>
		/// </summary>
		/// <param name="delegatex">The delegate object.</param>
		/// <param name="specificMethod">The name of the method to search for.</param>
		/// <returns>True, if everything was ok.</returns>
		[JsMethod(Name = "containsMethod")]
		public static bool ContainsMethod(object delegatex, string specificMethod) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the delegate method given my its name.</para>
		/// </summary>
		/// <param name="delegatex">The delegate object to check the method.</param>
		/// <param name="specificMethod">The name of the delegate method.</param>
		/// <returns>The requested method or null, if no method is set.</returns>
		[JsMethod(Name = "getMethod")]
		public static Action<object> GetMethod(object delegatex, string specificMethod) { throw new NotImplementedException(); }

		#endregion Methods
    }
}