// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.util.format
{
    /// <summary>
	/// <para>A formatter and parser for numbers.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.util.format.NumberFormat", OmitOptionalParameters = true, Export = false)]
    public partial class NumberFormat : qx.core.Object, qx.util.format.IFormat
    {
		#region Events

		/// <summary>
		/// Fired on change of the property <see cref="Postfix"/>.
		/// </summary>
		public event Action<qx.eventx.type.Data> OnChangeNumberFormat;

		#endregion Events

		#region Properties

		/// <summary>
		/// <para>Whether thousand groupings should be used {e.g. &#8220;1,432,234.65&#8221;}.</para>
		/// </summary>
		[JsProperty(Name = "groupingUsed", NativeField = true)]
		public bool GroupingUsed { get; set; }

		/// <summary>
		/// <para>The maximum number of fraction digits (digits after the decimal separator).
		/// Superfluous digits will cause rounding (&#8220;1.8277&#8221; -> &#8220;1.83&#8221;)</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "maximumFractionDigits", NativeField = true)]
		public double MaximumFractionDigits { get; set; }

		/// <summary>
		/// <para>The maximum number of integer digits (superfluous digits will be cut off
		/// (&#8220;1923&#8221; -> &#8220;23&#8221;).</para>
		/// </summary>
		/// <remarks>
		/// Allow nulls: true
		/// </remarks>
		[JsProperty(Name = "maximumIntegerDigits", NativeField = true)]
		public double MaximumIntegerDigits { get; set; }

		/// <summary>
		/// <para>The minimum number of fraction digits (digits after the decimal separator).
		/// Missing digits will be filled up with 0 (&#8220;1.5&#8221; -> &#8220;1.500&#8221;)</para>
		/// </summary>
		[JsProperty(Name = "minimumFractionDigits", NativeField = true)]
		public double MinimumFractionDigits { get; set; }

		/// <summary>
		/// <para>The minimum number of integer digits (digits before the decimal separator).
		/// Missing digits will be filled up with 0 (&#8220;19&#8221; -> &#8220;0019&#8221;).</para>
		/// </summary>
		[JsProperty(Name = "minimumIntegerDigits", NativeField = true)]
		public double MinimumIntegerDigits { get; set; }

		/// <summary>
		/// <para>Sets the postfix to put after the number {&#8221; %&#8221; -> &#8220;56.13 %&#8221;}.</para>
		/// </summary>
		[JsProperty(Name = "postfix", NativeField = true)]
		public string Postfix { get; set; }

		/// <summary>
		/// <para>The prefix to put before the number {&#8220;EUR &#8221; -> &#8220;EUR 12.31&#8221;}.</para>
		/// </summary>
		[JsProperty(Name = "prefix", NativeField = true)]
		public string Prefix { get; set; }

		#endregion Properties

		#region Methods

		public NumberFormat() { throw new NotImplementedException(); }

		/// <param name="locale">optional locale to be used</param>
		public NumberFormat(string locale) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Formats an object.</para>
		/// </summary>
		/// <param name="obj">The object to format.</param>
		/// <returns>the formatted object.</returns>
		[JsMethod(Name = "format")]
		public string Format(object obj) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property groupingUsed.</para>
		/// </summary>
		[JsMethod(Name = "getGroupingUsed")]
		public bool GetGroupingUsed() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property maximumFractionDigits.</para>
		/// </summary>
		[JsMethod(Name = "getMaximumFractionDigits")]
		public double GetMaximumFractionDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property maximumIntegerDigits.</para>
		/// </summary>
		[JsMethod(Name = "getMaximumIntegerDigits")]
		public double GetMaximumIntegerDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property minimumFractionDigits.</para>
		/// </summary>
		[JsMethod(Name = "getMinimumFractionDigits")]
		public double GetMinimumFractionDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property minimumIntegerDigits.</para>
		/// </summary>
		[JsMethod(Name = "getMinimumIntegerDigits")]
		public double GetMinimumIntegerDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property postfix.</para>
		/// </summary>
		[JsMethod(Name = "getPostfix")]
		public string GetPostfix() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Returns the (computed) value of the property prefix.</para>
		/// </summary>
		[JsMethod(Name = "getPrefix")]
		public string GetPrefix() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property groupingUsed
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property groupingUsed.</param>
		[JsMethod(Name = "initGroupingUsed")]
		public void InitGroupingUsed(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property maximumFractionDigits
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property maximumFractionDigits.</param>
		[JsMethod(Name = "initMaximumFractionDigits")]
		public void InitMaximumFractionDigits(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property maximumIntegerDigits
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property maximumIntegerDigits.</param>
		[JsMethod(Name = "initMaximumIntegerDigits")]
		public void InitMaximumIntegerDigits(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property minimumFractionDigits
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property minimumFractionDigits.</param>
		[JsMethod(Name = "initMinimumFractionDigits")]
		public void InitMinimumFractionDigits(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property minimumIntegerDigits
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property minimumIntegerDigits.</param>
		[JsMethod(Name = "initMinimumIntegerDigits")]
		public void InitMinimumIntegerDigits(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property postfix
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property postfix.</param>
		[JsMethod(Name = "initPostfix")]
		public void InitPostfix(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Calls the apply method and dispatches the change event of the property prefix
		/// with the default value defined by the class developer. This function can
		/// only be called from the constructor of a class.</para>
		/// </summary>
		/// <param name="value">Initial value for property prefix.</param>
		[JsMethod(Name = "initPrefix")]
		public void InitPrefix(object value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Check whether the (computed) value of the boolean property groupingUsed equals true.</para>
		/// </summary>
		[JsMethod(Name = "isGroupingUsed")]
		public void IsGroupingUsed() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Parses an object.</para>
		/// </summary>
		/// <param name="str">the string to parse.</param>
		/// <returns>the parsed object.</returns>
		[JsMethod(Name = "parse")]
		public object Parse(string str) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property groupingUsed.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetGroupingUsed")]
		public void ResetGroupingUsed() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property maximumFractionDigits.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetMaximumFractionDigits")]
		public void ResetMaximumFractionDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property maximumIntegerDigits.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetMaximumIntegerDigits")]
		public void ResetMaximumIntegerDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property minimumFractionDigits.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetMinimumFractionDigits")]
		public void ResetMinimumFractionDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property minimumIntegerDigits.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetMinimumIntegerDigits")]
		public void ResetMinimumIntegerDigits() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property postfix.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetPostfix")]
		public void ResetPostfix() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Resets the user value of the property prefix.</para>
		/// <para>The computed value falls back to the next available value e.g. appearance, init or
		/// inheritance value depeneding on the property configuration and value availability.</para>
		/// </summary>
		[JsMethod(Name = "resetPrefix")]
		public void ResetPrefix() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property groupingUsed.</para>
		/// </summary>
		/// <param name="value">New value for property groupingUsed.</param>
		[JsMethod(Name = "setGroupingUsed")]
		public void SetGroupingUsed(bool value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property maximumFractionDigits.</para>
		/// </summary>
		/// <param name="value">New value for property maximumFractionDigits.</param>
		[JsMethod(Name = "setMaximumFractionDigits")]
		public void SetMaximumFractionDigits(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property maximumIntegerDigits.</para>
		/// </summary>
		/// <param name="value">New value for property maximumIntegerDigits.</param>
		[JsMethod(Name = "setMaximumIntegerDigits")]
		public void SetMaximumIntegerDigits(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property minimumFractionDigits.</para>
		/// </summary>
		/// <param name="value">New value for property minimumFractionDigits.</param>
		[JsMethod(Name = "setMinimumFractionDigits")]
		public void SetMinimumFractionDigits(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property minimumIntegerDigits.</para>
		/// </summary>
		/// <param name="value">New value for property minimumIntegerDigits.</param>
		[JsMethod(Name = "setMinimumIntegerDigits")]
		public void SetMinimumIntegerDigits(double value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property postfix.</para>
		/// </summary>
		/// <param name="value">New value for property postfix.</param>
		[JsMethod(Name = "setPostfix")]
		public void SetPostfix(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the user value of the property prefix.</para>
		/// </summary>
		/// <param name="value">New value for property prefix.</param>
		[JsMethod(Name = "setPrefix")]
		public void SetPrefix(string value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Toggles the (computed) value of the boolean property groupingUsed.</para>
		/// </summary>
		[JsMethod(Name = "toggleGroupingUsed")]
		public void ToggleGroupingUsed() { throw new NotImplementedException(); }

		#endregion Methods
    }
}