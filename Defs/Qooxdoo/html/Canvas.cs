// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.html
{
    /// <summary>
	/// <para>Managed wrapper for the HTML canvas tag.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.html.Canvas", OmitOptionalParameters = true, Export = false)]
    public partial class Canvas : qx.html.Element
    {
		#region Methods

		public Canvas() { throw new NotImplementedException(); }

		/// <param name="styles">optional map of CSS styles, where the key is the name of the style and the value is the value to use.</param>
		/// <param name="attributes">optional map of element attributes, where the key is the name of the attribute and the value is the value to use.</param>
		public Canvas(object styles = null, object attributes = null) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get the canvas element [W3C-HMTL5]</para>
		/// </summary>
		/// <returns>The canvas DOM element.</returns>
		[JsMethod(Name = "getCanvas")]
		public qx.html.Element GetCanvas() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get the canvas&#8217; 2D rendering context
		/// [W3C-HTML5].
		/// All drawing operations are performed on this context.</para>
		/// </summary>
		/// <returns>The 2D rendering context.</returns>
		[JsMethod(Name = "getContext2d")]
		public CanvasRenderingContext2D GetContext2d() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get the height attribute of the canvas element</para>
		/// </summary>
		/// <returns>canvas height</returns>
		[JsMethod(Name = "getHeight")]
		public double GetHeight() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get the width attribute of the canvas element</para>
		/// </summary>
		/// <returns>canvas width</returns>
		[JsMethod(Name = "getWidth")]
		public double GetWidth() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Set the height attribute of the canvas element. This property controls the
		/// size of the canvas coordinate space.</para>
		/// </summary>
		/// <param name="height">canvas height</param>
		[JsMethod(Name = "setHeight")]
		public void SetHeight(double height) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Set the width attribute of the canvas element. This property controls the
		/// size of the canvas coordinate space.</para>
		/// </summary>
		/// <param name="width">canvas width</param>
		[JsMethod(Name = "setWidth")]
		public void SetWidth(double width) { throw new NotImplementedException(); }

		#endregion Methods
    }
}