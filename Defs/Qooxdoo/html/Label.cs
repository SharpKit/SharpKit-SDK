// Generated by SharpKit.QooxDoo.Generator
using System;
using System.Collections.Generic;
using SharpKit.Html;
using SharpKit.JavaScript;

namespace qx.html
{
    /// <summary>
	/// <para>A cross browser label instance with support for rich HTML and text labels.</para>
	/// <para>Text labels supports ellipsis to reduce the text width.</para>
	/// <para>The mode can be changed through the method <see cref="SetRich"/>
	/// which accepts a boolean value. The default mode is &#8220;text&#8221; which is
	/// a good choice because it has a better performance.</para>
	/// </summary>
	[JsType(JsMode.Prototype, Name = "qx.html.Label", OmitOptionalParameters = true, Export = false)]
    public partial class Label : qx.html.Element
    {
		#region Methods

		public Label() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Get the current content.</para>
		/// </summary>
		/// <returns>The labels&#8217;s content</returns>
		[JsMethod(Name = "getValue")]
		public string GetValue() { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Toggles between rich HTML mode and pure text mode.</para>
		/// </summary>
		/// <param name="value">Whether the HTML mode should be used.</param>
		/// <returns>This instance for chaining support.</returns>
		[JsMethod(Name = "setRich")]
		public qx.html.Label SetRich(bool value) { throw new NotImplementedException(); }

		/// <summary>
		/// <para>Sets the HTML/text content depending on the content mode.</para>
		/// </summary>
		/// <param name="value">The content to be used.</param>
		/// <returns>This instance for for chaining support.</returns>
		[JsMethod(Name = "setValue")]
		public qx.html.Label SetValue(string value) { throw new NotImplementedException(); }

		#endregion Methods
    }
}