/* Generated by SharpKit 5 v5.4.6-preview */

if (typeof(JsTypes) == "undefined")
    var JsTypes = [];
var SharpKit$JsClr$Test$TestClass = {
    fullname: "SharpKit.JsClr.Test.TestClass",
    baseTypeName: "System.Object",
    assemblyName: "SharpKit.JsClr.Test",
    Kind: "Class",
    definition: {
        ctor: function (){
            System.Object.ctor.call(this);
        }
    }
};
JsTypes.push(SharpKit$JsClr$Test$TestClass);
RunTest("Contains", function (){
    var testClass = new SharpKit.JsClr.Test.TestClass.ctor();
    var array = [testClass];
    QUnit.ok(array.Contains(testClass));
});
RunTest("Remove", function (){
    var testClass = new SharpKit.JsClr.Test.TestClass.ctor();
    var array = [testClass];
    array.Remove(testClass);
    QUnit.equal(0, array.get_Count());
});
RunTest("ContainsTest", function (){
    QUnit.ok(System.Linq.Enumerable.Contains$1$$IEnumerable$1$$TSource(System.String.ctor, ["one", "two"], "two"));
});
function RunTest(testName, action){
    Compile();
    test(testName, action);
};
RunTest("PeekTest", function (){
    var stack = new System.Collections.Generic.Stack$1.ctor(System.String.ctor);
    stack.Push("hello");
    stack.Push("goodbye");
    QUnit.equal("goodbye", stack.Peek());
});
RunTest("Format3Arg", function (){
    QUnit.equal("foo bar hello", System.String.Format$$String$$Object$$Object$$Object("{0} {1} {2}", "foo", "bar", "hello"));
});

