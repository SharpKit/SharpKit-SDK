{"attributes": {"fullName": "qx.fx.effect.combination.Puff", "packageName": "qx.fx.effect.combination", "type": "class", "name": "Puff", "superClass": "qx.fx.Base"}, "type": "class", "children": [{"attributes": {"text": "<p>Combination effect &#8220;Puff&#8221;</p>\n\n<p>Resizes the element from zero to the original size of the element and fades\nit in at the same time.</p>"}, "type": "desc"}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use qx.bom.element.Animation instead.</p>"}, "type": "desc"}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 59, "isCtor": true, "overriddenFrom": "qx.fx.Base", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use qx.bom.element.Animation instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"docFrom": "qx.fx.Base", "line": 105, "overriddenFrom": "qx.fx.Base", "name": "afterFinishInternal"}, "type": "method"}, {"attributes": {"name": "getModifyDisplay", "fromProperty": "modifyDisplay"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>modifyDisplay</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #modifyDisplay}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>modifyDisplay</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initModifyDisplay", "fromProperty": "modifyDisplay"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>modifyDisplay</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>modifyDisplay</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #modifyDisplay}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isModifyDisplay", "fromProperty": "modifyDisplay"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>modifyDisplay</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #modifyDisplay}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetModifyDisplay", "fromProperty": "modifyDisplay"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>modifyDisplay</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #modifyDisplay}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setModifyDisplay", "fromProperty": "modifyDisplay"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>modifyDisplay</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>modifyDisplay</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #modifyDisplay}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.fx.Base", "line": 113, "overriddenFrom": "qx.fx.Base", "name": "start"}, "type": "method"}, {"attributes": {"name": "toggleModifyDisplay", "fromProperty": "modifyDisplay"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>modifyDisplay</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #modifyDisplay}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "Boolean", "defaultValue": "true", "name": "modifyDisplay", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Flag indicating if the <span class=\"caps\">CSS</span> attribute &#8220;display&#8221;\nshould be modified by effect</p>"}, "type": "desc"}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use qx.bom.element.Animation instead.</p>"}, "type": "desc"}]}]}]}]}