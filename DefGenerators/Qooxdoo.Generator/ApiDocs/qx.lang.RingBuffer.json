{"attributes": {"fullName": "qx.lang.RingBuffer", "packageName": "qx.lang", "type": "class", "name": "RingBuffer", "superClass": "qx.util.RingBuffer"}, "type": "class", "children": [{"attributes": {"text": "<p>An memory container which stores arbitrary data up to a maximum number of\nentries. When new entries come in an the maximum is reached, the oldest\nentries are deleted.</p>\n\n<p>A mark feature also exists which can be used to remember a point in time.\nWhen retrieving entriues, it is possible to get only those entries\nafter the marked time. This is useful if data from the buffer is extracted\nand processed. Whenever this happens, a mark() call can be used so that the\nnext extraction will only get new data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Plase use qx.util.RingBuffer instead.</p>"}, "type": "desc"}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 43, "isCtor": true, "overriddenFrom": "qx.util.RingBuffer", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "50", "name": "maxEntries"}, "type": "param", "children": [{"attributes": {"text": "<p>Maximum number of entries in the buffer</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Constructor.</p>"}, "type": "desc"}]}]}]}