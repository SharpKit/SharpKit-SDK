{"attributes": {"fullName": "qx.lang.Object", "packageName": "qx.lang", "isStatic": true, "type": "bootstrap", "name": "Object"}, "type": "class", "children": [{"attributes": {"text": "<p>Helper functions to handle Object as a Hash map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 185, "isStatic": true, "name": "carefullyMergeWith"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>target object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be merged</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>please use mergeWith instead with override set to false</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Inserts all key/value pairs of the source object into the\ntarget object but doesn&#8217;t override existing keys</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>target with merged values from source</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 236, "isStatic": true, "name": "clone"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to copy</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "deep"}, "type": "param", "children": [{"attributes": {"text": "<p>If the clone should be a deep clone.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return a copy of an Object</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A copy of the object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 323, "isStatic": true, "name": "contains"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>Map to search for the value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the map contains the given value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the value was found in the map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 35, "isStatic": true, "name": "empty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map to clear</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clears the map from all values</p>"}, "type": "desc"}]}, {"attributes": {"line": 363, "isStatic": true, "name": "fromArray"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "array"}, "type": "param", "children": [{"attributes": {"text": "<p>array to convert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert an array into a map.</p>\n\n<p>All elements of the array become keys of the returned map by\ncalling <code>toString</code> on the array elements. The values of the\nmap are set to <code>true</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the array converted to a map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 299, "isStatic": true, "name": "getKeyFromValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>Map to search for the key</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the key of the given value from a map.\nIf the map has more than one key matching the value, the first match is returned.\nIf the map does not contain the value, <code>null</code> is returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Name of the key (null if not found).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "isStatic": true, "name": "getKeys"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use Object.keys instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Get the keys of a map as array as returned by a &#8220;for&#8230; in&#8221; statement.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>array of the keys of the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "isStatic": true, "name": "getKeysAsString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Object.keys(map).join().</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Get the keys of a map as string</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>String of the keys of the map The keys are separated by &#8221;, &#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "isStatic": true, "name": "getLength"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the number of objects in the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>number of objects in the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 146, "isStatic": true, "name": "getValues"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the values of a map as array</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>array of the values of the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 82, "isStatic": true, "name": "hasMinLength"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "minLength"}, "type": "param", "children": [{"attributes": {"text": "<p>minimum number of objects in the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use a check and &#8216;qx.lang.Object.getLength&#8217;.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Check whether the number of objects in the maps is at least &#8220;length&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the map contains at least &#8220;length&#8221; objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 274, "isStatic": true, "name": "invert"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>Map to invert</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inverts a map by exchanging the keys with the values.</p>\n\n<p>If the map has the same values for different keys, information will get lost.\nThe values will be converted to strings using the toString methods.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>inverted Map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 58, "isStatic": true, "name": "isEmpty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check if the hash has any keys</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the map has any keys</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 209, "isStatic": true, "name": "merge"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>target object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>variable number of objects to merged with target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use mergeWith instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Merge a number of objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>target with merged values from the other objects</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "isStatic": true, "name": "mergeWith"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>target object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be merged</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "overwrite"}, "type": "param", "children": [{"attributes": {"text": "<p>If enabled existing keys will be overwritten</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts all keys of the source object into the\ntarget objects. Attention: The target map gets modified.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Target with merged values from the source object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 341, "isStatic": true, "name": "select"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the key to get the value from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>map to get the value from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": ""}, "type": "desc"}]}, {"attributes": {"text": "<p>Selects the value with the given key from the map.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>value for the given key from the map</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 408, "isStatic": true, "name": "toUriParameter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to serialize.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "post"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether spaces should be encoded with &#8221;+&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "deprecated", "children": [{"attributes": {"text": "<p>Please use qx.util.Uri.toParameter instead.</p>"}, "type": "desc"}]}, {"attributes": {"text": "<p>Serializes an object to <span class=\"caps\">URI</span> parameters (also known as query string).</p>\n\n<p>Escapes characters that have a special meaning in URIs as well as\numlauts. Uses the global function encodeURIComponent, see\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/encodeURIComponent</a></p>\n\n<p>Note: For <span class=\"caps\">URI</span> parameters that are to be sent as\napplication/x-www-form-urlencoded (POST), spaces should be encoded\nwith &#8221;+&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Serialized object. Safe to append to URIs or send as <span class=\"caps\">URL</span> encoded string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}]}