{"attributes": {"fullName": "qx.bom.htmlarea.HtmlArea", "packageName": "qx.bom.htmlarea", "type": "class", "name": "HtmlArea", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>Low-level Rich text editor which can be used by connecting it to an\nexisting <span class=\"caps\">DOM</span> element (DIV node).\nThis component does not contain any {@link qx.ui} code resulting in a\nsmaller footprint.</p>\n\n<p>Optimized for the use at a traditional webpage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 69, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to connect the component to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial content</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "styleInformation"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional style information for the editor&#8217;s document Can be a string or a map (example: { &#8220;p&#8221; : &#8220;padding:2px&#8221; }</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>source of the iframe</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Constructor</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "contextmenu"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor gets a right click.</p>\n\n<p>Fires a data event with the following data:</p>\n\n<ul>\n<li>x &#8211; absolute x coordinate</li>\n<li>y &#8211; absolute y coordinate</li>\n<li>relX &#8211; relative x coordinate</li>\n<li>relY &#8211; relative y coordinate</li>\n<li>target &#8211; <span class=\"caps\">DOM</span> element target</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "cursorContext"}, "type": "event", "children": [{"attributes": {"text": "<p>This event holds a data map which informs about the formatting at the\ncurrent cursor position. It holds the following keys:</p>\n\n<ul>\n<li>bold</li>\n<li>italic</li>\n<li>underline</li>\n<li>strikethrough</li>\n<li>fontSize</li>\n<li>fontFamily</li>\n<li>insertUnorderedList</li>\n<li>insertOrderedList</li>\n<li>justifyLeft</li>\n<li>justifyCenter</li>\n<li>justifyRight</li>\n<li>justifyFull</li>\n</ul>\n\n<p>This map can be used to control/update a toolbar states.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "focused"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor gets the focus and his own handling is done</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "focusOut"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the document receives an &#8220;focusout&#8221; event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "load"}, "type": "event", "children": [{"attributes": {"text": "<p>Thrown when the editor is loaded.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "loadingError"}, "type": "event", "children": [{"attributes": {"text": "<p>Thrown when the editor gets an error at loading time.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "messengerContent"}, "type": "event", "children": [{"attributes": {"text": "<p>Only available if messengerMode is active. This event returns the current content of the editor.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "ready"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor is ready to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "readyAfterInvalid"}, "type": "event", "children": [{"attributes": {"text": "<p>This event is dispatched when the editor is ready to use after it was\nre-located and re-initialized. Only implemented for Gecko browsers.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "undoRedoState"}, "type": "event", "children": [{"attributes": {"text": "<p>Holds information about the state of undo/redo\nKeys are &#8220;undo&#8221; and &#8220;redo&#8221;.\nPossible values are 0 and -1 to stay in sync with\nthe kind the &#8220;cursorContext&#8221; event works.\n(1 = active/pressed, 0 = possible/not pressed, -1 = disabled)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "line": 224, "isStatic": true, "name": "__formatStyleInformation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "styleInformation"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> styles which should be applied at startup of the editor</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Formats the style information. If the styleInformation was passed\nin as a map it gets converted to a string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 289, "isStatic": true, "name": "__getHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "root"}, "type": "param", "children": [{"attributes": {"text": "<p>Root node (starting point)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}, {"attributes": {"name": "outputRoot"}, "type": "param", "children": [{"attributes": {"text": "<p>Controls whether the root node is also added to the output</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "skipHtmlEncoding"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the html encoding of text nodes should be skipped</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "postProcess"}, "type": "param", "children": [{"attributes": {"text": "<p>optional function to call which is executed with every element processing</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get html content (own recursive method)</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Content of current node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 569, "isStatic": true, "name": "__htmlEncode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "s"}, "type": "param", "children": [{"attributes": {"text": "<p>String to encode</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Encodes given string with <span class=\"caps\">HTML</span>-Entities</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Encoded string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 558, "isStatic": true, "name": "__needsClosingTag"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if given element needs a closing tag</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Closing tag needed or not</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 254, "isStatic": true, "name": "__parseStyle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>String that contain valid style informations separated by &#8221;;&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Parse style string to map.</p>\n\n<p>Example:\nqx.bom.htmlarea.HtmlArea.__parseStyle(&#8220;text-align: left; text-weight: bold;&#8221;);</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of style names and it&#8217;s values</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 589, "isStatic": true, "name": "isBlockNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given node is a block node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether it is a block node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 624, "isStatic": true, "name": "isHeadlineNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks of the given node is headline node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether it is a headline node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 605, "isStatic": true, "name": "isParagraphParent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>node to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if one element is in the list of elements that are allowed to contain a paragraph in <span class=\"caps\">HTML</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"type": "String", "name": "simpleLinebreak", "value": "<br>"}, "type": "constant"}, {"attributes": {"type": "String", "name": "EMPTY_DIV", "value": "<div></div>"}, "type": "constant"}, {"attributes": {"name": "hotkeyInfo"}, "type": "constant", "children": [{"attributes": {"text": "<p>Map with infos about hotkey methods</p>"}, "type": "desc"}]}, {"attributes": {"type": "Regexp", "name": "GetWordsRegExp", "value": "/([^\\u0000-\\u0040\\u005b-\\u005f\\u007b-\\u007f]|['])+/g"}, "type": "constant"}, {"attributes": {"type": "Regexp", "name": "CleanupWordsRegExp", "value": "/[\\u0000-\\u0040]/gi"}, "type": "constant"}, {"attributes": {"type": "String", "name": "closingTags", "value": " SCRIPT STYLE DIV SPAN TR TD TBODY TABLE EM STRONG FONT A P B I U STRIKE H1 H2 H3 H4 H5 H6 "}, "type": "constant", "children": [{"attributes": {"text": "<p>String containing all tags which need a corresponding closing tag</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 1565, "name": "__addFocusListeners"}, "type": "method", "children": [{"attributes": {"text": "<p>Add focus event listeners.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1551, "name": "__addKeyListeners"}, "type": "method", "children": [{"attributes": {"text": "<p>Add key event listeners to the body element</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1540, "name": "__addListeners"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds all needed eventlistener</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1581, "name": "__addMouseListeners"}, "type": "method", "children": [{"attributes": {"text": "<p>Add mouse event listeners.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 2916, "name": "__checkForContentAndSetDefaultContent"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method which checks if content is available and if not sets the default content.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 773, "name": "__connectToDomElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to connect to</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Create a &#8220;DIV&#8221; element which can be added to the document.\nThis element is the container for the editable iframe element.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1, "name": "__createRange"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "sel"}, "type": "param", "children": [{"attributes": {"text": "<p>current selection object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Selection"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a range for the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Range object or null if the document is not available</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Range"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1607, "name": "__createStackCommandManager"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper method to create an object which acts like a command manager\ninstance to collect all commands which are executed <span class=\"caps\">BEFORE</span> the command\nmanager instance is ready.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>stack command manager object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 3058, "name": "__examineCursorContext"}, "type": "method", "children": [{"attributes": {"text": "<p>Examines the current context of the cursor (e.g. over bold text).\nThis method will dispatch the data event &#8220;cursorContext&#8221; which holds a map\nwith different keys like bold, italic, underline etc.\nThe main purpose for this event is to be able to set the states of your toolbar\nbuttons so you can e.g. visualize that the cursor is currently over bold text.</p>\n\n<p>The possible values are\n-1 = command is not possible at the moment. Used to disable the corresponding buttons\n 0 = command is possible at the moment. Used to enable the corresponding buttons (e.g. bold/italic/underline etc.)\n 1 = cursor is over content which already received that command. Used to to activate the corresponding buttons (e.g. bold/italic/underline etc.)</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the current styles and their value or null if no focus node is available</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 2259, "name": "__executeHotkey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "hotkeyIdentifier"}, "type": "param", "children": [{"attributes": {"text": "<p>hotkey identifier for lookup</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "preventDefault"}, "type": "param", "children": [{"attributes": {"text": "<p>whether do preventDefault or not</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes a method and prevent default</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 912, "name": "__generateDefaultContent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>string to insert into the default content</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Generates the default content and inserts the given string</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Default content <span class=\"caps\">HTML</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1486, "name": "__generateDocumentSkeleton"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>body.innerHTML</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the document skeleton with content usable for the editor</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>content</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1003, "name": "__getBodyStyleToExport"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the <span class=\"caps\">CSS</span> styles which should be exported as a <span class=\"caps\">CSS</span> string.\nThis prevents that styles which are only for internal use appear in the\nresult (e.g. overflow settings).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> string of body styles to export</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1445, "name": "__getElementStyleAsString"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to check for styles</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns style attribute as string of a given element</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Complete style attribute as string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1, "name": "__getRangeContents"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "range"}, "type": "param", "children": [{"attributes": {"text": "<p>Native range object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Range"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Browser-specific implementation to get the current range contents</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>range contents</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 839, "name": "__initDocumentSkeletonParts"}, "type": "method", "children": [{"attributes": {"text": "<p>Initial content which is written dynamically into the iframe&#8217;s document</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1859, "name": "__insertWebkitLineBreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Helper function which inserts an linebreak at the selection.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1, "name": "__isContentAvailable"}, "type": "method", "children": [{"attributes": {"text": "<p>Checks whether content is available</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1, "name": "__isFocusNodeAnElement"}, "type": "method", "children": [{"attributes": {"text": "<p>Check the selection focus node if it&#8217;s an element.\nUsed a paragraph handling &#8211; if the focus node is an\nelement it&#8217;s not necessary to intercept the paragraph handling.</p>\n\n<p><span class=\"caps\">ATTENTION</span>: Currently only implemented for Gecko</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>selection focus node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1, "name": "__isSelectionWithinWordBoundary"}, "type": "method", "children": [{"attributes": {"text": "<p>Checks if the cursor is within a word boundary.\n<span class=\"caps\">ATTENTION</span>: Currently only implemented for Gecko</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>within word boundary</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 1633, "name": "__processStackedCommands"}, "type": "method", "children": [{"attributes": {"text": "<p>Process the stacked commands if available.\nThis feature is necessary at startup when the command manager is yet\nnot ready to execute the commands after the initialization.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1514, "name": "__renderContent"}, "type": "method", "children": [{"attributes": {"text": "<p>Opens a new document and sets the content (if available)</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1, "name": "__resetEditorToValidState"}, "type": "method", "children": [{"attributes": {"text": "<p>Called when the iframes is loaded and the HtmlArea is in the &#8220;invalid&#8221;\nstate. Re-initializes the HtmlArea and fires the {@link qx.bom.htmlarea.HtmlArea#readyAfterInvalid}\nevent to offer a time moment for the application developer to execute\ncommands after the re-location.</p>\n\n<p>Only implemented for Gecko browser.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1, "name": "__resetToDefaultContentAndSelect"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the content and selects the default focus node</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1655, "name": "__setDesignMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "onOrOff"}, "type": "param", "children": [{"attributes": {"text": "<p>Set or unset the design mode on the current document</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the designMode of the document</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 3033, "name": "__startExamineCursorContext"}, "type": "method", "children": [{"attributes": {"text": "<p>Wrapper method to examine the current context</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 1220, "name": "__waitForDocumentReady"}, "type": "method", "children": [{"attributes": {"text": "<p>should be removed if someone find a better way to ensure that the document\nis ready in IE6</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 831, "name": "_addIframeLoadListener"}, "type": "method", "children": [{"attributes": {"text": "<p>Adds the &#8220;load&#8221; listener to the iframe.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1148, "name": "_cleanupWord"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "word"}, "type": "param", "children": [{"attributes": {"text": "<p>Word to clean</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Cleaning up a given word (removing <span class=\"caps\">HTML</span> code)</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 789, "name": "_createAndAddIframe"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "uri"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">URI</span> of the iframe</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates an iframe element with the given <span class=\"caps\">URI</span> and adds it to\nthe container element.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1177, "name": "_fetchTextNodes"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>element to retrieve all text nodes from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>*** IN <span class=\"caps\">DEVELOPMENT</span>! ***\nHelper method for returning all text nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Text nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 812, "name": "_getIframeDocument"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the document of the iframe.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 822, "name": "_getIframeWindow"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the window of the iframe.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "line": 2319, "name": "_handleBlurEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Eventlistener for blur events</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 2399, "name": "_handleContextMenuEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>If the property {@link #nativeContextMenu} is set to <code>false</code> this handler method\nstops the browser from displaying the native context menu and fires an own event for the\napplication developers to position their own (qooxdoo) contextmenu.</p>\n\n<p>Fires a data event with the following data:</p>\n\n<ul>\n<li>x &#8211; absolute x coordinate<br />\n  * y &#8211; absolute y coordinate<br />\n  * relX &#8211; relative x coordinate<br />\n  * relY &#8211; relative y coordinate<br />\n  * target &#8211; <span class=\"caps\">DOM</span> element target</li>\n</ul>\n\n<p>Otherwise the native browser contextmenu is shown as usual.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 2294, "name": "_handleFocusEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Eventlistener for focus events</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 2329, "name": "_handleFocusOutEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Eventlistener for focusout events &#8211; dispatched before &#8220;blur&#8221;</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1919, "name": "_handleKeyPress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>All keyPress events are delegated to this method</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1776, "name": "_handleKeyUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>All keyUp events are delegated to this method</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 2348, "name": "_handleMouseUpOnBody"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>mouse event instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Eventlistener for all mouse events.\nThis method is invoked for mshtml on &#8220;click&#8221; events and\non &#8220;mouseup&#8221; events for all others.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1, "name": "_handleMouseUpOnDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>mouse event instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the user has performed a selection and released  the mouse\nbutton outside of the editor. If so the body element is re-activated\nto receive the keypress events correctly.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1260, "name": "_loaded"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Is executed when event &#8220;load&#8221; is fired</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1297, "name": "_onDocumentIsReady"}, "type": "method", "children": [{"attributes": {"text": "<p>Initializes the command manager, sets the document editable, renders\nthe content and adds a needed event listeners when the document is ready\nfor it.\nAfter the successful startup the &#8220;ready&#8221; event is thrown.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 2849, "name": "_selectElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to select</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convenient function to select an element. The &#8220;set&#8221; method of qx.bom.Selection is not\nsufficient here. It does select the element, but does not show the caret.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "name": "focusContent"}, "type": "method", "children": [{"attributes": {"text": "<p>Can be used to set the user focus to the content. Also used when the &#8220;TAB&#8221; key is used to\ntab into the component. This method is also called by the {@link qx.ui.embed.HtmlArea} widget.</p>"}, "type": "desc"}]}, {"attributes": {"line": 882, "name": "getCommandManager"}, "type": "method", "children": [{"attributes": {"text": "<p>Getter for command manager.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>manager instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.htmlarea.manager.Command"}, "type": "entry"}, {"attributes": {"type": "qx.bom.htmlarea.manager.UndoRedo"}, "type": "entry"}]}]}]}, {"attributes": {"line": 980, "name": "getCompleteHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the complete content of the editor</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 970, "name": "getComputedValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "name": "skipHtmlEncoding"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the html encoding of text nodes should be skipped</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Getting the computed value of the editor.\nThis method returns the current value of the editor traversing\nthe elements below the body element. With this method you always\nget the current value, but it is much more expensive. So use it\ncarefully.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>computed value of the editor</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1046, "name": "getContentBody"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the body of the document</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1034, "name": "getContentDocument"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the document of the iframe</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>contentType</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>contentType</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1059, "name": "getContentWindow"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the window of the iframe</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>window node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"line": 3025, "name": "getContextInformation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the information about the current context (focusNode). It&#8217;s a\nmap with information about &#8220;bold&#8221;, &#8220;italic&#8221;, &#8220;underline&#8221;, etc.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>formatting information about the focusNode</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDefaultFontFamily", "fromProperty": "defaultFontFamily"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>defaultFontFamily</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontFamily}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>defaultFontFamily</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getDefaultFontSize", "fromProperty": "defaultFontSize"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>defaultFontSize</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontSize}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>defaultFontSize</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1739, "name": "getEditable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the document is in editable mode</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "name": "getFocusNode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the node where the selection ends</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Focus node or null if no range is available</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2807, "name": "getHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "false", "name": "skipHtmlEncoding"}, "type": "param", "children": [{"attributes": {"text": "<p>whether the html encoding of text nodes should be skipped</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get html content (call own recursive method)</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>current content of the editor as <span class=\"caps\">XHTML</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 873, "name": "getIframeObject"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the iframe object which is used to render the content</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>iframe <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>insertLinebreakOnCtrlEnter</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>insertParagraphOnLinebreak</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>messengerMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getNativeContextMenu", "fromProperty": "nativeContextMenu"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>nativeContextMenu</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #nativeContextMenu}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>nativeContextMenu</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>postProcess</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>postProcess</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 3409, "name": "getRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the range of the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Range object or null</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Range"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "name": "getSavedRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the current stored range.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>range object or null</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Range"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 3263, "name": "getSelectedHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the content of the actual range as text</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>selected text</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1165, "name": "getTextNodes"}, "type": "method", "children": [{"attributes": {"text": "<p>*** IN <span class=\"caps\">DEVELOPMENT</span>! ***\nReturns all text nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Text nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>useUndoRedo</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 955, "name": "getValue"}, "type": "method", "children": [{"attributes": {"text": "<p>Getting the value of the editor.\n<b>Attention</b>: The content of the editor is synced\nat focus/blur events, but not on every input. This method\nis not delivering the current content in a stable manner.\nTo get the current value of the editor use the {@link #getComputedValue}\nmethod instead.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>value of the editor</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1073, "name": "getWords"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the node element where the text should be retrieved from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns all the words that are contained in a node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>all the words.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"line": 1111, "name": "getWordsWithElement"}, "type": "method", "children": [{"attributes": {"text": "<p>*** IN <span class=\"caps\">DEVELOPMENT</span>! ***\nReturns all words</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>all words</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>contentType</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>contentType</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initDefaultFontFamily", "fromProperty": "defaultFontFamily"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>defaultFontFamily</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>defaultFontFamily</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontFamily}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initDefaultFontSize", "fromProperty": "defaultFontSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>defaultFontSize</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>defaultFontSize</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontSize}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>insertLinebreakOnCtrlEnter</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>insertLinebreakOnCtrlEnter</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>insertParagraphOnLinebreak</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>insertParagraphOnLinebreak</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>messengerMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>messengerMode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initNativeContextMenu", "fromProperty": "nativeContextMenu"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>nativeContextMenu</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>nativeContextMenu</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #nativeContextMenu}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>postProcess</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>postProcess</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>useUndoRedo</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>useUndoRedo</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2645, "name": "insertHorizontalRuler"}, "type": "method", "children": [{"attributes": {"text": "<p>Inserts a horizontal ruler</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2451, "name": "insertHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>html content</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts html content on the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2667, "name": "insertHyperLink"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">URL</span> for the image to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts a hyperlink</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2656, "name": "insertImage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>Map of <span class=\"caps\">HTML</span> attributes to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an image</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2605, "name": "insertIndent"}, "type": "method", "children": [{"attributes": {"text": "<p>Indents the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2625, "name": "insertOrderedList"}, "type": "method", "children": [{"attributes": {"text": "<p>Inserts an ordered list</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2615, "name": "insertOutdent"}, "type": "method", "children": [{"attributes": {"text": "<p>Outdents the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2635, "name": "insertUnorderedList"}, "type": "method", "children": [{"attributes": {"text": "<p>Inserts an unordered list</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "name": "invalidateEditor"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the editor for all gecko browsers into the state &#8220;invalid&#8221; to be\nable to re-initialize the editor with the next load of the iframe.</p>\n\n<p>This &#8220;invalid&#8221; state is necessary whenever the whole HtmlArea high-level\nwidget is moved around to another container.</p>\n\n<p>Only implemented for Gecko browser.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1749, "name": "isEditable"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the document is in editable mode</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>insertLinebreakOnCtrlEnter</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>insertParagraphOnLinebreak</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2440, "name": "isLoaded"}, "type": "method", "children": [{"attributes": {"text": "<p>Service method to check if the component is already loaded.\nOverrides the base method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>messengerMode</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isNativeContextMenu", "fromProperty": "nativeContextMenu"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>nativeContextMenu</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #nativeContextMenu}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1286, "name": "isReady"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the editor is ready to accept commands etc.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>ready or not</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>useUndoRedo</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2750, "name": "redo"}, "type": "method", "children": [{"attributes": {"text": "<p>Redo last undo</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the redo command was executed successfully or {@link #useUndoRedo} is inactive"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2676, "name": "removeBackgroundColor"}, "type": "method", "children": [{"attributes": {"text": "<p>Alias for setBackgroundColor(&#8220;transparent&#8221;);</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>if succeeded</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2697, "name": "removeBackgroundImage"}, "type": "method", "children": [{"attributes": {"text": "<p>Alias for setBackgroundImage(null);</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>if succeeded</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2463, "name": "removeFormat"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all formatting styles on the current selection content and resets\nthe font family and size to the default ones. See {@link #defaultFontSize}\nand {@link #defaultFontFamily}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>contentType</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetDefaultFontFamily", "fromProperty": "defaultFontFamily"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>defaultFontFamily</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontFamily}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetDefaultFontSize", "fromProperty": "defaultFontSize"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>defaultFontSize</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontSize}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 2770, "name": "resetHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the content of the editor</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>messengerMode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetNativeContextMenu", "fromProperty": "nativeContextMenu"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>nativeContextMenu</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #nativeContextMenu}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>postProcess</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "name": "resetSavedRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the current saved range.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>useUndoRedo</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 1, "name": "saveRange"}, "type": "method", "children": [{"attributes": {"text": "<p>Saves the current range to let the next command operate on this range.\nCurrently only interesting for IE browsers, since they loose the range /\nselection whenever an element is clicked which need to have a focus (e.g.\na textfield widget).</p>\n\n<p><strong><span class=\"caps\">NOTE</span>:</strong> the next executed command will reset this range.</p>"}, "type": "desc"}]}, {"attributes": {"line": 2725, "name": "selectAll"}, "type": "method", "children": [{"attributes": {"text": "<p>Selects the whole content</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2687, "name": "setBackgroundColor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>color</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the background color of the editor</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>if succeeded</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2715, "name": "setBackgroundImage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>url of the background image to set</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "repeat"}, "type": "param", "children": [{"attributes": {"text": "<p>repeat mode. Possible values are &#8220;repeat|repeat-x|repeat-y|no-repeat&#8221;. Default value is &#8220;no-repeat&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "Array", "name": "position"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of the background image. Possible values are &#8221;|top|bottom|center|left|right|right top|left top|left bottom|right bottom&#8221; or an array consisting of two values for x and y coordinate. Both values have to define the unit e.g. &#8220;px&#8221; or &#8221;%&#8221;. Default value is &#8220;top&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts an background image</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2480, "name": "setBold"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to bold font style</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setContentType", "fromProperty": "contentType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>contentType</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>contentType</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #contentType}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setDefaultFontFamily", "fromProperty": "defaultFontFamily"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>defaultFontFamily</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>defaultFontFamily</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontFamily}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setDefaultFontSize", "fromProperty": "defaultFontSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>defaultFontSize</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>defaultFontSize</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #defaultFontSize}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1692, "name": "setEditable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Current value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the document is in editable mode</p>"}, "type": "desc"}, {"attributes": {}, "type": "throws", "children": [{"attributes": {"text": "<p>Failed to enable rich edit functionality</p>", "type": "Error"}, "type": "desc"}]}]}, {"attributes": {"line": 2533, "name": "setFontFamily"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Font family</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified font family</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2522, "name": "setFontSize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Font size</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified font size</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>insertLinebreakOnCtrlEnter</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>insertParagraphOnLinebreak</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2490, "name": "setItalic"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to italic font style</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2575, "name": "setJustifyCenter"}, "type": "method", "children": [{"attributes": {"text": "<p>Center-justifies the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2595, "name": "setJustifyFull"}, "type": "method", "children": [{"attributes": {"text": "<p>Full-justifies the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2565, "name": "setJustifyLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Left-justifies the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2585, "name": "setJustifyRight"}, "type": "method", "children": [{"attributes": {"text": "<p>Right-justifies the current selection</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>messengerMode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setNativeContextMenu", "fromProperty": "nativeContextMenu"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>nativeContextMenu</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>nativeContextMenu</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #nativeContextMenu}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPostProcess", "fromProperty": "postProcess"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>postProcess</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>postProcess</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #postProcess}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2511, "name": "setStrikeThrough"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to strikethrough font style</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2555, "name": "setTextBackgroundColor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Color value (supported are Hex,</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified background color</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2544, "name": "setTextColor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Color value (supported are Hex,</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the current selection content to the specified font color</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2500, "name": "setUnderline"}, "type": "method", "children": [{"attributes": {"text": "<p>Sets the current selection content to underline font style</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Success of operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>useUndoRedo</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 892, "name": "setValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new content to set</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Setting the value of the editor</p>"}, "type": "desc"}]}, {"attributes": {"name": "toggleInsertLinebreakOnCtrlEnter", "fromProperty": "insertLinebreakOnCtrlEnter"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>insertLinebreakOnCtrlEnter</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertLinebreakOnCtrlEnter}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleInsertParagraphOnLinebreak", "fromProperty": "insertParagraphOnLinebreak"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>insertParagraphOnLinebreak</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #insertParagraphOnLinebreak}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleMessengerMode", "fromProperty": "messengerMode"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>messengerMode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #messengerMode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleNativeContextMenu", "fromProperty": "nativeContextMenu"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>nativeContextMenu</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #nativeContextMenu}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleUseUndoRedo", "fromProperty": "useUndoRedo"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>useUndoRedo</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #useUndoRedo}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 2735, "name": "undo"}, "type": "method", "children": [{"attributes": {"text": "<p>Undo last operation</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the undo command was executed successfully or {@link #useUndoRedo} is inactive"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "String", "defaultValue": "\"xhtml\"", "name": "contentType", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Selected content type. Currently only <span class=\"caps\">XHTML</span> is supported.</p>"}, "type": "desc"}]}, {"attributes": {"check": "String", "defaultValue": "\"Verdana\"", "name": "defaultFontFamily", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Default font family to use when e.g. user removes all content</p>"}, "type": "desc"}]}, {"attributes": {"check": "Integer", "defaultValue": "4", "name": "defaultFontSize", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Default font size to use when e.g. user removes all content</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "true", "name": "insertLinebreakOnCtrlEnter", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>If true we add a linebreak after control+enter</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "true", "name": "insertParagraphOnLinebreak", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Toggles whether a p element is inserted on each line break or not.\nA &#8220;normal&#8221; linebreak can be achieved using the combination &#8220;Shift+Enter&#8221; anyway</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "false", "name": "messengerMode", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>If turned on the editor acts like a messenger widget e.g. if one hits the Enter key the current content gets\noutputted (via a DataEvent) and the editor clears his content</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "false", "name": "nativeContextMenu", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Whether to use the native contextmenu or to block it and use own event</p>"}, "type": "desc"}]}, {"attributes": {"check": "Function", "allowNull": "true", "defaultValue": "null", "name": "postProcess", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Function to use in postProcessing html. See getHtml() and __getHtml().</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "true", "name": "useUndoRedo", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Toggles whether to use Undo/Redo</p>"}, "type": "desc"}]}]}]}