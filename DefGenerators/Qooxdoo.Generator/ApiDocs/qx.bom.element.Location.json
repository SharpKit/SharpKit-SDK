{"attributes": {"fullName": "qx.bom.element.Location", "packageName": "qx.bom.element", "isStatic": true, "type": "bootstrap", "name": "Location"}, "type": "class", "children": [{"attributes": {"text": "<p>Query the location of an arbitrary <span class=\"caps\">DOM</span> element in relation to its top\nlevel body element. Works in all major browsers:</p>\n\n<ul>\n<li>Mozilla 1.5 + 2.0</li>\n<li>Internet Explorer 6.0 + 7.0 (both standard &amp; quirks mode)</li>\n<li>Opera 9.2</li>\n<li>Safari 3.0 beta</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "line": 1, "isStatic": true, "name": "__computeOffset"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the sum of all offsets of the given element node.</p>\n\n<p>Traditionally this is a loop which goes up the whole parent tree\nand sums up all found offsets.</p>\n\n<p>But both <code>mshtml</code> and <code>gecko >= 1.9</code> support\n<code>getBoundingClientRect</code> which allows a\nmuch faster access to the offset position.</p>\n\n<p>Please note: When gecko 1.9 does not use the <code>getBoundingClientRect</code>\nimplementation, and therefore use the traditional offset calculation\nthe gecko 1.9 fix in <code>__computeBody</code> must not be applied.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map which contains the <code>left</code> and <code>top</code> offsets</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 82, "isStatic": true, "name": "__computeScroll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the scroll offset of the given element relative to the document\n<code>body</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map which contains the <code>left</code> and <code>top</code> scroll offsets</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 437, "isStatic": true, "name": "__getBodyLocation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "body"}, "type": "param", "children": [{"attributes": {"text": "<p>The body element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the location of the body element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>map with the keys <code>left</code> and <code>top</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 70, "isStatic": true, "name": "__num"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>Style property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Queries a style property for the given element and parses it to an integer value</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Value of given style property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 58, "isStatic": true, "name": "__style"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "style"}, "type": "param", "children": [{"attributes": {"text": "<p>Style property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Queries a style property for the given element</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Value of given style property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 349, "isStatic": true, "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "box", "name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>A supported option. See comment above.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the location of the given element in context of\nthe document dimensions.</p>\n\n<p>Supported modes:</p>\n\n<ul>\n<li><code>margin</code>: Calculate from the margin box of the element (bigger than the visual appearance: including margins of given element)</li>\n<li><code>box</code>: Calculates the offset box of the element (default, uses the same size as visible)</li>\n<li><code>border</code>: Calculate the border box (useful to align to border edges of two elements).</li>\n<li><code>scroll</code>: Calculate the scroll box (relevant for absolute positioned content).</li>\n<li><code>padding</code>: Calculate the padding box (relevant for static/relative positioned content).</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a map with <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code> which contains the distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 515, "isStatic": true, "name": "getBottom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>A supported option. See comment above.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the location of the given element in context of\nthe document dimensions. For supported modes please\nhave a look at the {@link qx.bom.element.Location#get} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The bottom distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 470, "isStatic": true, "name": "getLeft"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>A supported option. See comment above.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the location of the given element in context of\nthe document dimensions. For supported modes please\nhave a look at the {@link qx.bom.element.Location#get} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The left distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 563, "isStatic": true, "name": "getOffsetParent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>Element to query for offset parent</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Detects the offset parent of the given element</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Detected offset parent</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 552, "isStatic": true, "name": "getPosition"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the distance between the given element to its offset parent.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a map with <code>left</code> and <code>top</code> which contains the distance of the elements from each other.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 531, "isStatic": true, "name": "getRelative"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem1"}, "type": "param", "children": [{"attributes": {"text": "<p>First element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "elem2"}, "type": "param", "children": [{"attributes": {"text": "<p>Second element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "mode1"}, "type": "param", "children": [{"attributes": {"text": "<p>Mode for first element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "mode2"}, "type": "param", "children": [{"attributes": {"text": "<p>Mode for second element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the distance between two <span class=\"caps\">DOM</span> elements. For supported modes please\nhave a look at the {@link qx.bom.element.Location#get} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a map with <code>left</code> and <code>top</code> which contains the distance of the elements from each other.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 500, "isStatic": true, "name": "getRight"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>A supported option. See comment above.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the location of the given element in context of\nthe document dimensions. For supported modes please\nhave a look at the {@link qx.bom.element.Location#get} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The right distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 485, "isStatic": true, "name": "getTop"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "mode"}, "type": "param", "children": [{"attributes": {"text": "<p>A supported option. See comment above.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Computes the location of the given element in context of\nthe document dimensions. For supported modes please\nhave a look at the {@link qx.bom.element.Location#get} method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The top distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "name": "__computeBody"}, "type": "constant", "children": [{"attributes": {"text": "<p>Computes the offset of the given element relative to the document\n<code>body</code>.</p>"}, "type": "desc"}]}]}]}