{"attributes": {"name": "DragDrop", "packageName": "qx.event.handler", "superClass": "qx.core.Object", "fullName": "qx.event.handler.DragDrop", "type": "class", "interfaces": "qx.event.IEventHandler"}, "type": "class", "children": [{"attributes": {"text": "<p>Event handler, which supports drag events on <span class=\"caps\">DOM</span> elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 48, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "manager"}, "type": "param", "children": [{"attributes": {"text": "<p>Event manager for the window to use</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.Manager"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"name": "PRIORITY"}, "type": "constant", "children": [{"attributes": {"text": "<p>{Integer} Priority of this handler</p>"}, "type": "desc"}]}, {"attributes": {"type": "Boolean", "name": "IGNORE_CAN_HANDLE", "value": "true"}, "type": "constant", "children": [{"attributes": {"text": "<p>{Integer} Whether the method &#8220;canHandleEvent&#8221; must be called</p>"}, "type": "desc"}]}, {"attributes": {"name": "SUPPORTED_TYPES"}, "type": "constant", "children": [{"attributes": {"text": "<p>{Map} Supported event types</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 417, "name": "__clearInit"}, "type": "method", "children": [{"attributes": {"text": "<p>Clean up event listener and structures when a drag was ended without ever starting into session mode\n(e.g. not reaching the required offset before)</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 291, "name": "__detectAction"}, "type": "method", "children": [{"attributes": {"text": "<p>Detects the current action and stores it under the private\nfield <code>__currentAction</code>. Also fires the event\n<code>dragchange</code> on every modification.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 375, "name": "__findDraggable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Finds next draggable parent of the given element. Maybe the element itself as well.</p>\n\n<p>Looks for the attribute <code>qxDraggable</code> with the value <code>on</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The next parent element which is draggable. May also be <code>null</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 398, "name": "__findDroppable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "elem"}, "type": "param", "children": [{"attributes": {"text": "<p>The element to query</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Finds next droppable parent of the given element. Maybe the element itself as well.</p>\n\n<p>Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The next parent element which is droppable. May also be <code>null</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 354, "name": "__fireEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Target to fire on</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "relatedTarget"}, "type": "param", "children": [{"attributes": {"text": "<p>Related target, i.e. drag or drop target depending on the drag event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "cancelable"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether the event is cancelable</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "original"}, "type": "param", "children": [{"attributes": {"text": "<p>Original mouse event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Wrapper for {@link qx.event.Registration#fireEvent} for drag&amp;drop events\nneeded in this class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the event's default behavior was not prevented"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 277, "name": "__rebuildStructures"}, "type": "method", "children": [{"attributes": {"text": "<p>Rebuilds the internal data storage used during a drag&amp;drop session</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 495, "name": "_onKeyDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>keydown</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 539, "name": "_onKeyPress"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>keypress</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 517, "name": "_onKeyUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.KeySequence"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>keyup</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 555, "name": "_onMouseDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>mousedown</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 608, "name": "_onMouseMove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>mousemove</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 679, "name": "_onMouseOut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>mouseout</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 659, "name": "_onMouseOver"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>mouseover</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 586, "name": "_onMouseUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Mouse"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for root&#8217;s <code>mouseup</code> event</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 485, "name": "_onWindowBlur"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>Event object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event listener for window&#8217;s <code>blur</code> event</p>"}, "type": "desc"}]}, {"attributes": {"line": 166, "name": "addAction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "action"}, "type": "param", "children": [{"attributes": {"text": "<p>The action to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a supported action. One of <code>move</code>,\n<code>copy</code> or <code>alias</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 243, "name": "addData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Any valid type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>Any data to store</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds data of the given type to the internal storage. The data\nis available until the <code>dragend</code> event is fired.</p>"}, "type": "desc"}]}, {"attributes": {"line": 156, "name": "addType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The type to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a supported type</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 127, "name": "canHandleEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}]}]}, {"attributes": {"line": 437, "name": "clearSession"}, "type": "method", "children": [{"attributes": {"text": "<p>Cleans up a drag&amp;drop session when <code>dragstart</code> was fired before.</p>"}, "type": "desc"}]}, {"attributes": {"line": 231, "name": "getCurrentAction"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the currently selected action (by user keyboard modifiers)</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>One of <code>move</code>, <code>copy</code> or <code>alias</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 253, "name": "getCurrentType"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the type which was requested last.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The last requested data type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 201, "name": "getData"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Any supported type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the data of the given type during the <code>drop</code> event\non the drop target. This method fires a <code>droprequest</code> at\nthe drag target which should be answered by calls to {@link #addData}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The result data</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 263, "name": "isSessionActive"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns if a drag session is currently active</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>active drag session</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 131, "name": "registerEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}, {"attributes": {"name": "capture"}, "type": "param"}]}]}, {"attributes": {"line": 188, "name": "supportsAction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Any type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the current drag target supports the given action</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the action is supported</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 177, "name": "supportsType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Any type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the current drag target supports the given type</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the type is supported</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"docFrom": "qx.event.IEventHandler", "line": 137, "name": "unregisterEvent"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param"}, {"attributes": {"name": "type"}, "type": "param"}, {"attributes": {"name": "capture"}, "type": "param"}]}]}]}]}