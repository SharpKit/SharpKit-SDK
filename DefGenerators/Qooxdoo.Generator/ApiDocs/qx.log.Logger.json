{"attributes": {"fullName": "qx.log.Logger", "packageName": "qx.log", "isStatic": true, "type": "class", "name": "Logger"}, "type": "class", "children": [{"attributes": {"text": "<p>Main qooxdoo logging class.</p>\n\n<p>Used as central logging feature by qx.core.Object.</p>\n\n<p>Extremely modular and lightweight to support logging at bootstrap and\nat shutdown as well.</p>\n\n<ul>\n<li>Supports dynamic appenders to push the output to the user</li>\n<li>Supports buffering of the last 50 messages (configurable)</li>\n<li>Supports different debug levels (&#8220;debug&#8221;, &#8220;info&#8221;, &#8220;warn&#8221; or &#8220;error&#8221;)</li>\n<li>Simple data serialization for incoming messages</li>\n</ul>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "line": 475, "isStatic": true, "name": "__detect"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Incoming value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Detects the type of the variable given.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Type of the incoming value. Possible values: &#8220;undefined&#8221;, &#8220;null&#8221;, &#8220;boolean&#8221;, &#8220;number&#8221;, &#8220;string&#8221;, &#8220;function&#8221;, &#8220;array&#8221;, &#8220;error&#8221;, &#8220;map&#8221;, &#8220;class&#8221;, &#8220;instance&#8221;, &#8220;node&#8221;, &#8220;stringify&#8221;, &#8220;unknown&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 416, "isStatic": true, "name": "__log"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "level"}, "type": "param", "children": [{"attributes": {"text": "<p>One of &#8220;debug&#8221;, &#8220;info&#8221;, &#8220;warn&#8221; or &#8220;error&#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>List of other arguments, where the first is taken as the context object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal logging main routine.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 530, "isStatic": true, "name": "__serialize"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Incoming value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "deep"}, "type": "param", "children": [{"attributes": {"text": "<p>Whether arrays and maps should be serialized for a limited number of items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Serializes the incoming value. If it is a singular value, the result is\na simple string. For an array or a map the result can also be a\nserialized string of a limited number of individual items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Contains the keys <code>type</code>, <code>text</code> and <code>trace</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 382, "isStatic": true, "name": "clear"}, "type": "method", "children": [{"attributes": {"text": "<p>Deletes the current buffer. Does not influence message handling of the\nconnected appenders.</p>"}, "type": "desc"}]}, {"attributes": {"line": 170, "isStatic": true, "name": "debug"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;debug&#8221; to the logger.</p>"}, "type": "desc"}]}, {"attributes": {"line": 255, "isStatic": true, "name": "deprecatedClassWarning"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>reference to the deprecated class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional message to be printed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints a class deprecation warning and a stack trace if the setting\n<code>qx.debug</code> is set to <code>on</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 321, "isStatic": true, "name": "deprecatedConstantWarning"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>The class the constant is attached to.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "constant"}, "type": "param", "children": [{"attributes": {"text": "<p>The name of the constant as string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional message to be printed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints a constant deprecation warning and a stacktrace if the setting\n<code>qx.debug</code> is set to <code>on</code> <span class=\"caps\">AND</span> the browser supports\n<i>defineGetter</i>!</p>"}, "type": "desc"}]}, {"attributes": {"line": 277, "isStatic": true, "name": "deprecatedEventWarning"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>reference to the deprecated class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "event"}, "type": "param", "children": [{"attributes": {"text": "<p>deprecated event name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional message to be printed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints an event deprecation warning and a stack trace if the setting\n<code>qx.debug</code> is set to <code>on</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 234, "isStatic": true, "name": "deprecatedMethodWarning"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fcn"}, "type": "param", "children": [{"attributes": {"text": "<p>reference to the deprecated function. This is arguments.callee if the calling method is to be deprecated.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional message to be printed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints a method deprecation warning and a stack trace if the setting\n<code>qx.debug</code> is set to <code>on</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 298, "isStatic": true, "name": "deprecatedMixinWarning"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>reference to the deprecated mixin.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional message to be printed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints a mixin deprecation warning and a stack trace if the setting\n<code>qx.debug</code> is set to <code>on</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 353, "isStatic": true, "name": "deprecateMethodOverriding"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Instance to check for overriding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.core.Object"}, "type": "entry"}]}]}, {"attributes": {"name": "baseclass"}, "type": "param", "children": [{"attributes": {"text": "<p>The baseclass as starting point.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "methodName"}, "type": "param", "children": [{"attributes": {"text": "<p>The method name which is deprecated for overriding.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "msg"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional message to be printed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints a deprecation waring and a stacktrace when a subclass overrides\nthe passed method name. The deprecation is only printed if the setting\n<code>qx.debug</code> is set to <code>on</code>.</p>"}, "type": "desc"}]}, {"attributes": {"line": 209, "isStatic": true, "name": "error"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;error&#8221; to the logger.</p>"}, "type": "desc"}]}, {"attributes": {"line": 65, "isStatic": true, "name": "getLevel"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the currently configured minimum log level required for new\nmessages.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Debug level</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 86, "isStatic": true, "name": "getTreshold"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the currently configured number of messages to be kept in the\nbuffer.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Treshold value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"line": 183, "isStatic": true, "name": "info"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;info&#8221; to the logger.</p>"}, "type": "desc"}]}, {"attributes": {"line": 114, "isStatic": true, "name": "register"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "appender"}, "type": "param", "children": [{"attributes": {"text": "<p>A static appender class supporting at least a <code>process()</code> method to handle incoming messages.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers the given appender and inserts the last cached messages.</p>"}, "type": "desc"}]}, {"attributes": {"line": 54, "isStatic": true, "name": "setLevel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>One of &#8220;debug&#8221;, &#8220;info&#8221;, &#8220;warn&#8221; or &#8220;error&#8221;.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Configures the minimum log level required for new messages.</p>"}, "type": "desc"}]}, {"attributes": {"line": 75, "isStatic": true, "name": "setTreshold"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Any positive integer</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Configures the number of messages to be kept in the buffer.</p>"}, "type": "desc"}]}, {"attributes": {"line": 219, "isStatic": true, "name": "trace"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints the current stack trace at level &#8220;info&#8221;</p>"}, "type": "desc"}]}, {"attributes": {"line": 141, "isStatic": true, "name": "unregister"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "appender"}, "type": "param", "children": [{"attributes": {"text": "<p>A static appender class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters the given appender</p>"}, "type": "desc"}]}, {"attributes": {"line": 196, "isStatic": true, "name": "warn"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may have any JavaScript data type. All data is serialized immediately and does not keep references to other objects.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;warn&#8221; to the logger.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "type": "String", "name": "__level", "value": "debug"}, "type": "constant"}, {"attributes": {"access": "private", "name": "__buffer"}, "type": "constant", "children": [{"attributes": {"text": "<p>{qx.log.appender.RingBuffer} Message buffer of previously fired messages.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__levels"}, "type": "constant", "children": [{"attributes": {"text": "<p>{Map} Numeric translation of log levels</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__appender"}, "type": "constant", "children": [{"attributes": {"text": "<p>{Map} Map of all known appenders by ID</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "type": "Number", "name": "__id", "value": "0"}, "type": "constant", "children": [{"attributes": {"text": "<p>{Integer} Last free appender ID</p>"}, "type": "desc"}]}]}]}