{"attributes": {"name": "qxWeb", "packageName": "", "superClass": "qx.type.BaseArray", "childClasses": "q", "fullName": "qxWeb", "type": "bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p>The Core module&#8217;s responsibility is to query the <span class=\"caps\">DOM</span> for elements and offer\nthese elements as a collection. The Core module itself does not offer any methods to\nwork with the collection. These methods are added by the other included modules,\nsuch as Manipulating or Attributes.</p>\n\n<p>Core also provides the plugin <span class=\"caps\">API</span> which allows modules to attach either\nstatic functions to the global <code>q</code> object or define methods on the\ncollection it returns.</p>\n\n<p>By default, the core module is assigned to a global module named <code>q</code>.\nIn case <code>q</code> is already defined, the name <code>qxWeb</code>\nis used instead.</p>\n\n<p>For further details, take a look at the documentation in the\n<a href=\"http://manual.qooxdoo.org/2.1.1/pages/website.html\" target=\"_blank\">user manual</a>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 86, "isStatic": true, "name": "$attach"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "module"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the methods to attach.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 123, "isStatic": true, "name": "$attachInit"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "init"}, "type": "param", "children": [{"attributes": {"text": "<p>The initialization method for a module.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new initialization\nmethods to {@link q} which will be called when a new collection is\ncreated.</p>"}, "type": "desc"}]}, {"attributes": {"line": 104, "isStatic": true, "name": "$attachStatic"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "module"}, "type": "param", "children": [{"attributes": {"text": "<p>A map containing the methods to attach.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>This is an <span class=\"caps\">API</span> for module development and can be used to attach new methods\nto {@link q}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 56, "isStatic": true, "name": "$init"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arg"}, "type": "param", "children": [{"attributes": {"text": "<p>An array of Elements which will be initialized as {@link q}. All items in the array which are not either a window object or a node object will be ignored.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper to initialize collections.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new initialized collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 137, "isStatic": true, "name": "define"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the class. If null, the class will not be attached to a namespace.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "config"}, "type": "param", "children": [{"attributes": {"text": "<p>Class definition structure.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Define a new class using the qooxdoo class system.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The defined class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "get", "isStatic": true, "sourceClass": "qx.module.Cookie", "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the saved string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the string value of a cookie.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "cookie.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.Cookie"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns the saved string value if the cookie contains a value for the key, otherwise <code>null</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "unique", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "unique"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Incoming array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Recreates an array which is free of all duplicate elements from the original.\nThis method do not modifies the original array!\nKeep in mind that this methods deletes undefined indexes.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.unique", "targetClass": "qxWeb", "sourceMethod": "unique", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns a copy with no duplicates or the original array if no duplicates were found.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 550, "sourceMethod": "getDocument", "isStatic": true, "sourceClass": "qx.module.Traversing", "name": "getDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to get the document for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the owner document of the given node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getDocument", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The document of the given <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 361, "sourceMethod": "includeStylesheet", "isStatic": true, "sourceClass": "qx.module.Css", "name": "includeStylesheet"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "uri"}, "type": "param", "children": [{"attributes": {"text": "<p>The stylesheet&#8217;s <span class=\"caps\">URI</span></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "doc"}, "type": "param", "children": [{"attributes": {"text": "<p>Document to modify</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Document"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Includes a Stylesheet file</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "includeStylesheet", "sourceClass": "qx.module.Css"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "remove", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the registered listener.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a registered listener by the given id.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.remove", "targetClass": "qxWeb", "sourceMethod": "remove", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}]}, {"attributes": {"line": 34, "sourceMethod": "camelCase", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "camelCase"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>hyphenated string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a hyphenated string (separated by &#8217;-&#8217;) to camel case.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">q.string.camelCase(\"I-like-cookies\"); //returns \"ILikeCookies\"</pre>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.camelCase", "targetClass": "qxWeb", "sourceMethod": "camelCase", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>camelcase string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "firstUp", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "firstUp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to upper case.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.firstUp", "targetClass": "qxWeb", "sourceMethod": "firstUp", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with an upper case first character</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "removeAll", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "removeAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove all elements from the array</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.removeAll", "targetClass": "qxWeb", "sourceMethod": "removeAll", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>empty array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 409, "sourceMethod": "$getRegistry", "isStatic": true, "sourceClass": "qx.module.Event", "name": "$getRegistry"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all registered event normalizers</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$getEventNormalizationRegistry", "targetClass": "qxWeb", "sourceMethod": "$getRegistry", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of event types/normalizer functions</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "emit", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "emit"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "channel"}, "type": "param", "children": [{"attributes": {"text": "<p>The channel of the message.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "path"}, "type": "param", "children": [{"attributes": {"text": "<p>The path to execute</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>The given parameters that should be propagated</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "customData"}, "type": "param", "children": [{"attributes": {"text": "<p>The given custom data that should be propagated</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sends a message on the given channel and informs all matching route handlers.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.emit", "targetClass": "qxWeb", "sourceMethod": "emit", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "fromArguments", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "fromArguments"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>arguments object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>position to start from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert an arguments object into an array.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.fromArguments", "targetClass": "qxWeb", "sourceMethod": "fromArguments", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a newly created array (copy) with the content of the arguments object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 80, "sourceMethod": "getLocalKey", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getLocalKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index in the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the named key at the given index.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.getKey", "targetClass": "qxWeb", "sourceMethod": "getLocalKey", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The key stored at the given index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "startsWith", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "startsWith"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fullstr"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to search in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substr"}, "type": "param", "children": [{"attributes": {"text": "<p>the substring to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string starts with the given substring.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.startsWith", "targetClass": "qxWeb", "sourceMethod": "startsWith", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the string starts with the given substring</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 299, "sourceMethod": "ready", "isStatic": true, "sourceClass": "qx.module.Event", "name": "ready"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the given function once the document is ready.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "ready", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 538, "sourceMethod": "getWindow", "isStatic": true, "sourceClass": "qx.module.Traversing", "name": "getWindow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Node to inspect</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Node"}, "type": "entry"}, {"attributes": {"type": "Document"}, "type": "entry"}, {"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the DOM2 <code>defaultView</code> (window) for the given node.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getWindow", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <code>defaultView</code> for the given node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Window"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "$registerEventHook", "isInternal": true, "sourceMethod": "$registerEventHook", "access": "internal", "line": 424, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "registerHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event registration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "unregisterHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event deregistration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers an event hook for the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$registerEventHook", "targetClass": "qxWeb", "sourceMethod": "$registerEventHook", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 89, "sourceMethod": "clearLocal", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "clearLocal"}, "type": "method", "children": [{"attributes": {"text": "<p>Deletes every stored item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.clear", "targetClass": "qxWeb", "sourceMethod": "clearLocal", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "on", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "on"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "channel"}, "type": "param", "children": [{"attributes": {"text": "<p>The channel of the message.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The type, used for checking if the executed path matches.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "handler"}, "type": "param", "children": [{"attributes": {"text": "<p>The handler to call if the route matches the executed path.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the handler.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a route handler for the given channel. The route is called\nif the {@link #emit} method finds a match.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.on", "targetClass": "qxWeb", "sourceMethod": "on", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The id of the route used to remove the route.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "onAny", "isStatic": true, "sourceClass": "qx.module.Messaging", "name": "onAny"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>The route, used for checking if the executed path matches</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "RegExp"}, "type": "entry"}]}]}, {"attributes": {"name": "handler"}, "type": "param", "children": [{"attributes": {"text": "<p>The handler to call if the route matches the executed path</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the handler.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a handler for the &#8220;any&#8221; channel. The &#8220;any&#8221; channel is called\nbefore all other channels.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "messaging.onAny", "targetClass": "qxWeb", "sourceMethod": "onAny", "sourceClass": "qx.module.Messaging"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The id of the route used to remove the route.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "firstLow", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "firstLow"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to lower case.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.firstLow", "targetClass": "qxWeb", "sourceMethod": "firstLow", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with a lower case first character</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 526, "sourceMethod": "isDocument", "isStatic": true, "sourceClass": "qx.module.Traversing", "name": "isDocument"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> document object</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isDocument", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM document"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "set", "isStatic": true, "sourceClass": "qx.module.Cookie", "name": "set"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "expires"}, "type": "param", "children": [{"attributes": {"text": "<p>Expires directive value in days starting from now, or <code>null</code> if the cookie should be deleted when the browser is closed.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "path"}, "type": "param", "children": [{"attributes": {"text": "<p>Path value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "domain"}, "type": "param", "children": [{"attributes": {"text": "<p>Domain value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "secure"}, "type": "param", "children": [{"attributes": {"text": "<p>Secure flag.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the string value of a cookie.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "cookie.set", "targetClass": "qxWeb", "sourceMethod": "set", "sourceClass": "qx.module.Cookie"}, "type": "attachStatic"}]}, {"attributes": {"line": 158, "sourceMethod": "getSessionKey", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getSessionKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index in the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the named key at the given index.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.getKey", "targetClass": "qxWeb", "sourceMethod": "getSessionKey", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The key stored at the given index.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 167, "sourceMethod": "clearSession", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "clearSession"}, "type": "method", "children": [{"attributes": {"text": "<p>Deletes every stored item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.clear", "targetClass": "qxWeb", "sourceMethod": "clearSession", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 40, "sourceMethod": "create", "isStatic": true, "sourceClass": "qx.module.Manipulating", "name": "create"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string or <span class=\"caps\">DOM</span> element(s)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates a new collection from the given argument. This can either be an\n<span class=\"caps\">HTML</span> string, a single <span class=\"caps\">DOM</span> element or an array of elements</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "create", "sourceClass": "qx.module.Manipulating"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 49, "sourceMethod": "getLocalItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getLocalItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier to get the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.getItem", "targetClass": "qxWeb", "sourceMethod": "getLocalItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 388, "sourceMethod": "$unregisterNormalization", "isStatic": true, "sourceClass": "qx.module.Event", "name": "$unregisterNormalization"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "normalizer"}, "type": "param", "children": [{"attributes": {"text": "<p>Normalizer function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters a normalization function from the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$unregisterEventNormalization", "targetClass": "qxWeb", "sourceMethod": "$unregisterNormalization", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 70, "sourceMethod": "render", "isStatic": true, "sourceClass": "qx.module.Template", "name": "render"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "template"}, "type": "param", "children": [{"attributes": {"text": "<p>The String containing the template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "view"}, "type": "param", "children": [{"attributes": {"text": "<p>The object holding the data to render.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "partials"}, "type": "param", "children": [{"attributes": {"text": "<p>Object holding parts of a template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Original and only template method of mustache.js. For further\ndocumentation, please visit <a href=\"https://github.com/janl/mustache.js\">https://github.com/janl/mustache.js</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "template.render", "targetClass": "qxWeb", "sourceMethod": "render", "sourceClass": "qx.module.Template"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The parsed template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "endsWith", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "endsWith"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fullstr"}, "type": "param", "children": [{"attributes": {"text": "<p>the string to search in</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "substr"}, "type": "param", "children": [{"attributes": {"text": "<p>the substring to look for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the string ends with the given substring.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.endsWith", "targetClass": "qxWeb", "sourceMethod": "endsWith", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the string ends with the given substring</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 115, "sourceMethod": "setSessionItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "setSessionItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The data, which will be stored as <span class=\"caps\">JSON</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Store an item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.setItem", "targetClass": "qxWeb", "sourceMethod": "setSessionItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 502, "sourceMethod": "isElement", "isStatic": true, "sourceClass": "qx.module.Traversing", "name": "isElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isElement", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM element"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "equals", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "equals"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>first array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>second array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Check whether the two arrays have the same content. Checks only the\nequality of the arrays&#8217; content.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.equals", "targetClass": "qxWeb", "sourceMethod": "equals", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the two arrays are equal</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 514, "sourceMethod": "isNode", "isStatic": true, "sourceClass": "qx.module.Traversing", "name": "isNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>Object to check</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the given object is a <span class=\"caps\">DOM</span> node</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isNode", "sourceClass": "qx.module.Traversing"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the object is a DOM node"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "remove", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "remove"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>element to be removed from the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove an element from the array.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.remove", "targetClass": "qxWeb", "sourceMethod": "remove", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the removed element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "escapeRegexpChars", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "escapeRegexpChars"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string where to escape the chars.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Escapes all chars that have a special meaning in regular expressions.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.escapeRegexpChars", "targetClass": "qxWeb", "sourceMethod": "escapeRegexpChars", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the string with the escaped chars.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 147, "sourceMethod": "getSessionLength", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getSessionLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the amount of key-value pairs stored.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.getLength", "targetClass": "qxWeb", "sourceMethod": "getSessionLength", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The length of the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "del", "isStatic": true, "sourceClass": "qx.module.Cookie", "name": "del"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key for the string value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "path"}, "type": "param", "children": [{"attributes": {"text": "<p>Path value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "domain"}, "type": "param", "children": [{"attributes": {"text": "<p>Domain value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Deletes the string value of a cookie.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "cookie.del", "targetClass": "qxWeb", "sourceMethod": "del", "sourceClass": "qx.module.Cookie"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "max", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "max"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the highest value in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.max", "targetClass": "qxWeb", "sourceMethod": "max", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The highest of all values or undefined if array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "undefined"}, "type": "entry"}]}]}]}, {"attributes": {"line": 37, "sourceMethod": "setLocalItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "setLocalItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The data, which will be stored as <span class=\"caps\">JSON</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Store an item in the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.setItem", "targetClass": "qxWeb", "sourceMethod": "setLocalItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 73, "sourceMethod": "script", "isStatic": true, "sourceClass": "qx.module.Io", "name": "script"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a predefined script tag wrapper which can be used to load data\nfrom cross-domain origins.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "io.script", "targetClass": "qxWeb", "sourceMethod": "script", "sourceClass": "qx.module.Io"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The request object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Script"}, "type": "entry"}]}]}]}, {"attributes": {"line": 103, "sourceMethod": "forEachLocal", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "forEachLocal"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>A function which will be called for every item. The function will have two arguments, first the key and second the value of the stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to access every stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.forEach", "targetClass": "qxWeb", "sourceMethod": "forEachLocal", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 181, "sourceMethod": "forEachSession", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "forEachSession"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>A function which will be called for every item. The function will have two arguments, first the key and second the value of the stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>The scope of the function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper to access every stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.forEach", "targetClass": "qxWeb", "sourceMethod": "forEachSession", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "exclude", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "exclude"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr1"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "arr2"}, "type": "param", "children": [{"attributes": {"text": "<p>the elements of this array will be excluded from the other one</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Modifies the first array as it removes all elements\nwhich are listed in the second array as well.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.exclude", "targetClass": "qxWeb", "sourceMethod": "exclude", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The modified array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 69, "sourceMethod": "getLocalLength", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getLocalLength"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the amount of key-value pairs stored.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.getLength", "targetClass": "qxWeb", "sourceMethod": "getLocalLength", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The length of the storage.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 55, "sourceMethod": "get", "isStatic": true, "sourceClass": "qx.module.Template", "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>The id of the <span class=\"caps\">HTML</span> template in the <span class=\"caps\">DOM</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "view"}, "type": "param", "children": [{"attributes": {"text": "<p>The object holding the data to render.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "partials"}, "type": "param", "children": [{"attributes": {"text": "<p>Object holding parts of a template.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper method which provides direct access to templates stored as <span class=\"caps\">HTML</span> in\nthe <span class=\"caps\">DOM</span>. The <span class=\"caps\">DOM</span> node with the given ID will be treated as a template,\nparsed and a new <span class=\"caps\">DOM</span> node will be returned containing the parsed data.\nKeep in mind that templates can only have one root element.\nAdditionally, you should not put the template into a regular, hidden\n<span class=\"caps\">DOM</span> element because the template may not be valid <span class=\"caps\">HTML</span> due to the containing\nmustache tags. We suggest to put it into a script tag with the type\n<code>text/template</code>.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "template.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.Template"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing a single <span class=\"caps\">DOM</span> element with the parsed template data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 56, "sourceMethod": "update", "isStatic": true, "sourceClass": "qx.module.Placeholder", "name": "update"}, "type": "method", "children": [{"attributes": {"text": "<p>Queries for all input and textarea elements on the page and updates\ntheir placeholder.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "placeholder.update", "targetClass": "qxWeb", "sourceMethod": "update", "sourceClass": "qx.module.Placeholder"}, "type": "attachStatic"}]}, {"attributes": {"line": 59, "sourceMethod": "removeLocalItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "removeLocalItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an item form the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "localStorage.removeItem", "targetClass": "qxWeb", "sourceMethod": "removeLocalItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 363, "sourceMethod": "$registerNormalization", "isStatic": true, "sourceClass": "qx.module.Event", "name": "$registerNormalization"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types to be normalized. Use an asterisk (<code>*</code>) to normalize all event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "normalizer"}, "type": "param", "children": [{"attributes": {"text": "<p>Normalizer function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a normalization function for the given event types. Listener\ncallbacks for these types will be called with the return value of the\nnormalization function instead of the regular event object.</p>\n\n<p>The normalizer will be called with two arguments: The original event\nobject and the element on which the event was triggered</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$registerEventNormalization", "targetClass": "qxWeb", "sourceMethod": "$registerNormalization", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}, {"attributes": {"line": 1, "sourceMethod": "cast", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "cast"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>any array-like object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "constructor"}, "type": "param", "children": [{"attributes": {"text": "<p>constructor of the new instance</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "name": "offset"}, "type": "param", "children": [{"attributes": {"text": "<p>position to start from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts an array like object to any other array like\nobject.</p>\n\n<p>Attention: The returned array may be same\ninstance as the incoming one if the constructor is identical!</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.cast", "targetClass": "qxWeb", "sourceMethod": "cast", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the converted array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 51, "sourceMethod": "get", "isStatic": true, "sourceClass": "qx.module.Environment", "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to check for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the value stored for the given key.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "env.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.Environment"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The value stored for the given key.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 137, "sourceMethod": "removeSessionItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "removeSessionItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes an item form the storage.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.removeItem", "targetClass": "qxWeb", "sourceMethod": "removeSessionItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}]}, {"attributes": {"line": 49, "sourceMethod": "hyphenate", "isStatic": true, "sourceClass": "qx.module.util.String", "name": "hyphenate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>camelcased string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Converts a camelcased string to a hyphenated (separated by &#8217;-&#8217;) string.</p>\n\n<p>Example:</p>\n\n<pre class=\"javascript\">q.string.hyphenate(\"weLikeCookies\"); //returns \"we-like-cookies\"</pre>"}, "type": "desc"}, {"attributes": {"targetMethod": "string.hyphenate", "targetClass": "qxWeb", "sourceMethod": "hyphenate", "sourceClass": "qx.module.util.String"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>hyphenated string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 127, "sourceMethod": "getSessionItem", "isStatic": true, "sourceClass": "qx.module.Storage", "name": "getSessionItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The identifier to get the data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the stored item.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "sessionStorage.getItem", "targetClass": "qxWeb", "sourceMethod": "getSessionItem", "sourceClass": "qx.module.Storage"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The stored data.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "get", "isStatic": true, "sourceClass": "qx.module.util.Type", "name": "get"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to get the class for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the internal class of the value. The following classes are possible:\n<code>&#8220;String&#8221;</code>,\n<code>&#8220;Array&#8221;</code>,\n<code>&#8220;Object&#8221;</code>,\n<code>&#8220;RegExp&#8221;</code>,\n<code>&#8220;Number&#8221;</code>,\n<code>&#8220;Boolean&#8221;</code>,\n<code>&#8220;Date&#8221;</code>,\n<code>&#8220;Function&#8221;</code>,\n<code>&#8220;Error&#8221;</code>\n</pre></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "type.get", "targetClass": "qxWeb", "sourceMethod": "get", "sourceClass": "qx.module.util.Type"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The internal class of the value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 49, "sourceMethod": "xhr", "isStatic": true, "sourceClass": "qx.module.Io", "name": "xhr"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "settings"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional settings map which may contain one of the following settings: <ul> <li><code>method</code> The method of the request. Default: <code><span class=\"caps\">GET</span></code></li> <li><code>async</code> flag to mark the request as asynchronous. Default: <code>true</code></li> <li><code>header</code> A map of request headers.</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a configured XMLHttpRequest object. Using the send method will\nfinally send the request.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "io.xhr", "targetClass": "qxWeb", "sourceMethod": "xhr", "sourceClass": "qx.module.Io"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The request object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Xhr"}, "type": "entry"}]}]}]}, {"attributes": {"line": 63, "sourceMethod": "add", "isStatic": true, "sourceClass": "qx.module.Environment", "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "key"}, "type": "param", "children": [{"attributes": {"text": "<p>The key to store the value for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to store.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a new environment setting which can be queried via {@link #get}.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "env.add", "targetClass": "qxWeb", "sourceMethod": "add", "sourceClass": "qx.module.Environment"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "insertBefore", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "insertBefore"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "obj2"}, "type": "param", "children": [{"attributes": {"text": "<p>insert obj1 before this object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array before a given second element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.insertBefore", "targetClass": "qxWeb", "sourceMethod": "insertBefore", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The given array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "min", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "min"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>Array to process.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the lowest value in the given array. Supports\nnumeric values only.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.min", "targetClass": "qxWeb", "sourceMethod": "min", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The lowest of all values or undefined if array is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "undefined"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1, "sourceMethod": "insertAfter", "isStatic": true, "sourceClass": "qx.module.util.Array", "name": "insertAfter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arr"}, "type": "param", "children": [{"attributes": {"text": "<p>the array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "obj"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be inserted</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "obj2"}, "type": "param", "children": [{"attributes": {"text": "<p>insert obj1 after this object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Insert an element into the array after a given second element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "array.insertAfter", "targetClass": "qxWeb", "sourceMethod": "insertAfter", "sourceClass": "qx.module.util.Array"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The given array.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "$getHookRegistry", "isInternal": true, "sourceMethod": "$getHookRegistry", "access": "internal", "line": 496, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns all registered event hooks</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$getEventHookRegistry", "targetClass": "qxWeb", "sourceMethod": "$getHookRegistry", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of event types/registration hook functions</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 94, "sourceMethod": "jsonp", "isStatic": true, "sourceClass": "qx.module.Io", "name": "jsonp"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "url"}, "type": "param", "children": [{"attributes": {"text": "<p>Mandatory <span class=\"caps\">URL</span> to load the data from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "settings"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional settings map which may contain one of the following settings:  * <code>callbackName</code>: The name of the callback which will be called by the loaded script. * <code>callbackParam</code>: The name of the callback expected by the server</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a predefined script tag wrapper which can be used to load data\nfrom cross-domain origins via <span class=\"caps\">JSONP</span>.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "io.jsonp", "targetClass": "qxWeb", "sourceMethod": "jsonp", "sourceClass": "qx.module.Io"}, "type": "attachStatic"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The request object.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.bom.request.Jsonp"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "$unregisterEventHook", "isInternal": true, "sourceMethod": "$unregisterEventHook", "access": "internal", "line": 464, "sourceClass": "qx.module.Event"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "types"}, "type": "param", "children": [{"attributes": {"text": "<p>List of event types</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "registerHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event registration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "unregisterHook"}, "type": "param", "children": [{"attributes": {"text": "<p>Hook function to be called on event deregistration</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters a hook from the given event types.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "$unregisterEventHooks", "targetClass": "qxWeb", "sourceMethod": "$unregisterEventHook", "sourceClass": "qx.module.Event"}, "type": "attachStatic"}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "private", "type": "Array", "name": "__init", "value": "[]"}, "type": "constant"}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 161, "isCtor": true, "overriddenFrom": "qx.type.BaseArray", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Valid selector (CSS3 + extensions) or <span class=\"caps\">DOM</span> element or Array of <span class=\"caps\">DOM</span> Elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Only the children of this element are considered.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Accepts a selector string and returns a set of found items. The optional context\nelement can be used to reduce the amount of found elements to children of the\ncontext element.</p>\n\n<a href=\"http://sizzlejs.com/\" target=\"_blank\">Sizzle</a> is used as selector engine.\nCheck out the <a href=\"https://github.com/jquery/sizzle/wiki/Sizzle-Home\" target=\"_blank\">documentation</a>\nfor more details."}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A collection of <span class=\"caps\">DOM</span> elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 244, "overriddenFrom": "qx.type.BaseArray", "name": "concat"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>As many items as you want to add.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a copy of the collection including the given elements.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing all items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 184, "overriddenFrom": "qx.type.BaseArray", "name": "filter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a new collection containing only those elements that passed the\ngiven filter. This can be either a selector expression or a filter\nfunction.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the elements that passed the filter</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 233, "overriddenFrom": "qx.type.BaseArray", "name": "map"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Function which produces the new element.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "thisarg"}, "type": "param", "children": [{"attributes": {"text": "<p>Context of the callback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a new collection containing the modified elements. For more details, check out the\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\"><span class=\"caps\">MDN</span> documentation</a>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the elements that passed the filter</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 199, "overriddenFrom": "qx.type.BaseArray", "name": "slice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "begin"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to begin.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "end"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to end.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a copy of the collection within the given range.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing a slice of the original collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 220, "overriddenFrom": "qx.type.BaseArray", "name": "splice"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The index to begin.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "howMany"}, "type": "param", "children": [{"attributes": {"text": "<p>the amount of items to remove.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>As many items as you want to add.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given number of items and returns the removed items as a new collection.\nThis method can also add items. Take a look at the\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\" target=\"_blank\">documentation of <span class=\"caps\">MDN</span></a> for more details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing the removed items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "q"}, "type": "entry"}]}]}]}, {"attributes": {"line": 475, "sourceMethod": "getOffsetParent", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getOffsetParent"}, "type": "method", "children": [{"attributes": {"text": "<p>Gets a new collection containing the offset parent of each item in the\ncurrent set.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getOffsetParent", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing offset parents</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 396, "sourceMethod": "show", "isStatic": false, "sourceClass": "qx.module.Css", "name": "show"}, "type": "method", "children": [{"attributes": {"text": "<p>Shows any elements with &#8220;display: none&#8221; in the collection. If an element\nwas hidden by using the {@link #hide} method, its previous\n&#8220;display&#8221; style value will be re-applied. Otherwise, the\ndefault &#8220;display&#8221; value for the element type will be applied.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "show", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 149, "sourceMethod": "setTransformStyle", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformStyle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Either <code>flat</code> or <code>preserve-3d</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the transform-style property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-style-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformStyle", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 73, "sourceMethod": "updatePlaceholder", "isStatic": false, "sourceClass": "qx.module.Placeholder", "name": "updatePlaceholder"}, "type": "method", "children": [{"attributes": {"text": "<p>Updates the placeholders for input&#8217;s and textarea&#8217;s in the collection.\nThis includes positioning, styles and <span class=\"caps\">DOM</span> positioning.\nIn case the browser supports native placeholders, this methods simply\ndoes nothing.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "updatePlaceholder", "sourceClass": "qx.module.Placeholder"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 218, "sourceMethod": "setTransformPerspectiveOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformPerspectiveOrigin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> position values like <code>50% 50%</code> or <code>left top</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the perspective-origin property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformPerspectiveOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 35, "sourceMethod": "setStyle", "isStatic": false, "sourceClass": "qx.module.Css", "name": "setStyle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the style property to modify</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Modifies the given style property on all elements in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setStyle", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 56, "sourceMethod": "getChildren", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getChildren"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all of the unique immediate children of\neach of the matched set of elements.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getChildren", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the child elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 222, "sourceMethod": "unblock", "isStatic": false, "sourceClass": "qx.module.Blocker", "name": "unblock"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes the blockers from all items in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "unblock", "sourceClass": "qx.module.Blocker"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 267, "sourceMethod": "getTransformBackfaceVisibility", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformBackfaceVisibility"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the backface-visibility property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\">http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformBackfaceVisibility", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if the backface is visible."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 214, "sourceMethod": "find", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "find"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression to match the child elements against</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Searches the child elements of each item in the collection and returns\na new collection containing the children that match the provided selector</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "find", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the matching child elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 318, "sourceMethod": "before", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "before"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string(s) or <span class=\"caps\">DOM</span> element(s)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts content before each element in the collection. This can either\nbe an <span class=\"caps\">HTML</span> string, an array of <span class=\"caps\">HTML</span> strings, a single <span class=\"caps\">DOM</span> element or an\narray of elements.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "before", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 218, "sourceMethod": "pause", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "pause"}, "type": "method", "children": [{"attributes": {"text": "<p>Manipulates the play state of the animation.\nThis can be used to pause an animation when running.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "pause", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 414, "sourceMethod": "getPrevUntil", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getPrevUntil"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the preceding sibling elements of each\nitem in the current set (ignoring text and comment nodes) up to but not\nincluding any element that matches the given selector.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPrevUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing preceding siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 182, "sourceMethod": "getClosest", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getClosest"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set containing the closest matching ancestor for each item in\nthe collection.\nIf the item itself matches, it is added to the new set. Otherwise, the\nitem&#8217;s parent chain will be traversed until a match is found.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getClosest", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the closest matching ancestors</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 306, "sourceMethod": "getContentHeight", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getContentHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the content height of the first element in the collection.\nThis is the maximum height the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getContentHeight", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Computed content height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 88, "sourceMethod": "getStyles", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getStyles"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of style property names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the values of multiple style properties for each item in the\ncollection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getStyles", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of style property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 227, "sourceMethod": "replaceClass", "isStatic": false, "sourceClass": "qx.module.Css", "name": "replaceClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "oldName"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "newName"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replaces a class name on each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "replaceClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 40, "sourceMethod": "add", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "add"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "el"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> element to add to the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an element to the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "add", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "name": "__getElementArray", "isInternal": true, "sourceMethod": "__getElementArray", "access": "internal", "line": 192, "sourceClass": "qx.module.Manipulating"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "arg"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns an array from a selector expression or a single element</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__getElementArray", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Array of elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"line": 119, "sourceMethod": "getAncestors", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getAncestors"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all ancestors of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAncestors", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 298, "sourceMethod": "has", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "has"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing only the elements that have descendants\nmatching the given selector</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "has", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a new collection containing only elements with matching descendants</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 104, "sourceMethod": "addClass", "isStatic": false, "sourceClass": "qx.module.Css", "name": "addClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds a class name to each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "addClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 300, "sourceMethod": "fadeOut", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "fadeOut"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fades out all elements in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "fadeOut", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 134, "sourceMethod": "removeClass", "isStatic": false, "sourceClass": "qx.module.Css", "name": "removeClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>The class name to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes a class name from each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 235, "sourceMethod": "stop", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "stop"}, "type": "method", "children": [{"attributes": {"text": "<p>Stops a running animation.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "stop", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 381, "sourceMethod": "getScrollLeft", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "getScrollLeft"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the left scroll position of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getScrollLeft", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Current left scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 527, "sourceMethod": "focus", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "focus"}, "type": "method", "children": [{"attributes": {"text": "<p>Focuses the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "focus", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 78, "sourceMethod": "forEach", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "forEach"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fn"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "ctx"}, "type": "param", "children": [{"attributes": {"text": "<p>Context object</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Executes the provided callback function once for each item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "forEach", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 454, "sourceMethod": "not", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "not"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Remove elements from the collection that do not pass the given filter.\nThis can be either a selector expression or a filter function</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "not", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Reduced collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 354, "sourceMethod": "getNextUntil", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getNextUntil"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the following sibling elements of each\nitem in the current set (ignoring text and comment nodes) up to but not\nincluding any element that matches the given selector.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNextUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing following siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 109, "sourceMethod": "setAttributes", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "setAttributes"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of attribute name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets multiple attributes for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setAttributes", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 144, "sourceMethod": "animateReverse", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "animateReverse"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The animation&#8217;s description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds of the animation, which will override the duration given in the description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Starts an animation in reversed order. For further details, take a look at\nthe {@link #animate} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "animateReverse", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 287, "sourceMethod": "remove", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "remove"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes each element in the current collection from the <span class=\"caps\">DOM</span></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "remove", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 200, "sourceMethod": "getTransformPerspective", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformPerspective"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the perspective property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformPerspective", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, e.g. <code>500</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 124, "sourceMethod": "getAttributes", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "getAttributes"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of attribute names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the values of multiple attributes for the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAttributes", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of attribute name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 380, "sourceMethod": "getPrev", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getPrev"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the previous sibling element of each item in\nthe current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPrev", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing previous siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 119, "sourceMethod": "addClasses", "isStatic": false, "sourceClass": "qx.module.Css", "name": "addClasses"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of class names to add</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds multiple class names to each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "addClasses", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 324, "sourceMethod": "getContentWidth", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getContentWidth"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the content width of the first element in the collection.\nThis is the maximum width the element can use, excluding borders,\nmargins, padding or scroll bars.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getContentWidth", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Computed content width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 178, "sourceMethod": "getClass", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getClass"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the class name of the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 47, "sourceMethod": "setHtml", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "setHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the <span class=\"caps\">HTML</span> content of each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setHtml", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 129, "sourceMethod": "animate", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "animate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "desc"}, "type": "param", "children": [{"attributes": {"text": "<p>The animation&#8217;s description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds of the animation, which will override the duration given in the description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Starts the animation with the given description.\nThe description should be a map, which could look like this:</p>\n\n<pre class=\"javascript\">\n{\n  \"duration\": 1000,\n  \"keep\": 100,\n  \"keyFrames\": {\n    0 : {\"opacity\": 1, \"scale\": 1},\n    100 : {\"opacity\": 0, \"scale\": 0}\n  },\n  \"origin\": \"50% 50%\",\n  \"repeat\": 1,\n  \"timing\": \"ease-out\",\n  \"alternate\": false,\n  \"delay\": 2000\n}\n</pre>\n\n<p><strong>duration</strong> is the time in milliseconds one animation cycle should take.</p>\n\n<p><strong>keep</strong> is the key frame to apply at the end of the animation. (optional)</p>\n\n<p><strong>keyFrames</strong> is a map of separate frames. Each frame is defined by a\n  number which is the percentage value of time in the animation. The value\n  is a map itself which holds css properties or transforms\n  (Transforms only for <span class=\"caps\">CSS</span> Animations).</p>\n\n<p><strong>origin</strong> maps to the transform origin {@link qx.bom.element.Transform#setOrigin}\n  (Only for <span class=\"caps\">CSS</span> animations).</p>\n\n<p><strong>repeat</strong> is the amount of time the animation should be run in\n  sequence. You can also use &#8220;infinite&#8221;.</p>\n\n<p><strong>timing</strong> takes one of these predefined values:\n  <code>ease</code> | <code>linear</code> | <code>ease-in</code>\n  | <code>ease-out</code> | <code>ease-in-out</code> |\n  <code>cubic-bezier(&lt;number&gt;, &lt;number&gt;, &lt;number&gt;, &lt;number&gt;)</code>\n  (cubic-bezier only available for <span class=\"caps\">CSS</span> animations)</p>\n\n<p><strong>alternate</strong> defines if every other animation should be run in reverse order.</p>\n\n<p><strong>delay</strong> is the time in milliseconds the animation should wait before start.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "animate", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 263, "sourceMethod": "eq", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "eq"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>The position of the element in the collection</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Reduce the set of matched elements to a single element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "eq", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 76, "sourceMethod": "append", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "append"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "html"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string or <span class=\"caps\">DOM</span> element(s) to append</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Appends content to each element in the current set. Accepts an <span class=\"caps\">HTML</span> string,\na single <span class=\"caps\">DOM</span> element or an array of elements</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "append", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 230, "sourceMethod": "getContents", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getContents"}, "type": "method", "children": [{"attributes": {"text": "<p>Gets a new set of elements containing the child nodes of each item in the\ncurrent set.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getContents", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection containing the child nodes</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 76, "sourceMethod": "scale", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "scale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to scale.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scales by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "scale", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 374, "sourceMethod": "hide", "isStatic": false, "sourceClass": "qx.module.Css", "name": "hide"}, "type": "method", "children": [{"attributes": {"text": "<p>Hides all elements in the collection by setting their &#8220;display&#8221;\nstyle to &#8220;none&#8221;. The previous value is stored so it can be re-applied\nwhen {@link #show} is called.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hide", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 251, "sourceMethod": "setTransformBackfaceVisibility", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformBackfaceVisibility"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<code>true</code> if the backface should be visible."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the backface-visibility property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property\">http://www.w3.org/TR/css3-3d-transforms/#backface-visibility-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformBackfaceVisibility", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 544, "sourceMethod": "blur", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "blur"}, "type": "method", "children": [{"attributes": {"text": "<p>Blurs each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "blur", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 242, "sourceMethod": "setValue", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "setValue"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Number"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies the given value to each element in the collection.\nNormally the value is given as a string/number value and applied to the\nfield content (textfield, textarea) or used to detect whether the field\nis checked (checkbox, radiobutton).\nSupports array values for selectboxes (multiple selection) and checkboxes\nor radiobuttons (for convenience).\nPlease note: To modify the value attribute of a checkbox or radiobutton\nuse @link{#set} instead.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setValue", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 440, "sourceMethod": "getSiblings", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getSiblings"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all sibling elements of the items in the\ncurrent set.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getSiblings", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing sibling elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 211, "sourceMethod": "toggleClasses", "isStatic": false, "sourceClass": "qx.module.Css", "name": "toggleClasses"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>Class names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Toggles the given list of class names on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "toggleClasses", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 252, "sourceMethod": "isPlaying", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "isPlaying"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns whether an animation is running or not.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isPlaying", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if an animation is running."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 56, "sourceMethod": "on", "isStatic": false, "sourceClass": "qx.module.Event", "name": "on"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event to listen for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Registers a listener for the given event type on each item in the\ncollection. This can be either native or custom events.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "on", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 198, "sourceMethod": "block", "isStatic": false, "sourceClass": "qx.module.Blocker", "name": "block"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "transparent", "name": "color"}, "type": "param", "children": [{"attributes": {"text": "<p>The color for the blocker element (any <span class=\"caps\">CSS</span> color value)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "0", "name": "opacity"}, "type": "param", "children": [{"attributes": {"text": "<p>The <span class=\"caps\">CSS</span> opacity value for the blocker</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Float"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "10000", "name": "zIndex"}, "type": "param", "children": [{"attributes": {"text": "<p>The zIndex value for the blocker</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Adds an overlay to all items in the collection that intercepts mouse\nevents.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "block", "sourceClass": "qx.module.Blocker"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 184, "sourceMethod": "setTransformPerspective", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformPerspective"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The perspective layer. Numbers between 100 and 5000 give the best results.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the perspective property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformPerspective", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 94, "sourceMethod": "removeAttribute", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "removeAttribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes the given attribute from all elements in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeAttribute", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 79, "sourceMethod": "getAttribute", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "getAttribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given attribute for the first item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAttribute", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Attribute value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 231, "sourceMethod": "hasListener", "isStatic": false, "sourceClass": "qx.module.Event", "name": "hasListener"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type, e.g. <code>mousedown</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if one or more listeners for the given event type are attached to\nthe first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hasListener", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if one or more listeners are attached"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 262, "sourceMethod": "getWidth", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getWidth"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the rendered width of the first element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getWidth", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first item&#8217;s rendered width</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 212, "sourceMethod": "wrap", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "wrap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "wrapper"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression, <span class=\"caps\">HTML</span> string, <span class=\"caps\">DOM</span> element or list of <span class=\"caps\">DOM</span> elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Wraps each element in the collection in a copy of an <span class=\"caps\">HTML</span> structure.\nElements will be appended to the deepest nested element in the structure\nas determined by a depth-first search.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "wrap", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 100, "sourceMethod": "skew", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "skew"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to skew e.g. <code>&#8220;90deg&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Skews by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "skew", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 47, "sourceMethod": "transform", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "transform"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "transforms"}, "type": "param", "children": [{"attributes": {"text": "<p>The map containing the transforms and value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Method to apply multiple transforms at once to the given element. It\ntakes a map containing the transforms you want to apply plus the values\ne.g.<code>{scale: 2, rotate: &#8220;5deg&#8221;}</code>.\nThe values can be either singular, which means a single value will\nbe added to the <span class=\"caps\">CSS</span>. If you give an array, the values will be split up\nand each array entry will be used for the X, Y or Z dimension in that\norder e.g. <code>{scale: [2, 0.5]}</code> will result in a element\ndouble the size in X direction and half the size in Y direction.\nMake sure your browser supports all transformations you apply.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "transform", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 166, "sourceMethod": "getTransformStyle", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformStyle"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the transform-style property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-style-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-style-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformStyle", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, either <code>flat</code> or <code>preserve-3d</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 193, "sourceMethod": "toggleClass", "isStatic": false, "sourceClass": "qx.module.Css", "name": "toggleClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Toggles the given class name on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "toggleClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 164, "sourceMethod": "insertAfter", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "insertAfter"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts the current collection after each target item. The collection\nitems are moved after the first target. For subsequent targets,\nclones of the collection items are created and inserted.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "insertAfter", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 63, "sourceMethod": "translate", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "translate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>The value to translate e.g. <code>&#8220;10px&#8221;</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Translates by the given value. For further details, take\na look at the {@link #transform} method.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "translate", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 132, "sourceMethod": "getTransformOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformOrigin"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the transform-origin property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, e.g. <code>50% 50%</code> or null, of the collection is empty.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 96, "sourceMethod": "getParents", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getParents"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"defaultValue": "null", "name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing the parent of each element in the\ncollection.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getParents", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the parent elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 301, "sourceMethod": "empty", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "empty"}, "type": "method", "children": [{"attributes": {"text": "<p>Removes all content from the elements in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "empty", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "name": "__getAncestors", "isInternal": true, "sourceMethod": "__getAncestors", "access": "internal", "line": 152, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector that indicates where to stop including ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Internal helper for getAncestors and getAncestorsUntil</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__getAncestors", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 399, "sourceMethod": "getPrevAll", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getPrevAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all preceding sibling elements of each\nitem in the current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPrevAll", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing preceding siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 115, "sourceMethod": "setTransformOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "setTransformOrigin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> position values like <code>50% 50%</code> or <code>left top</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the transform-origin property.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#transform-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setTransformOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>This reference for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 149, "sourceMethod": "removeClasses", "isStatic": false, "sourceClass": "qx.module.Css", "name": "removeClasses"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of class names to remove</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes multiple class names from each element in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeClasses", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 493, "sourceMethod": "setScrollTop", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "setScrollTop"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Top scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional: Duration in ms for animated scrolling</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the elements of the collection to the given coordinate.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setScrollTop", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 156, "sourceMethod": "setProperty", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "setProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Property value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets a property on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setProperty", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 343, "sourceMethod": "getPosition", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getPosition"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the distance between the first element in the collection and its\noffset parent</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getPosition", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>a map with the keys <code>left</code> and <code>top</code> containing the distance between the elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 172, "sourceMethod": "getProperty", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "getProperty"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given property for the first item in the\ncollection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getProperty", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Property value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 457, "sourceMethod": "setScrollLeft", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "setScrollLeft"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Left scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional: Duration in ms for animated scrolling</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Scrolls the elements of the collection to the given coordinate.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setScrollLeft", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 63, "sourceMethod": "setAttribute", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "setAttribute"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Attribute value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets an <span class=\"caps\">HTML</span> attribute on each item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setAttribute", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 220, "sourceMethod": "getValue", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "getValue"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the currently configured value for the first item in the collection.\nWorks with simple input fields as well as with select boxes or option\nelements. Returns an array for select boxes with multi selection. In all\nother cases, a string is returned.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getValue", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 234, "sourceMethod": "getTransformPerspectiveOrigin", "isStatic": false, "sourceClass": "qx.module.Transform", "name": "getTransformPerspectiveOrigin"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the perspective-origin property of the first element.</p>\n\n<p>Spec: <a href=\"http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property\">http://www.w3.org/TR/css3-3d-transforms/#perspective-origin-property</a></p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getTransformPerspectiveOrigin", "sourceClass": "qx.module.Transform"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The set property, e.g. <code>50% 50%</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": false, "name": "__hierarchyHelper", "isInternal": true, "sourceMethod": "__hierarchyHelper", "access": "internal", "line": 569, "sourceClass": "qx.module.Traversing"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "collection"}, "type": "param", "children": [{"attributes": {"text": "<p>Collection to iterate over (any Array-like object)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"name": "method"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the qx.dom.Hierarchy method to apply</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector that elements to be included must match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Helper function that iterates over a set of items and applies the given\nqx.dom.Hierarchy method to each entry, storing the results in a new Array.\nDuplicates are removed and the items are filtered if a selector is\nprovided.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "__hierarchyHelper", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Result array</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"line": 202, "sourceMethod": "getProperties", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "getProperties"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "names"}, "type": "param", "children": [{"attributes": {"text": "<p>List of property names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the values of multiple properties for the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getProperties", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Map of property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 140, "sourceMethod": "removeAttributes", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "removeAttributes"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "attributes"}, "type": "param", "children": [{"attributes": {"text": "<p>List of attribute names</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Removes multiple attributes from each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "removeAttributes", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 191, "sourceMethod": "emit", "isStatic": false, "sourceClass": "qx.module.Event", "name": "emit"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Event type</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional data that will be passed to the listener callback function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fire an event of the given type.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "emit", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 137, "sourceMethod": "getAncestorsUntil", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getAncestorsUntil"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector that indicates where to stop including ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "filter"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector to match</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a set of elements containing all ancestors of each element in the\ncollection, up to (but not including) the element matched by the provided\nselector.\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getAncestorsUntil", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Collection containing the ancestor elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 320, "sourceMethod": "getNext", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getNext"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing the next sibling element of each item in\nthe current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNext", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing next siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 403, "sourceMethod": "getScrollTop", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "getScrollTop"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the top scroll position of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getScrollTop", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Current top scroll position</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 248, "sourceMethod": "is", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "is"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or filter function</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if at least one element in the collection passes the provided\nfilter. This can be either a selector expression or a filter\nfunction</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "is", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if at least one element matches"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 339, "sourceMethod": "getNextAll", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getNextAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param", "children": [{"attributes": {"text": "<p>Optional selector expression</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a collection containing all following sibling elements of each\nitem in the current set (ignoring text and comment nodes).\nThis set can be filtered with an optional expression that will cause only\nelements matching the selector to be collected.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getNextAll", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New set containing following siblings</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 32, "sourceMethod": "getHtml", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "getHtml"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the <span class=\"caps\">HTML</span> content of the first item in the collection</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getHtml", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> content or null if the collection is empty</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 288, "sourceMethod": "getOffset", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getOffset"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the computed location of the given element in the context of the\ndocument dimensions.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getOffset", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A map with the keys <code>left<code>>, <code>top<code</code>>, <code>right<code>> and <code>bottom<code</code>> which contains the distance of the element relative to the document.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"line": 240, "sourceMethod": "getHeight", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getHeight"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the rendered height of the first element in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getHeight", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The first item&#8217;s rendered height</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"line": 72, "sourceMethod": "setStyles", "isStatic": false, "sourceClass": "qx.module.Css", "name": "setStyles"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "styles"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of style property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets multiple style properties for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setStyles", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 106, "sourceMethod": "appendTo", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "appendTo"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "parent"}, "type": "param", "children": [{"attributes": {"text": "<p>Parent selector expression or list of parent elements</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Appends all items in the collection to the specified parents. If multiple\nparents are given, the items will be moved to the first parent, while\nclones of the items will be appended to subsequent parents.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "appendTo", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 287, "sourceMethod": "fadeIn", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "fadeIn"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "duration"}, "type": "param", "children": [{"attributes": {"text": "<p>The duration in milliseconds.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Fades in all elements in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "fadeIn", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 187, "sourceMethod": "setProperties", "isStatic": false, "sourceClass": "qx.module.Attribute", "name": "setProperties"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "properties"}, "type": "param", "children": [{"attributes": {"text": "<p>A map of property name/value pairs</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets multiple properties for each item in the collection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "setProperties", "sourceClass": "qx.module.Attribute"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 201, "sourceMethod": "play", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "play"}, "type": "method", "children": [{"attributes": {"text": "<p>Manipulates the play state of the animation.\nThis can be used to continue an animation when paused.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "play", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 285, "sourceMethod": "getLast", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getLast"}, "type": "method", "children": [{"attributes": {"text": "<p>Reduces the collection to the last element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getLast", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 134, "sourceMethod": "insertBefore", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "insertBefore"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Selector expression or <span class=\"caps\">DOM</span> element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts the current collection before each target item. The collection\nitems are moved before the first target. For subsequent targets,\nclones of the collection items are created and inserted.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "insertBefore", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 53, "sourceMethod": "clone", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "clone"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "events"}, "type": "param", "children": [{"attributes": {"text": "<p>clone event listeners. Default:</p>\n\n<pre>false</pre>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Clones the items in the current collection and returns them in a new set.\nEvent listeners can also be cloned.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "clone", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>New collection with clones</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 351, "sourceMethod": "after", "isStatic": false, "sourceClass": "qx.module.Manipulating", "name": "after"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> string(s) or <span class=\"caps\">DOM</span> element(s)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}, {"attributes": {"type": "Element", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts content after each element in the collection. This can either\nbe an <span class=\"caps\">HTML</span> string, an array of <span class=\"caps\">HTML</span> strings, a single <span class=\"caps\">DOM</span> element or an\narray of elements.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "after", "sourceClass": "qx.module.Manipulating"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 54, "sourceMethod": "getStyle", "isStatic": false, "sourceClass": "qx.module.Css", "name": "getStyle"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Style property name</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the value of the given style property for the first item in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getStyle", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Style property value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 274, "sourceMethod": "getFirst", "isStatic": false, "sourceClass": "qx.module.Traversing", "name": "getFirst"}, "type": "method", "children": [{"attributes": {"text": "<p>Reduces the collection to the first element.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "getFirst", "sourceClass": "qx.module.Traversing"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new collection containing one element</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 132, "sourceMethod": "off", "isStatic": false, "sourceClass": "qx.module.Event", "name": "off"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback context</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Unregisters event listeners for the given type from each element in the\ncollection.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "off", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 164, "sourceMethod": "hasClass", "isStatic": false, "sourceClass": "qx.module.Css", "name": "hasClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Class name to check for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks if the first element in the collection has the given class name</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "hasClass", "sourceClass": "qx.module.Css"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code> if the first item has the given class name"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 269, "sourceMethod": "isEnded", "isStatic": false, "sourceClass": "qx.module.Animation", "name": "isEnded"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns whether an animation has ended or not.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "isEnded", "sourceClass": "qx.module.Animation"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<code>true</code>, if an animation has ended."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 65, "sourceMethod": "placeTo", "isStatic": false, "sourceClass": "qx.module.Placement", "name": "placeTo"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>Placement target</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "position"}, "type": "param", "children": [{"attributes": {"text": "<p>Alignment of the object with the target, any of <code>&#8220;top-left&#8221;</code>, <code>&#8220;top-center&#8221;</code>, <code>&#8220;top-right&#8221;</code>, <code>&#8220;bottom-left&#8221;</code>, <code>&#8220;bottom-center&#8221;</code>, <code>&#8220;bottom-right&#8221;</code>, <code>&#8220;left-top&#8221;</code>, <code>&#8220;left-middle&#8221;</code>, <code>&#8220;left-bottom&#8221;</code>, <code>&#8220;right-top&#8221;</code>, <code>&#8220;right-middle&#8221;</code>, <code>&#8220;right-bottom&#8221;</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "offsets"}, "type": "param", "children": [{"attributes": {"text": "<p>Map with the desired offsets between the two elements. Must contain the keys <code>left</code>, <code>top</code>, <code>right</code> and <code>bottom</code></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"direct\"", "name": "modeX"}, "type": "param", "children": [{"attributes": {"text": "<p>Horizontal placement mode. Valid values are: <ul> <li><code>direct</code>: place the element directly at the given location.</li> <li><code>keep-align</code>: if the element is partially outside of the visible area, it is moved to the best fitting &#8216;edge&#8217; and &#8216;alignment&#8217; of the target. It is guaranteed the the new position attaches the object to one of the target edges and that it is aligned with a target edge.</li> <li><code>best-fit</code>: If the element is partially outside of the visible area, it is moved into the view port, ignoring any offset and position values.</li> </ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "\"direct\"", "name": "modeY"}, "type": "param", "children": [{"attributes": {"text": "<p>Vertical placement mode. Accepts the same values as the &#8216;modeX&#8217; argument.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Moves the first element in the collection, aligning it with the given\ntarget.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "placeTo", "sourceClass": "qx.module.Placement"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"line": 212, "sourceMethod": "once", "isStatic": false, "sourceClass": "qx.module.Event", "name": "once"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "type"}, "type": "param", "children": [{"attributes": {"text": "<p>Type of the event to listen for</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "listener"}, "type": "param", "children": [{"attributes": {"text": "<p>Listener callback</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "context"}, "type": "param", "children": [{"attributes": {"text": "<p>Context the callback function will be executed in. Default: The element on which the listener was registered</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Attaches a listener for the given event that will be executed only once.</p>"}, "type": "desc"}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "once", "sourceClass": "qx.module.Event"}, "type": "attach"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The collection for chaining</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}]}]}